/*
Package networkinstance is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /usr/local/google/home/wenbli/gocode/pkg/mod/github.com/openconfig/ygot@v0.24.2/genutil/names.go
using the following YANG input files:
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package networkinstance

import (
	oc "github.com/openconfig/lemming/gnmi/internal/config"
	"github.com/openconfig/ygot/ygot"
)

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6MulticastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4 YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4 YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4PathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4Path) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4PathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4Path) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4PathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6 YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6 YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6PathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6Path) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6PathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6Path) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6PathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPathAny struct {
	*ygot.NodePath
}

// Ebgp (container): Multipath configuration for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPath) Ebgp() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ebgp (container): Multipath configuration for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPathAny) Ebgp() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPath) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePathsPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny struct {
	*ygot.NodePath
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPath) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_EbgpPathAny) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath) ExportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny) ExportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPath) ImportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicyPathAny) ImportPolicy() *NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ApplyPolicy_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/allow-own-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/allow-own-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/disable-peer-as-filter YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/disable-peer-as-filter YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/replace-peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/replace-peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPathAny struct {
	*ygot.NodePath
}

// AllowOwnAs (leaf): Specify the number of occurrences of the local BGP speaker's
// AS that can occur within the AS_PATH before it is rejected.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-own-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/allow-own-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPath) AllowOwnAs() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-own-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowOwnAs (leaf): Specify the number of occurrences of the local BGP speaker's
// AS that can occur within the AS_PATH before it is rejected.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-own-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/allow-own-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPathAny) AllowOwnAs() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_AllowOwnAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-own-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePeerAsFilter (leaf): When set to true, the system advertises routes to a peer
// even if the peer's AS was in the AS path.  The default
// behavior (false) suppresses advertisements to peers if
// their AS number is in the AS path of the route.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-peer-as-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/disable-peer-as-filter"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPath) DisablePeerAsFilter() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-peer-as-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePeerAsFilter (leaf): When set to true, the system advertises routes to a peer
// even if the peer's AS was in the AS path.  The default
// behavior (false) suppresses advertisements to peers if
// their AS number is in the AS path of the route.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-peer-as-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/disable-peer-as-filter"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPathAny) DisablePeerAsFilter() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_DisablePeerAsFilterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-peer-as-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplacePeerAs (leaf): Replace occurrences of the peer's AS in the AS_PATH
// with the local autonomous system number
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/replace-peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPath) ReplacePeerAs() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "replace-peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplacePeerAs (leaf): Replace occurrences of the peer's AS in the AS_PATH
// with the local autonomous system number
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/replace-peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/as-path-options/config/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptionsPathAny) ReplacePeerAs() *NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_AsPathOptions_ReplacePeerAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "replace-peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/multihop-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/multihop-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When enabled the referenced group or neighbors are permitted
// to be indirectly connected - including cases where the TTL
// can be decremented between the BGP peers
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPath) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When enabled the referenced group or neighbors are permitted
// to be indirectly connected - including cases where the TTL
// can be decremented between the BGP peers
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultihopTtl (leaf): Time-to-live value to use when packets are sent to the
// referenced group or neighbors and ebgp-multihop is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multihop-ttl"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPath) MultihopTtl() *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multihop-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultihopTtl (leaf): Time-to-live value to use when packets are sent to the
// referenced group or neighbors and ebgp-multihop is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multihop-ttl"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/ebgp-multihop/config/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihopPathAny) MultihopTtl() *NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EbgpMultihop_MultihopTtlPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multihop-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling/config/treat-as-withdraw YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling/config/treat-as-withdraw YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPathAny struct {
	*ygot.NodePath
}

// TreatAsWithdraw (leaf): Specify whether erroneous UPDATE messages for which the
// NLRI can be extracted are reated as though the NLRI is
// withdrawn - avoiding session reset
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/treat-as-withdraw"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling/config/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPath) TreatAsWithdraw() *NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "treat-as-withdraw"},
			map[string]interface{}{},
			n,
		),
	}
}

// TreatAsWithdraw (leaf): Specify whether erroneous UPDATE messages for which the
// NLRI can be extracted are reated as though the NLRI is
// withdrawn - avoiding session reset
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/treat-as-withdraw"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/error-handling/config/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandlingPathAny) TreatAsWithdraw() *NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_ErrorHandling_TreatAsWithdrawPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "treat-as-withdraw"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/stale-routes-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/stale-routes-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): Enable or disable the graceful-restart capability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enable or disable the graceful-restart capability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable graceful-restart in helper mode only. When this
// leaf is set, the local system does not retain forwarding
// its own state during a restart, but supports procedures
// for the receiving speaker, as defined in RFC4724.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable graceful-restart in helper mode only. When this
// leaf is set, the local system does not retain forwarding
// its own state during a restart, but supports procedures
// for the receiving speaker, as defined in RFC4724.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Estimated time (in seconds) for the local BGP speaker to
// restart a session. This value is advertise in the graceful
// restart BGP capability.  This is a 12-bit value, referred to
// as Restart Time in RFC4724.  Per RFC4724, the suggested
// default value is <= the hold-time value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath) RestartTime() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Estimated time (in seconds) for the local BGP speaker to
// restart a session. This value is advertise in the graceful
// restart BGP capability.  This is a 12-bit value, referred to
// as Restart Time in RFC4724.  Per RFC4724, the suggested
// default value is <= the hold-time value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny) RestartTime() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_RestartTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaleRoutesTime (leaf): An upper-bound on the time thate stale routes will be
// retained by a router after a session is restarted. If an
// End-of-RIB (EOR) marker is received prior to this timer
// expiring stale-routes will be flushed upon its receipt - if
// no EOR is received, then when this timer expires stale paths
// will be purged. This timer is referred to as the
// Selection_Deferral_Timer in RFC4724
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/stale-routes-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPath) StaleRoutesTime() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "stale-routes-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaleRoutesTime (leaf): An upper-bound on the time thate stale routes will be
// retained by a router after a session is restarted. If an
// End-of-RIB (EOR) marker is received prior to this timer
// expiring stale-routes will be flushed upon its receipt - if
// no EOR is received, then when this timer expires stale paths
// will be purged. This timer is referred to as the
// Selection_Deferral_Timer in RFC4724
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/stale-routes-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/graceful-restart/config/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestartPathAny) StaleRoutesTime() *NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_GracefulRestart_StaleRoutesTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "stale-routes-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options/config/log-neighbor-state-changes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options/config/log-neighbor-state-changes YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPathAny struct {
	*ygot.NodePath
}

// LogNeighborStateChanges (leaf): Configure logging of peer state changes.  Default is
// to enable logging of peer state changes.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/log-neighbor-state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options/config/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPath) LogNeighborStateChanges() *NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "log-neighbor-state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LogNeighborStateChanges (leaf): Configure logging of peer state changes.  Default is
// to enable logging of peer state changes.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/log-neighbor-state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/logging-options/config/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptionsPathAny) LogNeighborStateChanges() *NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_LoggingOptions_LogNeighborStateChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "log-neighbor-state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-client YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-client YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPathAny struct {
	*ygot.NodePath
}

// RouteReflectorClient (leaf): Configure the neighbor as a route reflector client.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-client"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPath) RouteReflectorClient() *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-client"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflectorClient (leaf): Configure the neighbor as a route reflector client.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-client"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPathAny) RouteReflectorClient() *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClientPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-client"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflectorClusterId (leaf): route-reflector cluster id to use when local router is
// configured as a route reflector.  Commonly set at the group
// level, but allows a different cluster
// id to be set for each neighbor.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-cluster-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPath) RouteReflectorClusterId() *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-cluster-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflectorClusterId (leaf): route-reflector cluster id to use when local router is
// configured as a route reflector.  Commonly set at the group
// level, but allows a different cluster
// id to be set for each neighbor.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-cluster-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/route-reflector/config/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflectorPathAny) RouteReflectorClusterId() *NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_RouteReflector_RouteReflectorClusterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-cluster-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/connect-retry YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/connect-retry YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/hold-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/hold-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/keepalive-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/keepalive-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/minimum-advertisement-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/minimum-advertisement-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePathAny struct {
	*ygot.NodePath
}

// ConnectRetry (leaf): Time interval in seconds between attempts to establish a
// session with the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/connect-retry"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPath) ConnectRetry() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "connect-retry"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectRetry (leaf): Time interval in seconds between attempts to establish a
// session with the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/connect-retry"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny) ConnectRetry() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_ConnectRetryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "connect-retry"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldTime (leaf): Time interval in seconds that a BGP session will be
// considered active in the absence of keepalive or other
// messages from the peer.  The hold-time is typically
// set to 3x the keepalive-interval.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/hold-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPath) HoldTime() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldTime (leaf): Time interval in seconds that a BGP session will be
// considered active in the absence of keepalive or other
// messages from the peer.  The hold-time is typically
// set to 3x the keepalive-interval.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/hold-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny) HoldTime() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_HoldTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// KeepaliveInterval (leaf): Time interval in seconds between transmission of keepalive
// messages to the neighbor.  Typically set to 1/3 the
// hold-time.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keepalive-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPath) KeepaliveInterval() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keepalive-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// KeepaliveInterval (leaf): Time interval in seconds between transmission of keepalive
// messages to the neighbor.  Typically set to 1/3 the
// hold-time.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keepalive-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny) KeepaliveInterval() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_KeepaliveIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keepalive-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinimumAdvertisementInterval (leaf): Minimum time which must elapse between subsequent UPDATE
// messages relating to a common set of NLRI being transmitted
// to a peer. This timer is referred to as
// MinRouteAdvertisementIntervalTimer by RFC 4721 and serves to
// reduce the number of UPDATE messages transmitted when a
// particular set of NLRI exhibit instability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/minimum-advertisement-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPath) MinimumAdvertisementInterval() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "minimum-advertisement-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinimumAdvertisementInterval (leaf): Minimum time which must elapse between subsequent UPDATE
// messages relating to a common set of NLRI being transmitted
// to a peer. This timer is referred to as
// MinRouteAdvertisementIntervalTimer by RFC 4721 and serves to
// reduce the number of UPDATE messages transmitted when a
// particular set of NLRI exhibit instability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/minimum-advertisement-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny) MinimumAdvertisementInterval() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_MinimumAdvertisementIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "minimum-advertisement-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Time interval in seconds after which the BGP session is
// re-established after being torn down due to exceeding any
// configured max prefix-limit.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPath) RestartTime() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Time interval in seconds after which the BGP session is
// re-established after being torn down due to exceeding any
// configured max prefix-limit.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/timers/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TimersPathAny) RestartTime() *NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Timers_RestartTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_TransportPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_TransportPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/local-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/local-address YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/mtu-discovery YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/mtu-discovery YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/passive-mode YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/passive-mode YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/tcp-mss YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/tcp-mss YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPathAny struct {
	*ygot.NodePath
}

// LocalAddress (leaf): Set the local IP (either IPv4 or IPv6) address to use
// for the session when sending BGP update messages.  This
// may be expressed as either an IP address or reference
// to the name of an interface.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/local-address"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPath) LocalAddress() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAddress (leaf): Set the local IP (either IPv4 or IPv6) address to use
// for the session when sending BGP update messages.  This
// may be expressed as either an IP address or reference
// to the name of an interface.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/local-address"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny) LocalAddress() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_LocalAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtuDiscovery (leaf): Turns path mtu discovery for BGP TCP sessions on (true)
// or off (false)
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mtu-discovery"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPath) MtuDiscovery() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mtu-discovery"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtuDiscovery (leaf): Turns path mtu discovery for BGP TCP sessions on (true)
// or off (false)
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mtu-discovery"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny) MtuDiscovery() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_MtuDiscoveryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mtu-discovery"},
			map[string]interface{}{},
			n,
		),
	}
}

// PassiveMode (leaf): Wait for peers to issue requests to open a BGP session,
// rather than initiating sessions from the local router.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPath) PassiveMode() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// PassiveMode (leaf): Wait for peers to issue requests to open a BGP session,
// rather than initiating sessions from the local router.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny) PassiveMode() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_PassiveModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpMss (leaf): Sets the max segment size for BGP TCP sessions.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/tcp-mss"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPath) TcpMss() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tcp-mss"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpMss (leaf): Sets the max segment size for BGP TCP sessions.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/tcp-mss"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/transport/config/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_TransportPathAny) TcpMss() *NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_Transport_TcpMssPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tcp-mss"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPathAny struct {
	*ygot.NodePath
}

// Ebgp (container): Multipath configuration for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPath) Ebgp() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ebgp (container): Multipath configuration for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-neighbor"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPathAny) Ebgp() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPath) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePathsPathAny) Enabled() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny struct {
	*ygot.NodePath
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPath) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPath {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/neighbors/neighbor/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_EbgpPathAny) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny {
	return &NetworkInstance_Protocol_Bgp_Neighbor_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/description YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/description YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/local-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/local-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-group-name YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-group-name YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-type YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-type YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/remove-private-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/remove-private-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/route-flap-damping YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/route-flap-damping YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/send-community YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/send-community YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPathAny struct {
	*ygot.NodePath
}

// AfiSafiAny (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi"
// AfiSafiName (wildcarded): oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) AfiSafiAny() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": "*"},
			n,
		),
	}
}

// AfiSafiAny (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi"
// AfiSafiName (wildcarded): oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) AfiSafiAny() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": "*"},
			n,
		),
	}
}

// AfiSafi (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi"
// AfiSafiName: oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) AfiSafi(AfiSafiName oc.E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": AfiSafiName},
			n,
		),
	}
}

// AfiSafi (list): AFI,SAFI configuration available for the
// neighbour or group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safis/afi-safi"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi"
// AfiSafiName: oc.E_BgpTypes_AFI_SAFI_TYPE
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) AfiSafi(AfiSafiName oc.E_BgpTypes_AFI_SAFI_TYPE) *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safis", "afi-safi"},
			map[string]interface{}{"afi-safi-name": AfiSafiName},
			n,
		),
	}
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) ApplyPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) ApplyPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// AsPathOptions (container): AS_PATH manipulation parameters for the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "as-path-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) AsPathOptions() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"as-path-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// AsPathOptions (container): AS_PATH manipulation parameters for the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "as-path-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) AsPathOptions() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"as-path-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): Configures an MD5 authentication password for use with
// neighboring devices.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/auth-password"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) AuthPassword() *NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): Configures an MD5 authentication password for use with
// neighboring devices.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/auth-password"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) AuthPassword() *NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description (intended primarily for use
// with a peer or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/description"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) Description() *NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description (intended primarily for use
// with a peer or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/description"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) Description() *NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// EbgpMultihop (container): eBGP multi-hop parameters for the BGPgroup
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp-multihop"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) EbgpMultihop() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp-multihop"},
			map[string]interface{}{},
			n,
		),
	}
}

// EbgpMultihop (container): eBGP multi-hop parameters for the BGPgroup
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp-multihop"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) EbgpMultihop() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp-multihop"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) EnableBfd() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) EnableBfd() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorHandling (container): Error handling parameters used for the BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "error-handling"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) ErrorHandling() *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath{
		NodePath: ygot.NewNodePath(
			[]string{"error-handling"},
			map[string]interface{}{},
			n,
		),
	}
}

// ErrorHandling (container): Error handling parameters used for the BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "error-handling"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) ErrorHandling() *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"error-handling"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating the graceful restart mechanism for BGP
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) GracefulRestart() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating the graceful restart mechanism for BGP
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) GracefulRestart() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAs (leaf): The local autonomous system number that is to be used
// when establishing sessions with the remote peer or peer
// group, if this differs from the global BGP router
// autonomous system number.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/local-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) LocalAs() *NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAs (leaf): The local autonomous system number that is to be used
// when establishing sessions with the remote peer or peer
// group, if this differs from the global BGP router
// autonomous system number.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/local-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) LocalAs() *NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_LocalAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// LoggingOptions (container): Logging options for events related to the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "logging-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) LoggingOptions() *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"logging-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// LoggingOptions (container): Logging options for events related to the BGP neighbor or
// group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "logging-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) LoggingOptions() *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"logging-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerAs (leaf): AS number of the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) PeerAs() *NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerAs (leaf): AS number of the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) PeerAs() *NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_PeerAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerGroupName (leaf): Name of the BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-group-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-group-name"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) PeerGroupName() *NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-group-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerGroupName (leaf): Name of the BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-group-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-group-name"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) PeerGroupName() *NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_PeerGroupNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-group-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerType (leaf): Explicitly designate the peer or peer group as internal
// (iBGP) or external (eBGP).
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-type"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) PeerType() *NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// PeerType (leaf): Explicitly designate the peer or peer group as internal
// (iBGP) or external (eBGP).
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/peer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/peer-type"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) PeerType() *NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_PeerTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "peer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemovePrivateAs (leaf): Remove private AS numbers from updates sent to peers - when
// this leaf is not specified, the AS_PATH attribute should be
// sent to the peer unchanged
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remove-private-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/remove-private-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) RemovePrivateAs() *NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remove-private-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemovePrivateAs (leaf): Remove private AS numbers from updates sent to peers - when
// this leaf is not specified, the AS_PATH attribute should be
// sent to the peer unchanged
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remove-private-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/remove-private-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) RemovePrivateAs() *NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RemovePrivateAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remove-private-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteFlapDamping (leaf): Enable route flap damping.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-flap-damping"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/route-flap-damping"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) RouteFlapDamping() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-flap-damping"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteFlapDamping (leaf): Enable route flap damping.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-flap-damping"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/route-flap-damping"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) RouteFlapDamping() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteFlapDampingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-flap-damping"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflector (container): Route reflector parameters for the BGPgroup
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-reflector"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) RouteReflector() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath{
		NodePath: ygot.NewNodePath(
			[]string{"route-reflector"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflector (container): Route reflector parameters for the BGPgroup
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-reflector"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) RouteReflector() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-reflector"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendCommunity (leaf): Specify which types of community should be sent to the
// neighbor or group. The default is to not send the
// community attribute
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/send-community"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) SendCommunity() *NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-community"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendCommunity (leaf): Specify which types of community should be sent to the
// neighbor or group. The default is to not send the
// community attribute
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-community"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/config/send-community"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) SendCommunity() *NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_SendCommunityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-community"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers related to a BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) Timers() *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers related to a BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) Timers() *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): Transport session parameters for the BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) Transport() *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): Transport session parameters for the BGP peer-group
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) Transport() *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPath) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroupPathAny) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/afi-safi-name YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/afi-safi-name YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPathAny struct {
	*ygot.NodePath
}

// AddPaths (container): Parameters relating to the advertisement and receipt of
// multiple paths for a single NLRI (add-paths)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "add-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) AddPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"add-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddPaths (container): Parameters relating to the advertisement and receipt of
// multiple paths for a single NLRI (add-paths)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-structure"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "add-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) AddPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"add-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiSafiName (leaf): AFI,SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) AfiSafiName() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiSafiName (leaf): AFI,SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/afi-safi-name"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) AfiSafiName() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AfiSafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) ApplyPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ApplyPolicy (container): Anchor point for routing policies in the model.
// Import and export policies are with respect to the local
// routing table, i.e., export (send) and import (receive),
// depending on the context.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "apply-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) ApplyPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"apply-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether the AFI-SAFI is
// enabled for the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether the AFI-SAFI is
// enabled for the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating to BGP graceful-restart
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) GracefulRestart() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Parameters relating to BGP graceful-restart
// ----------------------------------------
// Defining module: "openconfig-bgp-peer-group"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) GracefulRestart() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4LabeledUnicast (container): IPv4 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) Ipv4LabeledUnicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4LabeledUnicast (container): IPv4 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) Ipv4LabeledUnicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4Unicast (container): IPv4 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) Ipv4Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4Unicast (container): IPv4 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) Ipv4Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6LabeledUnicast (container): IPv6 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) Ipv6LabeledUnicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6LabeledUnicast (container): IPv6 Labeled Unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-labeled-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) Ipv6LabeledUnicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-labeled-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Unicast (container): IPv6 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) Ipv6Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Unicast (container): IPv6 unicast configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) Ipv6Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnEvpn (container): BGP EVPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-evpn"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) L2VpnEvpn() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPath{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-evpn"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnEvpn (container): BGP EVPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-evpn"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) L2VpnEvpn() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-evpn"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnVpls (container): BGP-signalled VPLS configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-vpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) L2VpnVpls() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-vpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// L2VpnVpls (container): BGP-signalled VPLS configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l2vpn-vpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) L2VpnVpls() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l2vpn-vpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Multicast (container): Multicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) L3VpnIpv4Multicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Multicast (container): Multicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) L3VpnIpv4Multicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Unicast (container): Unicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) L3VpnIpv4Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv4Unicast (container): Unicast IPv4 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv4-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) L3VpnIpv4Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv4-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Multicast (container): Multicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) L3VpnIpv6Multicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Multicast (container): Multicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-multicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) L3VpnIpv6Multicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-multicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Unicast (container): Unicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) L3VpnIpv6Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPath{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// L3VpnIpv6Unicast (container): Unicast IPv6 L3VPN configuration options
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "l3vpn-ipv6-unicast"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) L3VpnIpv6Unicast() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"l3vpn-ipv6-unicast"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv4 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv4 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) SrtePolicyIpv4() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4Path {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4Path{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv4 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv4 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv4"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) SrtePolicyIpv4() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4PathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv4"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv6 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv6 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv6"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) SrtePolicyIpv6() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6Path {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6Path{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrtePolicyIpv6 (container): Configuration and operational state parameters relating to
// the SR-TE Policy SAFI for IPv6 Unicast.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srte-policy-ipv6"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) SrtePolicyIpv6() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6PathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srte-policy-ipv6"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPath) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// UseMultiplePaths (container): Parameters related to the use of multiple paths for the
// same NLRI
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "use-multiple-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafiPathAny) UseMultiplePaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"use-multiple-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/receive YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/receive YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send-max YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send-max YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPathAny struct {
	*ygot.NodePath
}

// EligiblePrefixPolicy (leaf): A reference to a routing policy which can be used to
// restrict the prefixes for which add-paths is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/eligible-prefix-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath) EligiblePrefixPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "eligible-prefix-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// EligiblePrefixPolicy (leaf): A reference to a routing policy which can be used to
// restrict the prefixes for which add-paths is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/eligible-prefix-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/eligible-prefix-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny) EligiblePrefixPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_EligiblePrefixPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "eligible-prefix-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// Receive (leaf): Enable capability negotiation to receive multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/receive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/receive"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath) Receive() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "receive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Receive (leaf): Enable capability negotiation to receive multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/receive"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/receive"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny) Receive() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_ReceivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "receive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Send (leaf): Enable capability negotiation to send multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath) Send() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send"},
			map[string]interface{}{},
			n,
		),
	}
}

// Send (leaf): Enable capability negotiation to send multiple path
// advertisements for an NLRI from the neighbor or group
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny) Send() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendMax (leaf): The maximum total number of paths to advertise to neighbors
// for a single NLRI.  This includes the single best path as
// well as additional paths advertised when add-paths is
// enabled.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-max"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send-max"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPath) SendMax() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-max"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendMax (leaf): The maximum total number of paths to advertise to neighbors
// for a single NLRI.  This includes the single best path as
// well as additional paths advertised when add-paths is
// enabled.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-max"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/add-paths/config/send-max"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPathsPathAny) SendMax() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_AddPaths_SendMaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-max"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath) ExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny) ExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPath) ImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicyPathAny) ImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_ApplyPolicy_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): This leaf indicates whether graceful-restart is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): This leaf indicates whether graceful-restart is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny struct {
	*ygot.NodePath
}

// ExtendedNextHopEncoding (leaf): This leaf indicates whether extended next-hop encoding is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/extended-next-hop-encoding"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath) ExtendedNextHopEncoding() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "extended-next-hop-encoding"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedNextHopEncoding (leaf): This leaf indicates whether extended next-hop encoding is enabled for
// this AFI-SAFI
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/extended-next-hop-encoding"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/extended-next-hop-encoding"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny) ExtendedNextHopEncoding() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_ExtendedNextHopEncodingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "extended-next-hop-encoding"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPath) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4UnicastPathAny) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_SendDefaultRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-labeled-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6LabeledUnicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/config/send-default-route YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPath) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// SendDefaultRoute (leaf): If set to true, send the default-route to the neighbor(s)
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/send-default-route"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/config/send-default-route"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6UnicastPathAny) SendDefaultRoute() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_SendDefaultRoutePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "send-default-route"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_Ipv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpnPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-evpn/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnEvpn_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVplsPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l2vpn-vpls/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L2VpnVpls_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4MulticastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Multicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv4-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv4Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6MulticastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-multicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Multicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPath) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPath) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6UnicastPathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/l3vpn-ipv6-unicast/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_L3VpnIpv6Unicast_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4 YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4 YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4PathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4Path) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4PathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4Path) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4PathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv4/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv4_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6 YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6 YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6PathAny struct {
	*ygot.NodePath
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6Path) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimit (container): Configure the maximum number of prefixes that will be
// accepted from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6PathAny) PrefixLimit() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6Path) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLimitReceived (container): Configure the maximum number of prefixes that will be
// received from a peer
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-limit-received"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6PathAny) PrefixLimitReceived() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-limit-received"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimit_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny struct {
	*ygot.NodePath
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxPrefixes (leaf): Maximum number of prefixes that will be accepted
// from the neighbor
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/max-prefixes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) MaxPrefixes() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_MaxPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// PreventTeardown (leaf): Do not tear down the BGP session when the maximum
// prefix limit is exceeded, but rather only log a
// warning. The default of this leaf is false, such
// that when it is not specified, the session is torn
// down.
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prevent-teardown"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/prevent-teardown"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) PreventTeardown() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_PreventTeardownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prevent-teardown"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPath) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningThresholdPct (leaf): Threshold on number of prefixes that can be received
// from a neighbor before generation of warning messages
// or log entries. Expressed as a percentage of
// max-prefixes
// ----------------------------------------
// Defining module: "openconfig-bgp-common-multiprotocol"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-threshold-pct"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/srte-policy-ipv6/prefix-limit-received/config/warning-threshold-pct"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceivedPathAny) WarningThresholdPct() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_SrtePolicyIpv6_PrefixLimitReceived_WarningThresholdPctPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-threshold-pct"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPathAny struct {
	*ygot.NodePath
}

// Ebgp (container): Multipath parameters for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath) Ebgp() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ebgp (container): Multipath parameters for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny) Ebgp() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ibgp (container): Multipath parameters for iBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ibgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPath) Ibgp() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ibgp (container): Multipath parameters for iBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ibgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePathsPathAny) Ibgp() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPathAny struct {
	*ygot.NodePath
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPath) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPathAny) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_EbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ebgp_MaximumPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPathAny struct {
	*ygot.NodePath
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/afi-safis/afi-safi/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_IbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AfiSafi_UseMultiplePaths_Ibgp_MaximumPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/export-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultExportPolicy (leaf): explicitly set a default policy if no policy definition
// in the export policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny) DefaultExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath) ExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExportPolicy (leaf-list): list of policy names in sequence to be applied on
// sending a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/export-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/export-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny) ExportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ExportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "export-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPath) ImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/apply-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicyPathAny) ImportPolicy() *NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ApplyPolicy_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/allow-own-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/allow-own-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/disable-peer-as-filter YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/disable-peer-as-filter YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/replace-peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/replace-peer-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny struct {
	*ygot.NodePath
}

// AllowOwnAs (leaf): Specify the number of occurrences of the local BGP speaker's
// AS that can occur within the AS_PATH before it is rejected.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-own-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/allow-own-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath) AllowOwnAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-own-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowOwnAs (leaf): Specify the number of occurrences of the local BGP speaker's
// AS that can occur within the AS_PATH before it is rejected.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-own-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/allow-own-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny) AllowOwnAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_AllowOwnAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-own-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePeerAsFilter (leaf): When set to true, the system advertises routes to a peer
// even if the peer's AS was in the AS path.  The default
// behavior (false) suppresses advertisements to peers if
// their AS number is in the AS path of the route.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-peer-as-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/disable-peer-as-filter"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath) DisablePeerAsFilter() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-peer-as-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePeerAsFilter (leaf): When set to true, the system advertises routes to a peer
// even if the peer's AS was in the AS path.  The default
// behavior (false) suppresses advertisements to peers if
// their AS number is in the AS path of the route.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-peer-as-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/disable-peer-as-filter"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny) DisablePeerAsFilter() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_DisablePeerAsFilterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-peer-as-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplacePeerAs (leaf): Replace occurrences of the peer's AS in the AS_PATH
// with the local autonomous system number
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/replace-peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPath) ReplacePeerAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "replace-peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReplacePeerAs (leaf): Replace occurrences of the peer's AS in the AS_PATH
// with the local autonomous system number
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/replace-peer-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/as-path-options/config/replace-peer-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptionsPathAny) ReplacePeerAs() *NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_AsPathOptions_ReplacePeerAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "replace-peer-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/multihop-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/multihop-ttl YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When enabled the referenced group or neighbors are permitted
// to be indirectly connected - including cases where the TTL
// can be decremented between the BGP peers
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When enabled the referenced group or neighbors are permitted
// to be indirectly connected - including cases where the TTL
// can be decremented between the BGP peers
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultihopTtl (leaf): Time-to-live value to use when packets are sent to the
// referenced group or neighbors and ebgp-multihop is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multihop-ttl"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPath) MultihopTtl() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multihop-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultihopTtl (leaf): Time-to-live value to use when packets are sent to the
// referenced group or neighbors and ebgp-multihop is enabled
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multihop-ttl"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/ebgp-multihop/config/multihop-ttl"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihopPathAny) MultihopTtl() *NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EbgpMultihop_MultihopTtlPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multihop-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/config/treat-as-withdraw YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/config/treat-as-withdraw YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny struct {
	*ygot.NodePath
}

// TreatAsWithdraw (leaf): Specify whether erroneous UPDATE messages for which the
// NLRI can be extracted are reated as though the NLRI is
// withdrawn - avoiding session reset
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/treat-as-withdraw"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/config/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPath) TreatAsWithdraw() *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "treat-as-withdraw"},
			map[string]interface{}{},
			n,
		),
	}
}

// TreatAsWithdraw (leaf): Specify whether erroneous UPDATE messages for which the
// NLRI can be extracted are reated as though the NLRI is
// withdrawn - avoiding session reset
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/treat-as-withdraw"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/error-handling/config/treat-as-withdraw"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandlingPathAny) TreatAsWithdraw() *NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_ErrorHandling_TreatAsWithdrawPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "treat-as-withdraw"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/stale-routes-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/stale-routes-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): Enable or disable the graceful-restart capability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enable or disable the graceful-restart capability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable graceful-restart in helper mode only. When this
// leaf is set, the local system does not retain forwarding
// its own state during a restart, but supports procedures
// for the receiving speaker, as defined in RFC4724.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable graceful-restart in helper mode only. When this
// leaf is set, the local system does not retain forwarding
// its own state during a restart, but supports procedures
// for the receiving speaker, as defined in RFC4724.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Estimated time (in seconds) for the local BGP speaker to
// restart a session. This value is advertise in the graceful
// restart BGP capability.  This is a 12-bit value, referred to
// as Restart Time in RFC4724.  Per RFC4724, the suggested
// default value is <= the hold-time value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) RestartTime() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Estimated time (in seconds) for the local BGP speaker to
// restart a session. This value is advertise in the graceful
// restart BGP capability.  This is a 12-bit value, referred to
// as Restart Time in RFC4724.  Per RFC4724, the suggested
// default value is <= the hold-time value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) RestartTime() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_RestartTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaleRoutesTime (leaf): An upper-bound on the time thate stale routes will be
// retained by a router after a session is restarted. If an
// End-of-RIB (EOR) marker is received prior to this timer
// expiring stale-routes will be flushed upon its receipt - if
// no EOR is received, then when this timer expires stale paths
// will be purged. This timer is referred to as the
// Selection_Deferral_Timer in RFC4724
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/stale-routes-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPath) StaleRoutesTime() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "stale-routes-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaleRoutesTime (leaf): An upper-bound on the time thate stale routes will be
// retained by a router after a session is restarted. If an
// End-of-RIB (EOR) marker is received prior to this timer
// expiring stale-routes will be flushed upon its receipt - if
// no EOR is received, then when this timer expires stale paths
// will be purged. This timer is referred to as the
// Selection_Deferral_Timer in RFC4724
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/stale-routes-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/graceful-restart/config/stale-routes-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestartPathAny) StaleRoutesTime() *NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_GracefulRestart_StaleRoutesTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "stale-routes-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/config/log-neighbor-state-changes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/config/log-neighbor-state-changes YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny struct {
	*ygot.NodePath
}

// LogNeighborStateChanges (leaf): Configure logging of peer state changes.  Default is
// to enable logging of peer state changes.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/log-neighbor-state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/config/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPath) LogNeighborStateChanges() *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "log-neighbor-state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LogNeighborStateChanges (leaf): Configure logging of peer state changes.  Default is
// to enable logging of peer state changes.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/log-neighbor-state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/logging-options/config/log-neighbor-state-changes"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptionsPathAny) LogNeighborStateChanges() *NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_LoggingOptions_LogNeighborStateChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "log-neighbor-state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-client YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-client YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny struct {
	*ygot.NodePath
}

// RouteReflectorClient (leaf): Configure the neighbor as a route reflector client.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-client"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath) RouteReflectorClient() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-client"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflectorClient (leaf): Configure the neighbor as a route reflector client.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-client"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-client"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny) RouteReflectorClient() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClientPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-client"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflectorClusterId (leaf): route-reflector cluster id to use when local router is
// configured as a route reflector.  Commonly set at the group
// level, but allows a different cluster
// id to be set for each neighbor.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-cluster-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPath) RouteReflectorClusterId() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-cluster-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteReflectorClusterId (leaf): route-reflector cluster id to use when local router is
// configured as a route reflector.  Commonly set at the group
// level, but allows a different cluster
// id to be set for each neighbor.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/route-reflector-cluster-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/route-reflector/config/route-reflector-cluster-id"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflectorPathAny) RouteReflectorClusterId() *NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_RouteReflector_RouteReflectorClusterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "route-reflector-cluster-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/connect-retry YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/connect-retry YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/hold-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/hold-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/keepalive-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/keepalive-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/minimum-advertisement-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/minimum-advertisement-interval YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/restart-time YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny struct {
	*ygot.NodePath
}

// ConnectRetry (leaf): Time interval in seconds between attempts to establish a
// session with the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/connect-retry"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) ConnectRetry() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "connect-retry"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConnectRetry (leaf): Time interval in seconds between attempts to establish a
// session with the peer.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/connect-retry"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/connect-retry"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) ConnectRetry() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_ConnectRetryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "connect-retry"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldTime (leaf): Time interval in seconds that a BGP session will be
// considered active in the absence of keepalive or other
// messages from the peer.  The hold-time is typically
// set to 3x the keepalive-interval.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/hold-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) HoldTime() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// HoldTime (leaf): Time interval in seconds that a BGP session will be
// considered active in the absence of keepalive or other
// messages from the peer.  The hold-time is typically
// set to 3x the keepalive-interval.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hold-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/hold-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) HoldTime() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_HoldTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hold-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// KeepaliveInterval (leaf): Time interval in seconds between transmission of keepalive
// messages to the neighbor.  Typically set to 1/3 the
// hold-time.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keepalive-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) KeepaliveInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keepalive-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// KeepaliveInterval (leaf): Time interval in seconds between transmission of keepalive
// messages to the neighbor.  Typically set to 1/3 the
// hold-time.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keepalive-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/keepalive-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) KeepaliveInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_KeepaliveIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keepalive-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinimumAdvertisementInterval (leaf): Minimum time which must elapse between subsequent UPDATE
// messages relating to a common set of NLRI being transmitted
// to a peer. This timer is referred to as
// MinRouteAdvertisementIntervalTimer by RFC 4721 and serves to
// reduce the number of UPDATE messages transmitted when a
// particular set of NLRI exhibit instability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/minimum-advertisement-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) MinimumAdvertisementInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "minimum-advertisement-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinimumAdvertisementInterval (leaf): Minimum time which must elapse between subsequent UPDATE
// messages relating to a common set of NLRI being transmitted
// to a peer. This timer is referred to as
// MinRouteAdvertisementIntervalTimer by RFC 4721 and serves to
// reduce the number of UPDATE messages transmitted when a
// particular set of NLRI exhibit instability.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/minimum-advertisement-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/minimum-advertisement-interval"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) MinimumAdvertisementInterval() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_MinimumAdvertisementIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "minimum-advertisement-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Time interval in seconds after which the BGP session is
// re-established after being torn down due to exceeding any
// configured max prefix-limit.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPath) RestartTime() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// RestartTime (leaf): Time interval in seconds after which the BGP session is
// re-established after being torn down due to exceeding any
// configured max prefix-limit.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/restart-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/timers/config/restart-time"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TimersPathAny) RestartTime() *NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Timers_RestartTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "restart-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/local-address YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/local-address YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/mtu-discovery YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/mtu-discovery YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/passive-mode YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/passive-mode YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/tcp-mss YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/tcp-mss YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny struct {
	*ygot.NodePath
}

// LocalAddress (leaf): Set the local IP (either IPv4 or IPv6) address to use
// for the session when sending BGP update messages.  This
// may be expressed as either an IP address or reference
// to the name of an interface.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/local-address"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) LocalAddress() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalAddress (leaf): Set the local IP (either IPv4 or IPv6) address to use
// for the session when sending BGP update messages.  This
// may be expressed as either an IP address or reference
// to the name of an interface.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/local-address"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) LocalAddress() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_LocalAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtuDiscovery (leaf): Turns path mtu discovery for BGP TCP sessions on (true)
// or off (false)
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mtu-discovery"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) MtuDiscovery() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mtu-discovery"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtuDiscovery (leaf): Turns path mtu discovery for BGP TCP sessions on (true)
// or off (false)
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mtu-discovery"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/mtu-discovery"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) MtuDiscovery() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_MtuDiscoveryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mtu-discovery"},
			map[string]interface{}{},
			n,
		),
	}
}

// PassiveMode (leaf): Wait for peers to issue requests to open a BGP session,
// rather than initiating sessions from the local router.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) PassiveMode() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// PassiveMode (leaf): Wait for peers to issue requests to open a BGP session,
// rather than initiating sessions from the local router.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/passive-mode"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) PassiveMode() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_PassiveModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpMss (leaf): Sets the max segment size for BGP TCP sessions.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/tcp-mss"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPath) TcpMss() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tcp-mss"},
			map[string]interface{}{},
			n,
		),
	}
}

// TcpMss (leaf): Sets the max segment size for BGP TCP sessions.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/tcp-mss"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/transport/config/tcp-mss"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_TransportPathAny) TcpMss() *NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_Transport_TcpMssPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "tcp-mss"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/config/enabled YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny struct {
	*ygot.NodePath
}

// Ebgp (container): Multipath parameters for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath) Ebgp() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ebgp (container): Multipath parameters for eBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ebgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny) Ebgp() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ebgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Whether the use of multiple paths for the same NLRI is
// enabled for the neighbor. This value is overridden by
// any more specific configuration value.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/config/enabled"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny) Enabled() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ibgp (container): Multipath parameters for iBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ibgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPath) Ibgp() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath{
		NodePath: ygot.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ibgp (container): Multipath parameters for iBGP
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ibgp"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePathsPathAny) Ibgp() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ibgp"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/allow-multiple-as YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny struct {
	*ygot.NodePath
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// AllowMultipleAs (leaf): Allow multipath to use paths from different neighbouring
// ASes.  The default is to only consider multiple paths from
// the same neighbouring AS.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/allow-multiple-as"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/allow-multiple-as"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny) AllowMultipleAs() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_AllowMultipleAsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "allow-multiple-as"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// BGP multipath. The default is use a single path.
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ebgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_EbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ebgp_MaximumPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/config/maximum-paths YANG schema element.
type NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny struct {
	*ygot.NodePath
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPath) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumPaths (leaf): Maximum number of parallel paths to consider when using
// iBGP multipath. The default is to use a single path
// ----------------------------------------
// Defining module: "openconfig-bgp-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/bgp/peer-groups/peer-group/use-multiple-paths/ibgp/config/maximum-paths"
func (n *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_IbgpPathAny) MaximumPaths() *NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny {
	return &NetworkInstance_Protocol_Bgp_PeerGroup_UseMultiplePaths_Ibgp_MaximumPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_IgmpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp YANG schema element.
type NetworkInstance_Protocol_IgmpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_IgmpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp YANG schema element.
type NetworkInstance_Protocol_IgmpPathAny struct {
	*ygot.NodePath
}

// Global (container): Global IGMP configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global"
func (n *NetworkInstance_Protocol_IgmpPath) Global() *NetworkInstance_Protocol_Igmp_GlobalPath {
	return &NetworkInstance_Protocol_Igmp_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Global IGMP configuration and operational state.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global"
func (n *NetworkInstance_Protocol_IgmpPathAny) Global() *NetworkInstance_Protocol_Igmp_GlobalPathAny {
	return &NetworkInstance_Protocol_Igmp_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IgmpPath) InterfaceAny() *NetworkInstance_Protocol_Igmp_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IgmpPathAny) InterfaceAny() *NetworkInstance_Protocol_Igmp_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IgmpPath) Interface(InterfaceId string) *NetworkInstance_Protocol_Igmp_InterfacePath {
	return &NetworkInstance_Protocol_Igmp_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): This container defines interface IGMP configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IgmpPathAny) Interface(InterfaceId string) *NetworkInstance_Protocol_Igmp_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global YANG schema element.
type NetworkInstance_Protocol_Igmp_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global YANG schema element.
type NetworkInstance_Protocol_Igmp_GlobalPathAny struct {
	*ygot.NodePath
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm"
func (n *NetworkInstance_Protocol_Igmp_GlobalPath) Ssm() *NetworkInstance_Protocol_Igmp_Global_SsmPath {
	return &NetworkInstance_Protocol_Igmp_Global_SsmPath{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm"
func (n *NetworkInstance_Protocol_Igmp_GlobalPathAny) Ssm() *NetworkInstance_Protocol_Igmp_Global_SsmPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_SsmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Global_SsmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_SsmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_SsmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_SsmPathAny struct {
	*ygot.NodePath
}

// MappingAny (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPath) MappingAny() *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": "*"},
			n,
		),
	}
}

// MappingAny (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPathAny) MappingAny() *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": "*"},
			n,
		),
	}
}

// Mapping (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source: string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPath) Mapping(Source string) *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": Source},
			n,
		),
	}
}

// Mapping (list): A Source Specific Multicast (SSM) mapping. This allows
// IGMP v2 hosts to be able to join in SSM environments
// by translating IGMP v2 reports into IGMP v3 reports.
// The request in an IGMP v2 join is sent toward the source
// address found by matching the multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mappings/mapping"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping"
// Source: string
func (n *NetworkInstance_Protocol_Igmp_Global_SsmPathAny) Mapping(Source string) *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mappings", "mapping"},
			map[string]interface{}{"source": Source},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny struct {
	*ygot.NodePath
}

// Source (leaf): Multicast source address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/source"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath) Source() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): Multicast source address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/source"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny) Source() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/ssm-ranges"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPath) SsmRanges() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/global/ssm/mappings/mapping/config/ssm-ranges"
func (n *NetworkInstance_Protocol_Igmp_Global_Ssm_MappingPathAny) SsmRanges() *NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny {
	return &NetworkInstance_Protocol_Igmp_Global_Ssm_Mapping_SsmRangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/enabled YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/enabled YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/filter-prefixes YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/filter-prefixes YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/query-interval YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/query-interval YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_VersionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/version YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_VersionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_VersionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/version YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_VersionPathAny struct {
	*ygot.NodePath
}

// Counters (container): Counters avaiable on a per interface bases for IGMP.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Counters() *NetworkInstance_Protocol_Igmp_Interface_CountersPath {
	return &NetworkInstance_Protocol_Igmp_Interface_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): Counters avaiable on a per interface bases for IGMP.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Counters() *NetworkInstance_Protocol_Igmp_Interface_CountersPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/enabled"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Enabled() *NetworkInstance_Protocol_Igmp_Interface_EnabledPath {
	return &NetworkInstance_Protocol_Igmp_Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/enabled"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Enabled() *NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// FilterPrefixes (leaf): List used to filter joins.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/filter-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/filter-prefixes"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) FilterPrefixes() *NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath {
	return &NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "filter-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// FilterPrefixes (leaf): List used to filter joins.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/filter-prefixes"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/filter-prefixes"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) FilterPrefixes() *NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_FilterPrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "filter-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which IGMP is enabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) InterfaceId() *NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which IGMP is enabled.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) InterfaceId() *NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueryInterval (leaf): Interval at which the router sends the IGMP membership
// queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/query-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/query-interval"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) QueryInterval() *NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath {
	return &NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "query-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// QueryInterval (leaf): Interval at which the router sends the IGMP membership
// queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/query-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/query-interval"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) QueryInterval() *NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_QueryIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "query-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticGroupsAny (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) StaticGroupsAny() *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": "*"},
			n,
		),
	}
}

// StaticGroupsAny (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup (wildcarded): string
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) StaticGroupsAny() *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": "*"},
			n,
		),
	}
}

// StaticGroups (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup: string
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) StaticGroups(StaticGroup string) *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": StaticGroup},
			n,
		),
	}
}

// StaticGroups (list): Multicast group membership.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "static-membership-groups/static-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups"
// StaticGroup: string
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) StaticGroups(StaticGroup string) *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"static-membership-groups", "static-groups"},
			map[string]interface{}{"static-group": StaticGroup},
			n,
		),
	}
}

// Version (leaf): IGMP Version.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/version"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/version"
func (n *NetworkInstance_Protocol_Igmp_InterfacePath) Version() *NetworkInstance_Protocol_Igmp_Interface_VersionPath {
	return &NetworkInstance_Protocol_Igmp_Interface_VersionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "version"},
			map[string]interface{}{},
			n,
		),
	}
}

// Version (leaf): IGMP Version.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/version"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/config/version"
func (n *NetworkInstance_Protocol_Igmp_InterfacePathAny) Version() *NetworkInstance_Protocol_Igmp_Interface_VersionPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_VersionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "version"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_CountersPathAny struct {
	*ygot.NodePath
}

// Queries (container): IGMP membership queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "queries"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPath) Queries() *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath{
		NodePath: ygot.NewNodePath(
			[]string{"queries"},
			map[string]interface{}{},
			n,
		),
	}
}

// Queries (container): IGMP membership queries.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "queries"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPathAny) Queries() *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"queries"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reports (container): Number of IGMP membership reports received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reports"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPath) Reports() *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath{
		NodePath: ygot.NewNodePath(
			[]string{"reports"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reports (container): Number of IGMP membership reports received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reports"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports"
func (n *NetworkInstance_Protocol_Igmp_Interface_CountersPathAny) Reports() *NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reports"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny struct {
	*ygot.NodePath
}

// Received (container): Number of IGMP membership queries received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "received"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath) Received() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath{
		NodePath: ygot.NewNodePath(
			[]string{"received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Received (container): Number of IGMP membership queries received.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "received"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny) Received() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"received"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (container): Number of IGMP membership queries sent.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPath) Sent() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath{
		NodePath: ygot.NewNodePath(
			[]string{"sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// Sent (container): Number of IGMP membership queries sent.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sent"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent"
func (n *NetworkInstance_Protocol_Igmp_Interface_Counters_QueriesPathAny) Sent() *NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sent"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/received YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_ReceivedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/queries/sent YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_Queries_SentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/counters/reports YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_Counters_ReportsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Igmp_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/source YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/static-group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/static-group YANG schema element.
type NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny struct {
	*ygot.NodePath
}

// Source (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/source"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath) Source() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// Source (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/source"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny) Source() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticGroup (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/static-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/static-group"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPath) StaticGroup() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "static-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// StaticGroup (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-igmp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/static-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/igmp/interfaces/interface/static-membership-groups/static-groups/config/static-group"
func (n *NetworkInstance_Protocol_Igmp_Interface_StaticGroupsPathAny) StaticGroup() *NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny {
	return &NetworkInstance_Protocol_Igmp_Interface_StaticGroups_StaticGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "static-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_IsisPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis YANG schema element.
type NetworkInstance_Protocol_IsisPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_IsisPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis YANG schema element.
type NetworkInstance_Protocol_IsisPathAny struct {
	*ygot.NodePath
}

// Global (container): This container defines global ISIS configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global"
func (n *NetworkInstance_Protocol_IsisPath) Global() *NetworkInstance_Protocol_Isis_GlobalPath {
	return &NetworkInstance_Protocol_Isis_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): This container defines global ISIS configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global"
func (n *NetworkInstance_Protocol_IsisPathAny) Global() *NetworkInstance_Protocol_Isis_GlobalPathAny {
	return &NetworkInstance_Protocol_Isis_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IsisPath) InterfaceAny() *NetworkInstance_Protocol_Isis_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_IsisPathAny) InterfaceAny() *NetworkInstance_Protocol_Isis_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IsisPath) Interface(InterfaceId string) *NetworkInstance_Protocol_Isis_InterfacePath {
	return &NetworkInstance_Protocol_Isis_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): This list contains ISIS interfaces.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_IsisPathAny) Interface(InterfaceId string) *NetworkInstance_Protocol_Isis_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_IsisPath) LevelAny() *NetworkInstance_Protocol_Isis_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_IsisPathAny) LevelAny() *NetworkInstance_Protocol_Isis_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_IsisPath) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_LevelPath {
	return &NetworkInstance_Protocol_Isis_LevelPath{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level within the IS-IS protocol instance
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_IsisPathAny) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global YANG schema element.
type NetworkInstance_Protocol_Isis_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global YANG schema element.
type NetworkInstance_Protocol_Isis_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_FastFloodingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/fast-flooding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_FastFloodingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/fast-flooding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_HelloPaddingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_HelloPaddingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_IidTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/iid-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_IidTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_IidTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/iid-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_IidTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InstancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/level-capability YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/level-capability YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/max-ecmp-paths YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/max-ecmp-paths YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/maximum-area-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/maximum-area-addresses YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_NetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/net YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_NetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/net YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_PoiTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/poi-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_PoiTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/config/poi-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny struct {
	*ygot.NodePath
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfAny() *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfAny() *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPath {
	return &NetworkInstance_Protocol_Isis_Global_AfPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// AfiAny (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AfiAny() *NetworkInstance_Protocol_Isis_Global_AfiPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// AfiAny (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AfiAny() *NetworkInstance_Protocol_Isis_Global_AfiPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": "*"},
			n,
		),
	}
}

// Afi (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName: oc.E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Afi(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfiPath {
	return &NetworkInstance_Protocol_Isis_Global_AfiPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// Afi (list): Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-shortcuts/afi"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi"
// AfiName: oc.E_IsisTypes_AFI_TYPE
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Afi(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Global_AfiPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-shortcuts", "afi"},
			map[string]interface{}{"afi-name": AfiName},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/authentication-check"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath {
	return &NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/authentication-check"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny {
	return &NetworkInstance_Protocol_Isis_Global_AuthenticationCheckPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// FastFlooding (leaf): When set to true, IS will always flood the LSP that triggered an SPF
// before the router actually runs the SPF computation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/fast-flooding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/fast-flooding"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) FastFlooding() *NetworkInstance_Protocol_Isis_Global_FastFloodingPath {
	return &NetworkInstance_Protocol_Isis_Global_FastFloodingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "fast-flooding"},
			map[string]interface{}{},
			n,
		),
	}
}

// FastFlooding (leaf): When set to true, IS will always flood the LSP that triggered an SPF
// before the router actually runs the SPF computation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/fast-flooding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/fast-flooding"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) FastFlooding() *NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny {
	return &NetworkInstance_Protocol_Isis_Global_FastFloodingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "fast-flooding"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): This container defines ISIS Graceful Restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) GracefulRestart() *NetworkInstance_Protocol_Isis_Global_GracefulRestartPath {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): This container defines ISIS Graceful Restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) GracefulRestart() *NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs on a global level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/hello-padding"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) HelloPadding() *NetworkInstance_Protocol_Isis_Global_HelloPaddingPath {
	return &NetworkInstance_Protocol_Isis_Global_HelloPaddingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs on a global level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/hello-padding"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) HelloPadding() *NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny {
	return &NetworkInstance_Protocol_Isis_Global_HelloPaddingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// IidTlv (leaf): ISIS Instance Identifier TLV. When set to trues, the IID-TLV identifies
// the unique instance as well as the topology/topologies to which the
// PDU applies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/iid-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/iid-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) IidTlv() *NetworkInstance_Protocol_Isis_Global_IidTlvPath {
	return &NetworkInstance_Protocol_Isis_Global_IidTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "iid-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// IidTlv (leaf): ISIS Instance Identifier TLV. When set to trues, the IID-TLV identifies
// the unique instance as well as the topology/topologies to which the
// PDU applies.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/iid-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/iid-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) IidTlv() *NetworkInstance_Protocol_Isis_Global_IidTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Global_IidTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "iid-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instance (leaf): ISIS Instance.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/instance"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Instance() *NetworkInstance_Protocol_Isis_Global_InstancePath {
	return &NetworkInstance_Protocol_Isis_Global_InstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instance (leaf): ISIS Instance.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/instance"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Instance() *NetworkInstance_Protocol_Isis_Global_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Global_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "instance"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterLevelPropagationPolicies (container): Policies to propagate prefixes between IS-IS levels.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-level-propagation-policies"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) InterLevelPropagationPolicies() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath{
		NodePath: ygot.NewNodePath(
			[]string{"inter-level-propagation-policies"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterLevelPropagationPolicies (container): Policies to propagate prefixes between IS-IS levels.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-level-propagation-policies"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) InterLevelPropagationPolicies() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-level-propagation-policies"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelCapability (leaf): ISIS level capability(level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/level-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/level-capability"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) LevelCapability() *NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath {
	return &NetworkInstance_Protocol_Isis_Global_LevelCapabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "level-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelCapability (leaf): ISIS level capability(level-1, level-2, level-1-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/level-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/level-capability"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) LevelCapability() *NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LevelCapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "level-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspBit (container): This container defines ISIS LSP Operational Bits.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) LspBit() *NetworkInstance_Protocol_Isis_Global_LspBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspBit (container): This container defines ISIS LSP Operational Bits.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) LspBit() *NetworkInstance_Protocol_Isis_Global_LspBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxEcmpPaths (leaf): ISIS max-paths count.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-ecmp-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/max-ecmp-paths"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) MaxEcmpPaths() *NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath {
	return &NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-ecmp-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxEcmpPaths (leaf): ISIS max-paths count.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/max-ecmp-paths"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/max-ecmp-paths"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) MaxEcmpPaths() *NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny {
	return &NetworkInstance_Protocol_Isis_Global_MaxEcmpPathsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "max-ecmp-paths"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumAreaAddresses (leaf): Maximum areas supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-area-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/maximum-area-addresses"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) MaximumAreaAddresses() *NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath {
	return &NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-area-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumAreaAddresses (leaf): Maximum areas supported.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-area-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/maximum-area-addresses"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) MaximumAreaAddresses() *NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny {
	return &NetworkInstance_Protocol_Isis_Global_MaximumAreaAddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-area-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Mpls() *NetworkInstance_Protocol_Isis_Global_MplsPath {
	return &NetworkInstance_Protocol_Isis_Global_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Mpls() *NetworkInstance_Protocol_Isis_Global_MplsPathAny {
	return &NetworkInstance_Protocol_Isis_Global_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Net (leaf-list): ISIS network entity title (NET). The first 8 bits are usually
// 49 (private AFI), next 16 bits represent area, next 48 bits represent
// system id and final 8 bits are set to 0.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/net"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/net"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Net() *NetworkInstance_Protocol_Isis_Global_NetPath {
	return &NetworkInstance_Protocol_Isis_Global_NetPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "net"},
			map[string]interface{}{},
			n,
		),
	}
}

// Net (leaf-list): ISIS network entity title (NET). The first 8 bits are usually
// 49 (private AFI), next 16 bits represent area, next 48 bits represent
// system id and final 8 bits are set to 0.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/net"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/net"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Net() *NetworkInstance_Protocol_Isis_Global_NetPathAny {
	return &NetworkInstance_Protocol_Isis_Global_NetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "net"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nsr (container): This container defines ISIS Non-Stop Routing.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nsr"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Nsr() *NetworkInstance_Protocol_Isis_Global_NsrPath {
	return &NetworkInstance_Protocol_Isis_Global_NsrPath{
		NodePath: ygot.NewNodePath(
			[]string{"nsr"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nsr (container): This container defines ISIS Non-Stop Routing.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nsr"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Nsr() *NetworkInstance_Protocol_Isis_Global_NsrPathAny {
	return &NetworkInstance_Protocol_Isis_Global_NsrPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"nsr"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoiTlv (leaf): ISIS purge TLV. When set to true, a TLV is added to purges to record
// the system ID  of the IS generating the purge.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/poi-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/poi-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) PoiTlv() *NetworkInstance_Protocol_Isis_Global_PoiTlvPath {
	return &NetworkInstance_Protocol_Isis_Global_PoiTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "poi-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// PoiTlv (leaf): ISIS purge TLV. When set to true, a TLV is added to purges to record
// the system ID  of the IS generating the purge.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/poi-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/config/poi-tlv"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) PoiTlv() *NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Global_PoiTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "poi-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReferenceBandwidth (container): This container defines ISIS Reference Bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReferenceBandwidth (container): This container defines ISIS Reference Bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operational state relating to segment routing.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) SegmentRouting() *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operational state relating to segment routing.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) SegmentRouting() *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Timers() *NetworkInstance_Protocol_Isis_Global_TimersPath {
	return &NetworkInstance_Protocol_Isis_Global_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Timers() *NetworkInstance_Protocol_Isis_Global_TimersPathAny {
	return &NetworkInstance_Protocol_Isis_Global_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): This container defines ISIS transport.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport"
func (n *NetworkInstance_Protocol_Isis_GlobalPath) Transport() *NetworkInstance_Protocol_Isis_Global_TransportPath {
	return &NetworkInstance_Protocol_Isis_Global_TransportPath{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// Transport (container): This container defines ISIS transport.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "transport"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport"
func (n *NetworkInstance_Protocol_Isis_GlobalPathAny) Transport() *NetworkInstance_Protocol_Isis_Global_TransportPathAny {
	return &NetworkInstance_Protocol_Isis_Global_TransportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"transport"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_AfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Af_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/metric"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) Metric() *NetworkInstance_Protocol_Isis_Global_Af_MetricPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/metric"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) Metric() *NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (container): This container defines multi-topology address-family configuration
// and state information. ISIS TLV 235, 237.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) MultiTopology() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath{
		NodePath: ygot.NewNodePath(
			[]string{"multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopology (container): This container defines multi-topology address-family configuration
// and state information. ISIS TLV 235, 237.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "multi-topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) MultiTopology() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"multi-topology"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPath) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfPathAny) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny) AfiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPath) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/afi-safi/af/multi-topology/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Global_Af_MultiTopologyPathAny) SafiName() *NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Af_MultiTopology_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_AfiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_AfiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi YANG schema element.
type NetworkInstance_Protocol_Isis_Global_AfiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/nh-type YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/nh-type YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPath) AfiName() *NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPathAny) AfiName() *NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Afi_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NhType (leaf-list): Tunnel NH Type(RSVP,SR). When present it implies
// that nh-type shortcut is enabled for a specified AFI.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/nh-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/nh-type"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPath) NhType() *NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath {
	return &NetworkInstance_Protocol_Isis_Global_Afi_NhTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "nh-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NhType (leaf-list): Tunnel NH Type(RSVP,SR). When present it implies
// that nh-type shortcut is enabled for a specified AFI.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/nh-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/igp-shortcuts/afi/config/nh-type"
func (n *NetworkInstance_Protocol_Isis_Global_AfiPathAny) NhType() *NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Afi_NhTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "nh-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable or disable the IS-IS graceful restart helper function. When
// this leaf is set, the local system does not utilise the IS-IS
// graceful restart procedures during its own restart, but supports
// retaining forwarding information during a remote speaker's restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Enable or disable the IS-IS graceful restart helper function. When
// this leaf is set, the local system does not utilise the IS-IS
// graceful restart procedures during its own restart, but supports
// retaining forwarding information during a remote speaker's restart.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Isis_Global_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny struct {
	*ygot.NodePath
}

// Level1ToLevel2 (container): Policies relating to prefixes to be propagated from
// Level 1 to Level 2.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level1-to-level2"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath) Level1ToLevel2() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path{
		NodePath: ygot.NewNodePath(
			[]string{"level1-to-level2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Level1ToLevel2 (container): Policies relating to prefixes to be propagated from
// Level 1 to Level 2.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level1-to-level2"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny) Level1ToLevel2() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"level1-to-level2"},
			map[string]interface{}{},
			n,
		),
	}
}

// Level2ToLevel1 (container): Policies relating to prefixes to be propagated from
// Level2 to Level 1.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level2-to-level1"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPath) Level2ToLevel1() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path{
		NodePath: ygot.NewNodePath(
			[]string{"level2-to-level1"},
			map[string]interface{}{},
			n,
		),
	}
}

// Level2ToLevel1 (container): Policies relating to prefixes to be propagated from
// Level2 to Level 1.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "level2-to-level1"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPoliciesPathAny) Level2ToLevel1() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"level2-to-level1"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2Path) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level1-to-level2/config/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2PathAny) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level1ToLevel2_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1 YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/default-import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1Path) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/inter-level-propagation-policies/level2-to-level1/config/import-policy"
func (n *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1PathAny) ImportPolicy() *NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Isis_Global_InterLevelPropagationPolicies_Level2ToLevel1_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBitPathAny struct {
	*ygot.NodePath
}

// AttachedBit (container): This container defines Attached Bit.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "attached-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPath) AttachedBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"attached-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttachedBit (container): This container defines Attached Bit.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "attached-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPathAny) AttachedBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"attached-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverloadBit (container): This container defines Overload Bit configuration.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "overload-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPath) OverloadBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"overload-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// OverloadBit (container): This container defines Overload Bit configuration.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "overload-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBitPathAny) OverloadBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"overload-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/ignore-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/ignore-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/suppress-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/suppress-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny struct {
	*ygot.NodePath
}

// IgnoreBit (leaf): When set to true, if the attached bit is set on an incoming Level 1
// IS-IS, the local system ignores it. In this case the local system
// does not set a default route to the L1L2 router advertising the PDU
// with the attached bit set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ignore-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/ignore-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath) IgnoreBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ignore-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgnoreBit (leaf): When set to true, if the attached bit is set on an incoming Level 1
// IS-IS, the local system ignores it. In this case the local system
// does not set a default route to the L1L2 router advertising the PDU
// with the attached bit set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ignore-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/ignore-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny) IgnoreBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_IgnoreBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ignore-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SuppressBit (leaf): When set to true, if the local IS acts as a L1L2 router, then the
// attached bit is not advertised in locally generated PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/suppress-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/suppress-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPath) SuppressBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "suppress-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SuppressBit (leaf): When set to true, if the local IS acts as a L1L2 router, then the
// attached bit is not advertised in locally generated PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/suppress-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/attached-bit/config/suppress-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBitPathAny) SuppressBit() *NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_AttachedBit_SuppressBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "suppress-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/advertise-high-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/advertise-high-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit-on-boot YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit-on-boot YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny struct {
	*ygot.NodePath
}

// AdvertiseHighMetric (leaf): When set to true, the local IS advertises links with the highest
// available metric regardless of their configured metric. The metric
// value is based on the metric style - if wide metrics are utilised
// the metric is advertised as 16777214, otherwise they are advertised
// with a value of 63.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/advertise-high-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/advertise-high-metric"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) AdvertiseHighMetric() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "advertise-high-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdvertiseHighMetric (leaf): When set to true, the local IS advertises links with the highest
// available metric regardless of their configured metric. The metric
// value is based on the metric style - if wide metrics are utilised
// the metric is advertised as 16777214, otherwise they are advertised
// with a value of 63.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/advertise-high-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/advertise-high-metric"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) AdvertiseHighMetric() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_AdvertiseHighMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "advertise-high-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResetTriggerAny (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger (wildcarded): oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) ResetTriggerAny() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": "*"},
			n,
		),
	}
}

// ResetTriggerAny (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger (wildcarded): oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) ResetTriggerAny() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": "*"},
			n,
		),
	}
}

// ResetTrigger (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger: oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) ResetTrigger(ResetTrigger oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": ResetTrigger},
			n,
		),
	}
}

// ResetTrigger (list): This list describes ISIS Overload reset trigger reasons.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "reset-triggers/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger"
// ResetTrigger: oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) ResetTrigger(ResetTrigger oc.E_IsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"reset-triggers", "reset-trigger"},
			map[string]interface{}{"reset-trigger": ResetTrigger},
			n,
		),
	}
}

// SetBit (leaf): When set to true, IS-IS overload bit is set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) SetBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBit (leaf): When set to true, IS-IS overload bit is set.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) SetBit() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBitOnBoot (leaf): When set to true, the IS-IS overload bit is set on system boot.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-bit-on-boot"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit-on-boot"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPath) SetBitOnBoot() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-bit-on-boot"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetBitOnBoot (leaf): When set to true, the IS-IS overload bit is set on system boot.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-bit-on-boot"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/config/set-bit-on-boot"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBitPathAny) SetBitOnBoot() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_SetBitOnBootPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-bit-on-boot"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/reset-trigger YANG schema element.
type NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny struct {
	*ygot.NodePath
}

// Delay (leaf): If a reset trigger is specified, the system should delay resetting
// the overload bit for the specified number of seconds after the
// trigger occurs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/delay"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath) Delay() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): If a reset trigger is specified, the system should delay resetting
// the overload bit for the specified number of seconds after the
// trigger occurs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/delay"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny) Delay() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResetTrigger (leaf): In the case that the system sets the overload bit on start, the
// system should reset the bit (i.e., clear the overload bit) upon
// the specified trigger.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/reset-trigger"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPath) ResetTrigger() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reset-trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResetTrigger (leaf): In the case that the system sets the overload bit on start, the
// system should reset the bit (i.e., clear the overload bit) upon
// the specified trigger.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reset-trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/lsp-bit/overload-bit/reset-triggers/reset-trigger/config/reset-trigger"
func (n *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTriggerPathAny) ResetTrigger() *NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny {
	return &NetworkInstance_Protocol_Isis_Global_LspBit_OverloadBit_ResetTrigger_ResetTriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reset-trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Global_MplsPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Global_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Global_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_NsrPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NsrPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_NsrPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr YANG schema element.
type NetworkInstance_Protocol_Isis_Global_NsrPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/nsr/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_NsrPath) Enabled() *NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/nsr/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_NsrPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Nsr_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/config/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/config/reference-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny struct {
	*ygot.NodePath
}

// ReferenceBandwidth (leaf): ISIS Reference Bandwidth value
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/config/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPath) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReferenceBandwidth (leaf): ISIS Reference Bandwidth value
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/reference-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/reference-bandwidth/config/reference-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidthPathAny) ReferenceBandwidth() *NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Global_ReferenceBandwidth_ReferenceBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "reference-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srgb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srgb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srlb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srlb YANG schema element.
type NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, the segment routing extensions are
// utilised within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath) Enabled() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, the segment routing extensions are
// utilised within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny) Enabled() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srgb (leaf): A reference to the Segment Routing Global Block (SRGB) that is
// to be used by this IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/srgb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srgb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath) Srgb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "srgb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srgb (leaf): A reference to the Segment Routing Global Block (SRGB) that is
// to be used by this IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/srgb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srgb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny) Srgb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "srgb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srlb (leaf): A reference to the Segment Routing Local Block (SRLB) that is to
// be advertised by the IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/srlb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srlb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPath) Srlb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "srlb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Srlb (leaf): A reference to the Segment Routing Local Block (SRLB) that is to
// be advertised by the IGP instance.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/srlb"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/segment-routing/config/srlb"
func (n *NetworkInstance_Protocol_Isis_Global_SegmentRoutingPathAny) Srlb() *NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_Protocol_Isis_Global_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "srlb"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-lifetime-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-lifetime-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-refresh-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-refresh-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny struct {
	*ygot.NodePath
}

// LspGeneration (container): This container defines ISIS LSP Generation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) LspGeneration() *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspGeneration (container): This container defines ISIS LSP Generation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) LspGeneration() *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspLifetimeInterval (leaf): Time interval in seconds that specifies how long an LSP remains in
// LSDB without being refreshed.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-lifetime-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-lifetime-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) LspLifetimeInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-lifetime-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspLifetimeInterval (leaf): Time interval in seconds that specifies how long an LSP remains in
// LSDB without being refreshed.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-lifetime-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-lifetime-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) LspLifetimeInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspLifetimeIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-lifetime-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspRefreshInterval (leaf): Time interval in seconds that specifies how often route topology
// that a device originates is transmitted in LSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-refresh-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-refresh-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) LspRefreshInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-refresh-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspRefreshInterval (leaf): Time interval in seconds that specifies how often route topology
// that a device originates is transmitted in LSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-refresh-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/config/lsp-refresh-interval"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) LspRefreshInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspRefreshIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-refresh-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): This container defines ISIS SPF timer settings.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPath) Spf() *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_SpfPath{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): This container defines ISIS SPF timer settings.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf"
func (n *NetworkInstance_Protocol_Isis_Global_TimersPathAny) Spf() *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-first-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-first-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-max-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-max-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-second-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-second-wait-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny struct {
	*ygot.NodePath
}

// LspFirstWaitInterval (leaf): Time interval in milliseconds that specifies the first LSP generation
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-first-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-first-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) LspFirstWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-first-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspFirstWaitInterval (leaf): Time interval in milliseconds that specifies the first LSP generation
// delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-first-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-first-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) LspFirstWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspFirstWaitIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-first-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspMaxWaitInterval (leaf): Time interval in milliseconds that specifies max interval between
// two consecutive occurrences of an LSP being generated.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-max-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-max-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) LspMaxWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-max-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspMaxWaitInterval (leaf): Time interval in milliseconds that specifies max interval between
// two consecutive occurrences of an LSP being generated.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-max-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-max-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) LspMaxWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspMaxWaitIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-max-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspSecondWaitInterval (leaf): Time interval in milliseconds that specifies the millisecond LSP
// generation delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-second-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-second-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPath) LspSecondWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-second-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspSecondWaitInterval (leaf): Time interval in milliseconds that specifies the millisecond LSP
// generation delay.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-second-wait-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/lsp-generation/config/lsp-second-wait-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_LspGenerationPathAny) LspSecondWaitInterval() *NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_LspGeneration_LspSecondWaitIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-second-wait-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_Timers_SpfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_SpfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-first-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-first-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-hold-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-hold-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-second-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-second-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny struct {
	*ygot.NodePath
}

// SpfFirstInterval (leaf): Time interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/spf-first-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-first-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) SpfFirstInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "spf-first-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfFirstInterval (leaf): Time interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/spf-first-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-first-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) SpfFirstInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfFirstIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "spf-first-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfHoldInterval (leaf): SPF Hold Down time interval in milliseconds.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/spf-hold-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-hold-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) SpfHoldInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "spf-hold-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfHoldInterval (leaf): SPF Hold Down time interval in milliseconds.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/spf-hold-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-hold-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) SpfHoldInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfHoldIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "spf-hold-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfSecondInterval (leaf): Time interval in milliseconds between the first and second
// SPF calculation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/spf-second-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-second-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPath) SpfSecondInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "spf-second-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfSecondInterval (leaf): Time interval in milliseconds between the first and second
// SPF calculation.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/spf-second-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/timers/spf/config/spf-second-interval"
func (n *NetworkInstance_Protocol_Isis_Global_Timers_SpfPathAny) SpfSecondInterval() *NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Global_Timers_Spf_SpfSecondIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "spf-second-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Global_TransportPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TransportPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_TransportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport YANG schema element.
type NetworkInstance_Protocol_Isis_Global_TransportPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport/config/lsp-mtu-size YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/global/transport/config/lsp-mtu-size YANG schema element.
type NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny struct {
	*ygot.NodePath
}

// LspMtuSize (leaf): The maximum size in bytes of an IS-IS Link state PDU.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-mtu-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport/config/lsp-mtu-size"
func (n *NetworkInstance_Protocol_Isis_Global_TransportPath) LspMtuSize() *NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath {
	return &NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-mtu-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspMtuSize (leaf): The maximum size in bytes of an IS-IS Link state PDU.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-mtu-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/global/transport/config/lsp-mtu-size"
func (n *NetworkInstance_Protocol_Isis_Global_TransportPathAny) LspMtuSize() *NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny {
	return &NetworkInstance_Protocol_Isis_Global_Transport_LspMtuSizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-mtu-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Isis_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Isis_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/circuit-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/circuit-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/hello-padding YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_PassivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_PassivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_PassivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_PassivePathAny struct {
	*ygot.NodePath
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) AfAny() *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) AfAny() *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPath {
	return &NetworkInstance_Protocol_Isis_Interface_AfPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Authentication() *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Interface_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Authentication() *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bfd (container): This container defines BFD.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Bfd() *NetworkInstance_Protocol_Isis_Interface_BfdPath {
	return &NetworkInstance_Protocol_Isis_Interface_BfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bfd (container): This container defines BFD.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Bfd() *NetworkInstance_Protocol_Isis_Interface_BfdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_BfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitCounters (container): This container defines state information for ISIS circuit counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "circuit-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) CircuitCounters() *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"circuit-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitCounters (container): This container defines state information for ISIS circuit counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "circuit-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) CircuitCounters() *NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"circuit-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitType (leaf): ISIS circuit type (p2p, broadcast).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/circuit-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/circuit-type"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) CircuitType() *NetworkInstance_Protocol_Isis_Interface_CircuitTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "circuit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// CircuitType (leaf): ISIS circuit type (p2p, broadcast).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/circuit-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/circuit-type"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) CircuitType() *NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_CircuitTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "circuit-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) EnableBfd() *NetworkInstance_Protocol_Isis_Interface_EnableBfdPath {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) EnableBfd() *NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/enabled"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/enabled"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/hello-padding"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) HelloPadding() *NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath {
	return &NetworkInstance_Protocol_Isis_Interface_HelloPaddingPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloPadding (leaf): Controls the padding type for IS-IS Hello PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-padding"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/hello-padding"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) HelloPadding() *NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_HelloPaddingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-padding"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Interface for which ISIS configuration is to be applied.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) InterfaceId() *NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Interface for which ISIS configuration is to be applied.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) InterfaceId() *NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePath) LevelAny() *NetworkInstance_Protocol_Isis_Interface_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// LevelAny (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) LevelAny() *NetworkInstance_Protocol_Isis_Interface_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": "*"},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_Interface_LevelPath {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPath{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// Level (list): Configuration and operational state parameters related to a
// particular level on an IS-IS enabled interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "levels/level"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level"
// LevelNumber: uint8
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Level(LevelNumber uint8) *NetworkInstance_Protocol_Isis_Interface_LevelPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_LevelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"levels", "level"},
			map[string]interface{}{"level-number": LevelNumber},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Mpls() *NetworkInstance_Protocol_Isis_Interface_MplsPath {
	return &NetworkInstance_Protocol_Isis_Interface_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state relating to MPLS-related
// features in IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Mpls() *NetworkInstance_Protocol_Isis_Interface_MplsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When set to true, the referenced interface is a passive interface
// such that it is not eligible to establish adjacencies with other
// systems, but is advertised into the IS-IS topology.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/passive"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Passive() *NetworkInstance_Protocol_Isis_Interface_PassivePath {
	return &NetworkInstance_Protocol_Isis_Interface_PassivePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When set to true, the referenced interface is a passive interface
// such that it is not eligible to establish adjacencies with other
// systems, but is advertised into the IS-IS topology.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/config/passive"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Passive() *NetworkInstance_Protocol_Isis_Interface_PassivePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_PassivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container describes ISIS interface timers configuration
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Isis_InterfacePath) Timers() *NetworkInstance_Protocol_Isis_Interface_TimersPath {
	return &NetworkInstance_Protocol_Isis_Interface_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container describes ISIS interface timers configuration
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Isis_InterfacePathAny) Timers() *NetworkInstance_Protocol_Isis_Interface_TimersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_AfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_AfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPath) AfiName() *NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPathAny) AfiName() *NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Af_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Af_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Af_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPath) SafiName() *NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/afi-safi/af/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_AfPathAny) SafiName() *NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Af_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) AuthType() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) AuthType() *NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_AuthTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPath) Keychain() *NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/authentication/config/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_AuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Authentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_BfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_BfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_BfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_BfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/config/bfd-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/config/bfd-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny struct {
	*ygot.NodePath
}

// BfdTlv (leaf): When set to true, BFD TLV is used. This enables support for the IS-IS
// BFD TLV options, which specify that a BFD session must be established
// before an IS-IS adjacency can transition to the established state.
// This option should be enabled on all IS-IS neighbors on a shared
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/bfd-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/config/bfd-tlv"
func (n *NetworkInstance_Protocol_Isis_Interface_BfdPath) BfdTlv() *NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath {
	return &NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "bfd-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// BfdTlv (leaf): When set to true, BFD TLV is used. This enables support for the IS-IS
// BFD TLV options, which specify that a BFD session must be established
// before an IS-IS adjacency can transition to the established state.
// This option should be enabled on all IS-IS neighbors on a shared
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/bfd-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/bfd/config/bfd-tlv"
func (n *NetworkInstance_Protocol_Isis_Interface_BfdPathAny) BfdTlv() *NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Bfd_BfdTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "bfd-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/circuit-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_CircuitCountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Isis_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_LevelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_LevelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_LevelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_LevelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PassivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PassivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/passive YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny struct {
	*ygot.NodePath
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AfAny() *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAny (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AfAny() *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnySafiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName (wildcarded): oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AfAnySafiName(AfiName oc.E_IsisTypes_AFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": "*"},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// AfAnyAfiName (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName (wildcarded): oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) AfAnyAfiName(SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": "*", "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPath{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Af (list): Address-family/Subsequent Address-family list.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "afi-safi/af"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af"
// AfiName: oc.E_IsisTypes_AFI_TYPE
// SafiName: oc.E_IsisTypes_SAFI_TYPE
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Af(AfiName oc.E_IsisTypes_AFI_TYPE, SafiName oc.E_IsisTypes_SAFI_TYPE) *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"afi-safi", "af"},
			map[string]interface{}{"afi-name": AfiName, "safi-name": SafiName},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloAuthentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) HelloAuthentication() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"hello-authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloAuthentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) HelloAuthentication() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number(level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/level-number"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) LevelNumber() *NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number(level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/level-number"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) LevelNumber() *NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_LevelNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// PacketCounters (container): This container defines ISIS interface packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "packet-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) PacketCounters() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"packet-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// PacketCounters (container): This container defines ISIS interface packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "packet-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) PacketCounters() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"packet-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): ISIS passive interface admin enable/disable function.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/passive"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Passive() *NetworkInstance_Protocol_Isis_Interface_Level_PassivePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PassivePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): ISIS passive interface admin enable/disable function.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/passive"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Passive() *NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PassivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): ISIS neighbor priority(LAN hello PDU only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/priority"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Priority() *NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): ISIS neighbor priority(LAN hello PDU only).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/config/priority"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Priority() *NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPath) Timers() *NetworkInstance_Protocol_Isis_Interface_Level_TimersPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines ISIS timers.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers"
func (n *NetworkInstance_Protocol_Isis_Interface_LevelPathAny) Timers() *NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_AfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_AfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/afi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/safi-name YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny struct {
	*ygot.NodePath
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) AfiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// AfiName (leaf): Address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/afi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) AfiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_AfiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/metric"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) Metric() *NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value(default=10).
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/metric"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) Metric() *NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) SafiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SafiName (leaf): Subsequent address-family type.
// ----------------------------------------
// Defining module: "openconfig-isis-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/safi-name"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/config/safi-name"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) SafiName() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SafiNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "safi-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operatioanl state parameters relating to segment
// routing for an interface within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPath) SegmentRouting() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRouting (container): Configuration and operatioanl state parameters relating to segment
// routing for an interface within the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_AfPathAny) SegmentRouting() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// AdjacencySidAny (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId (wildcarded): [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAny (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId (wildcarded): [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAnySidId (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId (wildcarded): [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySidAnySidId(Neighbor string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAnySidId (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId (wildcarded): [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySidAnySidId(Neighbor string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": "*"},
			n,
		),
	}
}

// AdjacencySidAnyNeighbor (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId: [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySidAnyNeighbor(SidId oc.NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": SidId},
			n,
		),
	}
}

// AdjacencySidAnyNeighbor (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor (wildcarded): string
// SidId: [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySidAnyNeighbor(SidId oc.NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": "*", "sid-id": SidId},
			n,
		),
	}
}

// AdjacencySid (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId: [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) AdjacencySid(Neighbor string, SidId oc.NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": SidId},
			n,
		),
	}
}

// AdjacencySid (list): An Adjacency SID to be advertised for the specified interface.
// The Adj-SID's identifier (the SID ID) must be unique, with flags
// specified indicating the parameters that should be set for the SID.
// Where a SID value is specified that is allocated from the SRGB, the
// global flag must be set by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid"
// Neighbor: string
// SidId: [oc.UnionUint32, oc.E_MplsTypes_MplsLabel_Enum, oc.UnionString, oc.E_AdjacencySid_SidId_Enum]
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) AdjacencySid(Neighbor string, SidId oc.NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidId_Union) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"neighbor": Neighbor, "sid-id": SidId},
			n,
		),
	}
}

// PrefixSidAny (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) PrefixSidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// PrefixSidAny (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) PrefixSidAny() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": "*"},
			n,
		),
	}
}

// PrefixSid (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPath) PrefixSid(Prefix string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// PrefixSid (list): An IGP prefix that should have a segment routing IGP-Prefix SID
// allocated to it. The value of the SID is specified by the SID ID,
// as an absolute value. If the absolute value falls within the SRGB,
// the Global flag should be advertised by the system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid"
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRoutingPathAny) PrefixSid(Prefix string) *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"prefix": Prefix},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/group YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/group YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/protection-eligible YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/protection-eligible YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny struct {
	*ygot.NodePath
}

// Group (leaf): When set to true, the Adj-SID is indicated to be part of a group, and
// the G flag is set to 1 in the corresponding advertisement in the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/group"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) Group() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): When set to true, the Adj-SID is indicated to be part of a group, and
// the G flag is set to 1 in the corresponding advertisement in the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/group"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) Group() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Neighbor (leaf): The remote system on the interface with which the Adj-SID is
// associated.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/neighbor"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) Neighbor() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "neighbor"},
			map[string]interface{}{},
			n,
		),
	}
}

// Neighbor (leaf): The remote system on the interface with which the Adj-SID is
// associated.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/neighbor"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) Neighbor() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "neighbor"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtectionEligible (leaf): Whether the Adj-SID should be considered to be eligible for protection
// using IP or MPLS FRR during a network failure. When this value is set to
// true, the B-flag of the Adj-SID is set to 1, and the local system should
// provide FRR paths for the associated label forwarding entry. When it is
// set to false, the local system must not provide FRR for the specified
// LFIB entry.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protection-eligible"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/protection-eligible"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) ProtectionEligible() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protection-eligible"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtectionEligible (leaf): Whether the Adj-SID should be considered to be eligible for protection
// using IP or MPLS FRR during a network failure. When this value is set to
// true, the B-flag of the Adj-SID is set to 1, and the local system should
// provide FRR paths for the associated label forwarding entry. When it is
// set to false, the local system must not provide FRR for the specified
// LFIB entry.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protection-eligible"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/protection-eligible"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) ProtectionEligible() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_ProtectionEligiblePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protection-eligible"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The value of the Adj-SID to be advertised. Where a static SID
// identifier is specified, this should be advertised directly by the
// system. Where the DYNAMIC value is specified, this should be treated
// as a dynamically allocated value. When the MPLS data plane is in use
// the dynamic value should not fall within a reserved-label-block.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPath) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The value of the Adj-SID to be advertised. Where a static SID
// identifier is specified, this should be advertised directly by the
// system. Where the DYNAMIC value is specified, this should be treated
// as a dynamically allocated value. When the MPLS data plane is in use
// the dynamic value should not fall within a reserved-label-block.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/adjacency-sids/adjacency-sid/config/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySidPathAny) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_AdjacencySid_SidIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/label-options YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/label-options YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/sid-id YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny struct {
	*ygot.NodePath
}

// LabelOptions (leaf): The options associated with the IGP prefix SID for MPLS. The value
// of this leaf specifies the option that the SID should be advertised
// into the IGP with.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/label-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/label-options"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath) LabelOptions() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "label-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// LabelOptions (leaf): The options associated with the IGP prefix SID for MPLS. The value
// of this leaf specifies the option that the SID should be advertised
// into the IGP with.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/label-options"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/label-options"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny) LabelOptions() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_LabelOptionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "label-options"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IP prefix for which the IGP prefix SID should be advertised. The
// value specified is a local prefix on the interface which is advertised
// into the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/prefix"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath) Prefix() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IP prefix for which the IGP prefix SID should be advertised. The
// value specified is a local prefix on the interface which is advertised
// into the IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/prefix"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny) Prefix() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The Segment Identifier to be used when advertising the IGP Prefix SID.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPath) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidId (leaf): The Segment Identifier to be used when advertising the IGP Prefix SID.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sid-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/afi-safi/af/segment-routing/prefix-sids/prefix-sid/config/sid-id"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSidPathAny) SidId() *NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Af_SegmentRouting_PrefixSid_SidIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sid-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) AuthMode() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-password"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) AuthPassword() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) AuthType() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/auth-type"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) AuthType() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_AuthTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): Enabled or disable ISIS Hello authentication. Hello authentication
// is used on a per-interface basis to authenticate adjacencies on the
// interface.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPath) Keychain() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a keychain that should be used for hello authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/hello-authentication/config/keychain"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_HelloAuthentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny struct {
	*ygot.NodePath
}

// Csnp (container): Operational state parameters relating to CSNPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Csnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Csnp (container): Operational state parameters relating to CSNPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Csnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esh (container): This container defines ESH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "esh"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Esh() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath{
		NodePath: ygot.NewNodePath(
			[]string{"esh"},
			map[string]interface{}{},
			n,
		),
	}
}

// Esh (container): This container defines ESH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "esh"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Esh() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"esh"},
			map[string]interface{}{},
			n,
		),
	}
}

// Iih (container): This container defines IIH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "iih"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Iih() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath{
		NodePath: ygot.NewNodePath(
			[]string{"iih"},
			map[string]interface{}{},
			n,
		),
	}
}

// Iih (container): This container defines IIH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "iih"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Iih() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"iih"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ish (container): This container defines ISH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ish"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Ish() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath{
		NodePath: ygot.NewNodePath(
			[]string{"ish"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ish (container): This container defines ISH packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ish"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Ish() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ish"},
			map[string]interface{}{},
			n,
		),
	}
}

// Lsp (container): This container defines LSP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Lsp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Lsp (container): This container defines LSP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Lsp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Psnp (container): This container defines PSNP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Psnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Psnp (container): This container defines PSNP packet counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Psnp() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Unknown (container): Operational state parameters relating to IS-IS PDUs that are not
// otherwise classified - referred to as Unknown PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPath) Unknown() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown"},
			map[string]interface{}{},
			n,
		),
	}
}

// Unknown (container): Operational state parameters relating to IS-IS PDUs that are not
// otherwise classified - referred to as Unknown PDUs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_PacketCountersPathAny) Unknown() *NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_CsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/esh YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_EshPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/iih YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IihPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/ish YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_IshPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_LspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_PsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/packet-counters/unknown YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_PacketCounters_UnknownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-multiplier YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-multiplier YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny struct {
	*ygot.NodePath
}

// HelloInterval (leaf): ISIS hello-interval value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPath) HelloInterval() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): ISIS hello-interval value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny) HelloInterval() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMultiplier (leaf): ISIS hello-multiplier value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-multiplier"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-multiplier"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPath) HelloMultiplier() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-multiplier"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMultiplier (leaf): ISIS hello-multiplier value.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-multiplier"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/levels/level/timers/config/hello-multiplier"
func (n *NetworkInstance_Protocol_Isis_Interface_Level_TimersPathAny) HelloMultiplier() *NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Level_Timers_HelloMultiplierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-multiplier"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_MplsPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Interface_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): Configuration and operational state relating to synchronisation
// between the LDP and IS-IS
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Isis_Interface_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, rely on IGP/LDP synchronization. IGP cost for
// link is maintained at max until LDP adjacencies are established
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): Specifies a delay, expressed in units of seconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Interface_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/csnp-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/csnp-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/lsp-pacing-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/lsp-pacing-interval YANG schema element.
type NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny struct {
	*ygot.NodePath
}

// CsnpInterval (leaf): The interval, specified in seconds, at which periodic CSNP packets
// should be transmitted by the local IS.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/csnp-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/csnp-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPath) CsnpInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "csnp-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// CsnpInterval (leaf): The interval, specified in seconds, at which periodic CSNP packets
// should be transmitted by the local IS.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/csnp-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/csnp-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPathAny) CsnpInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_CsnpIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "csnp-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspPacingInterval (leaf): The interval interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-pacing-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/lsp-pacing-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPath) LspPacingInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-pacing-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspPacingInterval (leaf): The interval interval in milliseconds between the
// detection of topology change and when the SPF algorithm runs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/lsp-pacing-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/interfaces/interface/timers/config/lsp-pacing-interval"
func (n *NetworkInstance_Protocol_Isis_Interface_TimersPathAny) LspPacingInterval() *NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny {
	return &NetworkInstance_Protocol_Isis_Interface_Timers_LspPacingIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "lsp-pacing-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_LevelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_LevelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_LevelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level YANG schema element.
type NetworkInstance_Protocol_Isis_LevelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/authentication-check YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_LevelNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_LevelNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/level-number YANG schema element.
type NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_MetricStylePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/metric-style YANG schema element.
type NetworkInstance_Protocol_Isis_Level_MetricStylePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_MetricStylePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/config/metric-style YANG schema element.
type NetworkInstance_Protocol_Isis_Level_MetricStylePathAny struct {
	*ygot.NodePath
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication"
func (n *NetworkInstance_Protocol_Isis_LevelPath) Authentication() *NetworkInstance_Protocol_Isis_Level_AuthenticationPath {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): This container defines ISIS authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) Authentication() *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/authentication-check"
func (n *NetworkInstance_Protocol_Isis_LevelPath) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationCheck (leaf): When set to true, reject all ISIS protocol PDUs that either have a mismatch
// in authentication-type or authentication-key.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-check"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/authentication-check"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) AuthenticationCheck() *NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny {
	return &NetworkInstance_Protocol_Isis_Level_AuthenticationCheckPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-check"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/enabled"
func (n *NetworkInstance_Protocol_Isis_LevelPath) Enabled() *NetworkInstance_Protocol_Isis_Level_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Level_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/enabled"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) Enabled() *NetworkInstance_Protocol_Isis_Level_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Level_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number (level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/level-number"
func (n *NetworkInstance_Protocol_Isis_LevelPath) LevelNumber() *NetworkInstance_Protocol_Isis_Level_LevelNumberPath {
	return &NetworkInstance_Protocol_Isis_Level_LevelNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// LevelNumber (leaf): ISIS level number (level-1, level-2).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/level-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/level-number"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) LevelNumber() *NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny {
	return &NetworkInstance_Protocol_Isis_Level_LevelNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "level-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricStyle (leaf): ISIS metric style types(narrow, wide).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric-style"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/metric-style"
func (n *NetworkInstance_Protocol_Isis_LevelPath) MetricStyle() *NetworkInstance_Protocol_Isis_Level_MetricStylePath {
	return &NetworkInstance_Protocol_Isis_Level_MetricStylePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric-style"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricStyle (leaf): ISIS metric style types(narrow, wide).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric-style"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/config/metric-style"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) MetricStyle() *NetworkInstance_Protocol_Isis_Level_MetricStylePathAny {
	return &NetworkInstance_Protocol_Isis_Level_MetricStylePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric-style"},
			map[string]interface{}{},
			n,
		),
	}
}

// RoutePreference (container): This container defines Administrative Distance (or preference)
// assigned to ISIS routes (level1 internal, level2 internal, level1
// external, level2 external).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference"
func (n *NetworkInstance_Protocol_Isis_LevelPath) RoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreferencePath {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// RoutePreference (container): This container defines Administrative Distance (or preference)
// assigned to ISIS routes (level1 internal, level2 internal, level1
// external, level2 external).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) RoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemLevelCounters (container): This container defines ISIS system level counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "system-level-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters"
func (n *NetworkInstance_Protocol_Isis_LevelPath) SystemLevelCounters() *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"system-level-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemLevelCounters (container): This container defines ISIS system level counters.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "system-level-counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) SystemLevelCounters() *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"system-level-counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (container): This container defines ISIS TE.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering"
func (n *NetworkInstance_Protocol_Isis_LevelPath) TrafficEngineering() *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath{
		NodePath: ygot.NewNodePath(
			[]string{"traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (container): This container defines ISIS TE.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering"
func (n *NetworkInstance_Protocol_Isis_LevelPathAny) TrafficEngineering() *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication YANG schema element.
type NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-mode YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-password YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-csnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-psnp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) AuthMode() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthMode (leaf): The type of authentication used in the applicable IS-IS PDUs.
//
// This leaf along with the sibling leaf 'auth-password' can be used
// to configure the simple key authentication.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-mode"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) AuthMode() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-password"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) AuthPassword() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthPassword (leaf): The authentication key used in the applicable IS-IS PDUs. The key in the
// packet may be encrypted according to the configured authentication type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-password"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-password"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) AuthPassword() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthPasswordPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-password"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-type"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) AuthType() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthType (leaf): The type of authentication used in the applicable IS-IS PDUs
// (simple_key, keychain).
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/auth-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/auth-type"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) AuthType() *NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_AuthTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "auth-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableCsnp (leaf): When this leaf is set to true, authentication is disabled for CSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-csnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) DisableCsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableCsnp (leaf): When this leaf is set to true, authentication is disabled for CSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-csnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-csnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) DisableCsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableCsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-csnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableLsp (leaf): When this leaf is set to true, authentication is disabled for LSP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) DisableLsp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableLsp (leaf): When this leaf is set to true, authentication is disabled for LSP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) DisableLsp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisableLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePsnp (leaf): When this leaf is set to true, authentication is disabled for PSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-psnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) DisablePsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisablePsnp (leaf): When this leaf is set to true, authentication is disabled for PSNP
// packets, overriding the value of the enabled leaf in this context.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-psnp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/disable-psnp"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) DisablePsnp() *NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_DisablePsnpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-psnp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, authentication of IS-IS PSNP, CSNP and
// LSP packets is enabled using the specified authentication details in
// the sibling leaves.
//
// The sibling 'disable-<type>' leaves can be used to override the value
// of this leaf and disable authentication for a specific packet type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) Enabled() *NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, authentication of IS-IS PSNP, CSNP and
// LSP packets is enabled using the specified authentication details in
// the sibling leaves.
//
// The sibling 'disable-<type>' leaves can be used to override the value
// of this leaf and disable authentication for a specific packet type.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) Enabled() *NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to the keychain that should be used for authenticating IS-IS
// packets - the keychain may contain either a simple password, or
// HMAC-MD5 key that is used for authenticating CSNP, PSNP and LSP packets
// within the specified IS-IS level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/keychain"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPath) Keychain() *NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to the keychain that should be used for authenticating IS-IS
// packets - the keychain may contain either a simple password, or
// HMAC-MD5 key that is used for authenticating CSNP, PSNP and LSP packets
// within the specified IS-IS level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/authentication/config/keychain"
func (n *NetworkInstance_Protocol_Isis_Level_AuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Authentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_RoutePreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/external-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/external-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/internal-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/internal-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny struct {
	*ygot.NodePath
}

// ExternalRoutePreference (leaf): Administrative Distance (preference) for external ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/external-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/external-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePath) ExternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "external-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalRoutePreference (leaf): Administrative Distance (preference) for external ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/external-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/external-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny) ExternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "external-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalRoutePreference (leaf): Administrative Distance (preference) for internal ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/internal-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/internal-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePath) InternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "internal-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalRoutePreference (leaf): Administrative Distance (preference) for internal ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/internal-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/config/internal-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny) InternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "internal-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv4-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv4-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv6-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv6-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath) Enabled() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny) Enabled() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4RouterId (leaf): IPv4 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv4-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv4-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath) Ipv4RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv4-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4RouterId (leaf): IPv4 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv4-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv4-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny) Ipv4RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv4-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6RouterId (leaf): IPv6 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv6-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv6-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath) Ipv6RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv6-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6RouterId (leaf): IPv6 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv6-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/config/ipv6-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny) Ipv6RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv6-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2 YANG schema element.
type NetworkInstance_Protocol_Ospfv2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2 YANG schema element.
type NetworkInstance_Protocol_Ospfv2PathAny struct {
	*ygot.NodePath
}

// AreaAny (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2Path) AreaAny() *NetworkInstance_Protocol_Ospfv2_AreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_AreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": "*"},
			n,
		),
	}
}

// AreaAny (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2PathAny) AreaAny() *NetworkInstance_Protocol_Ospfv2_AreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_AreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": "*"},
			n,
		),
	}
}

// Area (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2Path) Area(Identifier oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_AreaPath {
	return &NetworkInstance_Protocol_Ospfv2_AreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": Identifier},
			n,
		),
	}
}

// Area (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2PathAny) Area(Identifier oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_AreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_AreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": Identifier},
			n,
		),
	}
}

// Global (container): Configuration and operational state parameters for settings
// that are global to the OSPFv2 instance
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global"
func (n *NetworkInstance_Protocol_Ospfv2Path) Global() *NetworkInstance_Protocol_Ospfv2_GlobalPath {
	return &NetworkInstance_Protocol_Ospfv2_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Configuration and operational state parameters for settings
// that are global to the OSPFv2 instance
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global"
func (n *NetworkInstance_Protocol_Ospfv2PathAny) Global() *NetworkInstance_Protocol_Ospfv2_GlobalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_AreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_AreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_AreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_AreaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/config/identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/config/identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny struct {
	*ygot.NodePath
}

// Identifier (leaf): An identifier for the OSPFv2 area - described as either a
// 32-bit unsigned integer, or a dotted-quad
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/config/identifier"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Identifier() *NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// Identifier (leaf): An identifier for the OSPFv2 area - described as either a
// 32-bit unsigned integer, or a dotted-quad
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/config/identifier"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Identifier() *NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) InterfaceAny() *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) InterfaceAny() *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Interface (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Interface(Id string) *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Interface (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Interface(Id string) *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for OSPFv2
// extensions relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_MplsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for OSPFv2
// extensions relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// VirtualLinkAny (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) VirtualLinkAny() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": "*"},
			n,
		),
	}
}

// VirtualLinkAny (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) VirtualLinkAny() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": "*"},
			n,
		),
	}
}

// VirtualLink (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) VirtualLink(RemoteRouterId string) *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": RemoteRouterId},
			n,
		),
	}
}

// VirtualLink (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) VirtualLink(RemoteRouterId string) *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": RemoteRouterId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/authentication-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/authentication-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/hide-network YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/hide-network YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/multi-area-adjacency-primary YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/multi-area-adjacency-primary YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/network-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/network-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/passive YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/passive YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny struct {
	*ygot.NodePath
}

// AuthenticationType (leaf): The type of authentication that should be used on this
// interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/authentication-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) AuthenticationType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationType (leaf): The type of authentication that should be used on this
// interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/authentication-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) AuthenticationType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) EnableBfd() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) EnableBfd() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideNetwork (leaf): When this leaf is set to true, the network connected to
// the interface should be hidden from OSPFv2 advertisements
// per the procedure described in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hide-network"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/hide-network"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) HideNetwork() *NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hide-network"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideNetwork (leaf): When this leaf is set to true, the network connected to
// the interface should be hidden from OSPFv2 advertisements
// per the procedure described in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hide-network"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/hide-network"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) HideNetwork() *NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hide-network"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): An operator-specified string utilised to uniquely
// reference this interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Id() *NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): An operator-specified string utilised to uniquely
// reference this interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Id() *NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaFilter (container): OSPFv2 parameters relating to filtering of LSAs to
// neighbors the specified interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) LsaFilter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaFilter (container): OSPFv2 parameters relating to filtering of LSAs to
// neighbors the specified interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) LsaFilter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric for the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric for the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for
// OSPFv2 extensions related to MPLS on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for
// OSPFv2 extensions related to MPLS on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiAreaAdjacencyPrimary (leaf): When the specified interface is included in more than one
// area's configuration, this leaf marks whether the area should
// be considered the primary (when the value is true). In the
// case that this value is false, the area is considered a
// secondary area.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multi-area-adjacency-primary"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/multi-area-adjacency-primary"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) MultiAreaAdjacencyPrimary() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multi-area-adjacency-primary"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiAreaAdjacencyPrimary (leaf): When the specified interface is included in more than one
// area's configuration, this leaf marks whether the area should
// be considered the primary (when the value is true). In the
// case that this value is false, the area is considered a
// secondary area.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multi-area-adjacency-primary"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/multi-area-adjacency-primary"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) MultiAreaAdjacencyPrimary() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multi-area-adjacency-primary"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAny (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) NeighborAny() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) NeighborAny() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": "*"},
			n,
		),
	}
}

// Neighbor (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Neighbor(RouterId string) *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": RouterId},
			n,
		),
	}
}

// Neighbor (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Neighbor(RouterId string) *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": RouterId},
			n,
		),
	}
}

// NetworkType (leaf): The type of network that OSPFv2 should use for the specified
// interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/network-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/network-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) NetworkType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "network-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkType (leaf): The type of network that OSPFv2 should use for the specified
// interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/network-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/network-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) NetworkType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "network-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When this leaf is set to true, the interface should be
// advertised within the OSPF area but OSPF adjacencies should
// not be established over the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/passive"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Passive() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When this leaf is set to true, the interface should be
// advertised within the OSPF area but OSPF adjacencies should
// not be established over the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/passive"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Passive() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The local system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The local system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/config/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers relating to OSPFv2 on the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Timers() *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers relating to OSPFv2 on the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Timers() *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/config/all YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/config/all YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny struct {
	*ygot.NodePath
}

// All (leaf): When this leaf is set to true, all LSAs should be
// filtered to the neighbours with whom adjacencies are
// formed on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/all"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/config/all"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath) All() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "all"},
			map[string]interface{}{},
			n,
		),
	}
}

// All (leaf): When this leaf is set to true, all LSAs should be
// filtered to the neighbours with whom adjacencies are
// formed on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/all"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/config/all"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny) All() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "all"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/config/traffic-engineering-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/config/traffic-engineering-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringMetric (leaf): A link metric that should only be considered for traffic
// engineering purposes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/traffic-engineering-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/config/traffic-engineering-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath) TrafficEngineeringMetric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "traffic-engineering-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringMetric (leaf): A link metric that should only be considered for traffic
// engineering purposes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/traffic-engineering-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/config/traffic-engineering-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny) TrafficEngineeringMetric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "traffic-engineering-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): The metric that should be considered to the remote neighbor
// over this interface. This configuration is only applicable
// for multiple-access networks
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric that should be considered to the remote neighbor
// over this interface. This configuration is only applicable
// for multiple-access networks
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The router ID of the remote system.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The router ID of the remote system.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/config/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/dead-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/dead-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/hello-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/hello-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/retransmission-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/retransmission-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny struct {
	*ygot.NodePath
}

// DeadInterval (leaf): The number of seconds that the local system should let
// elapse before declaring a silent router down
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dead-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/dead-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath) DeadInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dead-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadInterval (leaf): The number of seconds that the local system should let
// elapse before declaring a silent router down
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dead-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/dead-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny) DeadInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dead-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): The number of seconds the local system waits between the
// transmission of subsequent Hello packets
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/hello-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath) HelloInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): The number of seconds the local system waits between the
// transmission of subsequent Hello packets
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/hello-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny) HelloInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionInterval (leaf): The number of seconds that the local system waits before
// retransmitting an unacknowledged LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/retransmission-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/retransmission-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath) RetransmissionInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "retransmission-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionInterval (leaf): The number of seconds that the local system waits before
// retransmitting an unacknowledged LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/retransmission-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/config/retransmission-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny) RetransmissionInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "retransmission-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/config/traffic-engineering-enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/config/traffic-engineering-enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny struct {
	*ygot.NodePath
}

// TrafficEngineeringEnabled (leaf): Specifies whether traffic engineering extensions should be
// advertised within the area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/traffic-engineering-enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/config/traffic-engineering-enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_MplsPath) TrafficEngineeringEnabled() *NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "traffic-engineering-enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringEnabled (leaf): Specifies whether traffic engineering extensions should be
// advertised within the area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/traffic-engineering-enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/config/traffic-engineering-enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny) TrafficEngineeringEnabled() *NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "traffic-engineering-enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/config/remote-router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/config/remote-router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny struct {
	*ygot.NodePath
}

// RemoteRouterId (leaf): The router ID of the device which terminates the remote end
// of the virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remote-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/config/remote-router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) RemoteRouterId() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remote-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteRouterId (leaf): The router ID of the device which terminates the remote end
// of the virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/remote-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/config/remote-router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) RemoteRouterId() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "remote-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global YANG schema element.
type NetworkInstance_Protocol_Ospfv2_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global YANG schema element.
type NetworkInstance_Protocol_Ospfv2_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/hide-transit-only-networks YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/hide-transit-only-networks YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/igp-shortcuts YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/igp-shortcuts YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/log-adjacency-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/log-adjacency-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/summary-route-cost-mode YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/config/summary-route-cost-mode YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny struct {
	*ygot.NodePath
}

// GracefulRestart (container): Configuration and operational state parameters for OSPFv2
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) GracefulRestart() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Configuration and operational state parameters for OSPFv2
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) GracefulRestart() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideTransitOnlyNetworks (leaf): When this leaf is set to true, do not advertise prefixes
// into OSPFv2 that correspond to transit interfaces, as per
// the behaviour discussed in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hide-transit-only-networks"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/hide-transit-only-networks"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) HideTransitOnlyNetworks() *NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hide-transit-only-networks"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideTransitOnlyNetworks (leaf): When this leaf is set to true, do not advertise prefixes
// into OSPFv2 that correspond to transit interfaces, as per
// the behaviour discussed in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hide-transit-only-networks"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/hide-transit-only-networks"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) HideTransitOnlyNetworks() *NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hide-transit-only-networks"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpShortcuts (leaf): When this leaf is set to true, OSPFv2 will route traffic to
// a remote system via any LSP to the system that is marked as
// shortcut eligible.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/igp-shortcuts"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/igp-shortcuts"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) IgpShortcuts() *NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "igp-shortcuts"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpShortcuts (leaf): When this leaf is set to true, OSPFv2 will route traffic to
// a remote system via any LSP to the system that is marked as
// shortcut eligible.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/igp-shortcuts"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/igp-shortcuts"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) IgpShortcuts() *NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "igp-shortcuts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterAreaPropagationPolicyAny (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAny() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAny (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAny() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnyDstArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAnyDstArea(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnyDstArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAnyDstArea(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnySrcArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAnySrcArea(DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnySrcArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAnySrcArea(DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicy (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicy(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union, DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicy (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicy(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union, DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": DstArea},
			n,
		),
	}
}

// LogAdjacencyChanges (leaf): When this leaf is set to true, a log message will be
// generated when the state of an OSPFv2 neighbour changes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/log-adjacency-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/log-adjacency-changes"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) LogAdjacencyChanges() *NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "log-adjacency-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LogAdjacencyChanges (leaf): When this leaf is set to true, a log message will be
// generated when the state of an OSPFv2 neighbour changes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/log-adjacency-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/log-adjacency-changes"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) LogAdjacencyChanges() *NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "log-adjacency-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): OSPFv2 parameters relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) Mpls() *NetworkInstance_Protocol_Ospfv2_Global_MplsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): OSPFv2 parameters relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) Mpls() *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): A 32-bit number represented as a dotted quad assigned to
// each router running the OSPFv2 protocol. This number should
// be unique within the autonomous system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) RouterId() *NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): A 32-bit number represented as a dotted quad assigned to
// each router running the OSPFv2 protocol. This number should
// be unique within the autonomous system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) RouterId() *NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryRouteCostMode (leaf): Specify how costs for the summary routes should be specified
// as per the behaviour in the original OSPF specification
// RFC1583, or alternatively whether the revised behaviour
// described in RFC2328 should be utilised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/summary-route-cost-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/summary-route-cost-mode"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) SummaryRouteCostMode() *NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "summary-route-cost-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryRouteCostMode (leaf): Specify how costs for the summary routes should be specified
// as per the behaviour in the original OSPF specification
// RFC1583, or alternatively whether the revised behaviour
// described in RFC2328 should be utilised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/summary-route-cost-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/config/summary-route-cost-mode"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) SummaryRouteCostMode() *NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "summary-route-cost-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Configuration and operational state parameters for OSPFv2
// timers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) Timers() *NetworkInstance_Protocol_Ospfv2_Global_TimersPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Configuration and operational state parameters for OSPFv2
// timers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) Timers() *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/helper-only YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When the value of this leaf is set to true, graceful restart
// is enabled on the local system. In this case, the system will
// use Grace-LSAs to signal that it is restarting to its
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When the value of this leaf is set to true, graceful restart
// is enabled on the local system. In this case, the system will
// use Grace-LSAs to signal that it is restarting to its
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Operate graceful-restart only in helper mode. When this leaf
// is set to true, the local system does not use Grace-LSAs to
// indicate that it is restarting, but will accept Grace-LSAs
// from remote systems, and suppress withdrawl of adjacencies
// of the system for the grace period specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Operate graceful-restart only in helper mode. When this leaf
// is set to true, the local system does not use Grace-LSAs to
// indicate that it is restarting, but will accept Grace-LSAs
// from remote systems, and suppress withdrawl of adjacencies
// of the system for the grace period specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/config/helper-only"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/dst-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/dst-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/src-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/src-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny struct {
	*ygot.NodePath
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) DefaultImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/default-import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstArea (leaf): The destination area to which prefixes are to be imported
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dst-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/dst-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) DstArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dst-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstArea (leaf): The destination area to which prefixes are to be imported
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dst-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/dst-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) DstArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dst-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) ImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) ImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcArea (leaf): The area from which prefixes are to be exported.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/src-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/src-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) SrcArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "src-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcArea (leaf): The area from which prefixes are to be exported.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/src-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/config/src-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) SrcArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "src-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/config/traffic-engineering-extensions YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/config/traffic-engineering-extensions YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringExtensions (leaf): When this leaf is set to true, use traffic engineering
// extensions for OSPF to advertise TE parameters via type 10
// Opaque LSAs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/traffic-engineering-extensions"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/config/traffic-engineering-extensions"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPath) TrafficEngineeringExtensions() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "traffic-engineering-extensions"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringExtensions (leaf): When this leaf is set to true, use traffic engineering
// extensions for OSPF to advertise TE parameters via type 10
// Opaque LSAs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/traffic-engineering-extensions"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/config/traffic-engineering-extensions"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny) TrafficEngineeringExtensions() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "traffic-engineering-extensions"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/config/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny struct {
	*ygot.NodePath
}

// LsaGeneration (container): Configuration and operational state parameters relating
// to timers governing the generation of LSAs by the local
// system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) LsaGeneration() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaGeneration (container): Configuration and operational state parameters relating
// to timers governing the generation of LSAs by the local
// system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) LsaGeneration() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxMetric (container): Configuration and operational state parameters relating
// to setting the OSPFv2 maximum metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) MaxMetric() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxMetric (container): Configuration and operational state parameters relating
// to setting the OSPFv2 maximum metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) MaxMetric() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): Configuration and operational state parameters relating
// to timers governing the operation of SPF runs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) Spf() *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): Configuration and operational state parameters relating
// to timers governing the operation of SPF runs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) Spf() *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny struct {
	*ygot.NodePath
}

// InitialDelay (leaf): The value of this leaf specifies the time between the first
// time an LSA is generated and advertised and the subsequent
// generation of that LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitialDelay (leaf): The value of this leaf specifies the time between the first
// time an LSA is generated and advertised and the subsequent
// generation of that LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum time between the
// generation of an LSA and the subsequent re-generation of that
// LSA. This value is used in implementations that support
// increasing delay between generation of an LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum time between the
// generation of an LSA and the subsequent re-generation of that
// LSA. This value is used in implementations that support
// increasing delay between generation of an LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/config/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/include YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/include YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/timeout YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/timeout YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/trigger YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/trigger YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny struct {
	*ygot.NodePath
}

// Include (leaf-list): By default, the maximum metric is advertised for all
// non-stub interfaces of a device. When identities are
// specified within this leaf-list, additional entities
// are also advertised with the maximum metric according
// to the values within the list.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/include"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/include"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Include() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "include"},
			map[string]interface{}{},
			n,
		),
	}
}

// Include (leaf-list): By default, the maximum metric is advertised for all
// non-stub interfaces of a device. When identities are
// specified within this leaf-list, additional entities
// are also advertised with the maximum metric according
// to the values within the list.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/include"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/include"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Include() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "include"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): When this leaf is set to true, all non-stub interfaces of
// the local system are advertised with the maximum metric,
// such that the router does not act as a transit system,
// (similarly to the IS-IS overload functionality).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/set"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Set() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): When this leaf is set to true, all non-stub interfaces of
// the local system are advertised with the maximum metric,
// such that the router does not act as a transit system,
// (similarly to the IS-IS overload functionality).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/set"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Set() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): The delay, in seconds, after which the advertisement of
// entities with the maximum metric should be cleared, and
// the system reverts to the default, or configured, metrics.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/timeout"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/timeout"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Timeout() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): The delay, in seconds, after which the advertisement of
// entities with the maximum metric should be cleared, and
// the system reverts to the default, or configured, metrics.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/timeout"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/timeout"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Timeout() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// Trigger (leaf-list): By default, the maximum metric is only advertised
// when the max-metric/set leaf is specified as true.
// In the case that identities are specified within this
// list, they provide additional triggers (e.g., system
// boot) that may cause the max-metric to be set. In this
// case, the system should still honour the timeout specified
// by the max-metric/timeout leaf, and clear the max-metric
// advertisements after the expiration of this timer.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/trigger"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Trigger() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// Trigger (leaf-list): By default, the maximum metric is only advertised
// when the max-metric/set leaf is specified as true.
// In the case that identities are specified within this
// list, they provide additional triggers (e.g., system
// boot) that may cause the max-metric to be set. In this
// case, the system should still honour the timeout specified
// by the max-metric/timeout leaf, and clear the max-metric
// advertisements after the expiration of this timer.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/config/trigger"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Trigger() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny struct {
	*ygot.NodePath
}

// InitialDelay (leaf): The value of this leaf specifies the time between a change
// in topology being detected and the first run of the SPF
// algorithm.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitialDelay (leaf): The value of this leaf specifies the time between a change
// in topology being detected and the first run of the SPF
// algorithm.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum delay between
// a topology change being detected and the SPF algorithm
// running. This value is used for implementations that support
// increasing the wait time between SPF runs.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum delay between
// a topology change being detected and the SPF algorithm
// running. This value is used for implementations that support
// increasing the wait time between SPF runs.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/config/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_PcepPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep YANG schema element.
type NetworkInstance_Protocol_PcepPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_PcepPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep YANG schema element.
type NetworkInstance_Protocol_PcepPathAny struct {
	*ygot.NodePath
}

// PathComputationServerAny (list): Configuration and state information for communication with a PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-computation-servers/path-computation-server"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server"
// PceServerAddress (wildcarded): string
func (n *NetworkInstance_Protocol_PcepPath) PathComputationServerAny() *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-computation-servers", "path-computation-server"},
			map[string]interface{}{"pce-server-address": "*"},
			n,
		),
	}
}

// PathComputationServerAny (list): Configuration and state information for communication with a PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-computation-servers/path-computation-server"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server"
// PceServerAddress (wildcarded): string
func (n *NetworkInstance_Protocol_PcepPathAny) PathComputationServerAny() *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-computation-servers", "path-computation-server"},
			map[string]interface{}{"pce-server-address": "*"},
			n,
		),
	}
}

// PathComputationServer (list): Configuration and state information for communication with a PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-computation-servers/path-computation-server"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server"
// PceServerAddress: string
func (n *NetworkInstance_Protocol_PcepPath) PathComputationServer(PceServerAddress string) *NetworkInstance_Protocol_Pcep_PathComputationServerPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServerPath{
		NodePath: ygot.NewNodePath(
			[]string{"path-computation-servers", "path-computation-server"},
			map[string]interface{}{"pce-server-address": PceServerAddress},
			n,
		),
	}
}

// PathComputationServer (list): Configuration and state information for communication with a PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-computation-servers/path-computation-server"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server"
// PceServerAddress: string
func (n *NetworkInstance_Protocol_PcepPathAny) PathComputationServer(PceServerAddress string) *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-computation-servers", "path-computation-server"},
			map[string]interface{}{"pce-server-address": PceServerAddress},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pcep_PathComputationServerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_IdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/id YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/id YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/pce-initiated-capability YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/pce-initiated-capability YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/pce-server-address YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/pce-server-address YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/pce-type YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/pce-type YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PortPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/port YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PortPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PortPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/port YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PortPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/preference YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/preference YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/report-local-lsp YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/report-local-lsp YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/source-address YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/source-address YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/sr-support YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/sr-support YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPathAny struct {
	*ygot.NodePath
}

// Authentication (container): Global PCEP authentication
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) Authentication() *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): Global PCEP authentication
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) Authentication() *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique name for the PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/id"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) Id() *NetworkInstance_Protocol_Pcep_PathComputationServer_IdPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique name for the PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/id"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) Id() *NetworkInstance_Protocol_Pcep_PathComputationServer_IdPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PceInitiatedCapability (leaf): Indicates to PCE that PCC (Router) supports PCE-initiated LSP paths instantiation.
// A PCE can initiate LSPs only for PCCs that advertised this capability.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/pce-initiated-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/pce-initiated-capability"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) PceInitiatedCapability() *NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "pce-initiated-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// PceInitiatedCapability (leaf): Indicates to PCE that PCC (Router) supports PCE-initiated LSP paths instantiation.
// A PCE can initiate LSPs only for PCCs that advertised this capability.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/pce-initiated-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/pce-initiated-capability"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) PceInitiatedCapability() *NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "pce-initiated-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// PceServerAddress (leaf): The destination IP address of the PCE server for PCEP service.
// Specify multiple entries in the path-computation-server-list to provide redundancy.
// When multiple candidate servers are specified for a single client,
// they are prioritized according to preference.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/pce-server-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/pce-server-address"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) PceServerAddress() *NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "pce-server-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// PceServerAddress (leaf): The destination IP address of the PCE server for PCEP service.
// Specify multiple entries in the path-computation-server-list to provide redundancy.
// When multiple candidate servers are specified for a single client,
// they are prioritized according to preference.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/pce-server-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/pce-server-address"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) PceServerAddress() *NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "pce-server-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// PceType (leaf): The type of PCEP capability supported which is advertised in the Open
// message when a PCEP session is established.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/pce-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/pce-type"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) PceType() *NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "pce-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// PceType (leaf): The type of PCEP capability supported which is advertised in the Open
// message when a PCEP session is established.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/pce-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/pce-type"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) PceType() *NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "pce-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Port (leaf): The destination TCP port used for PCEP service in the PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/port"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/port"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) Port() *NetworkInstance_Protocol_Pcep_PathComputationServer_PortPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PortPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "port"},
			map[string]interface{}{},
			n,
		),
	}
}

// Port (leaf): The destination TCP port used for PCEP service in the PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/port"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/port"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) Port() *NetworkInstance_Protocol_Pcep_PathComputationServer_PortPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "port"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): When multiple PCE servers are specified, the candidate PCE server
// with the highest preference is selected to calculate paths.
// The greater or lower the value, the higher the preference could
// dependon vendor implementation. If no preference value is set, indicate
// the lowest preference or no preference at all.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/preference"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) Preference() *NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): When multiple PCE servers are specified, the candidate PCE server
// with the highest preference is selected to calculate paths.
// The greater or lower the value, the higher the preference could
// dependon vendor implementation. If no preference value is set, indicate
// the lowest preference or no preference at all.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/preference"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) Preference() *NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReportLocalLsp (leaf): Specifies whether the PCC (Router) will advertise LSP existence and state
// for LSPs that are not controlled by any PCE (for example, LSPs that are
// statically configured at the PCC) but without delegating them.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/report-local-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/report-local-lsp"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) ReportLocalLsp() *NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "report-local-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReportLocalLsp (leaf): Specifies whether the PCC (Router) will advertise LSP existence and state
// for LSPs that are not controlled by any PCE (for example, LSPs that are
// statically configured at the PCC) but without delegating them.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/report-local-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/report-local-lsp"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) ReportLocalLsp() *NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "report-local-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): The source IP address used by PCC(Router) to establish PCEP session.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/source-address"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) SourceAddress() *NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): The source IP address used by PCC(Router) to establish PCEP session.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/source-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/source-address"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) SourceAddress() *NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrSupport (leaf): Indicates to PCE that PCC (Router) supports Segment-Routing
// to set up LSP paths in addition to RSVP-TE.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sr-support"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/sr-support"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) SrSupport() *NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sr-support"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrSupport (leaf): Indicates to PCE that PCC (Router) supports Segment-Routing
// to set up LSP paths in addition to RSVP-TE.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/sr-support"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/config/sr-support"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) SrSupport() *NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "sr-support"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines PCEP timers.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) Timers() *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines PCEP timers.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) Timers() *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/config/authentication-key YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/config/authentication-key YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/config/enable YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/config/enable YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/config/keychain YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthenticationKey (leaf): Password (key) used for securing a PCEP session using
// TCP-MD5 authentication
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-key"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/config/authentication-key"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath) AuthenticationKey() *NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationKey (leaf): Password (key) used for securing a PCEP session using
// TCP-MD5 authentication
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/authentication-key"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/config/authentication-key"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny) AuthenticationKey() *NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables PCEP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/config/enable"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath) Enable() *NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables PCEP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enable"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/config/enable"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny) Enable() *NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a predefined keychain that should be used to secure
// PCEP session
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/config/keychain"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath) Keychain() *NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a predefined keychain that should be used to secure
// PCEP session
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/config/keychain"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/keepalive YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/keepalive YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/redelegation-timeout-interval YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/redelegation-timeout-interval YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/state-timeout-interval YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/state-timeout-interval YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPathAny struct {
	*ygot.NodePath
}

// DeadTimer (leaf): Interval after which PCE session is declared dead.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/dead-timer"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath) DeadTimer() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTimer (leaf): Interval after which PCE session is declared dead.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/dead-timer"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny) DeadTimer() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keepalive (leaf): Interval for sending keepalive messages over PCE session.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keepalive"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/keepalive"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath) Keepalive() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keepalive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keepalive (leaf): Interval for sending keepalive messages over PCE session.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/keepalive"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/keepalive"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny) Keepalive() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "keepalive"},
			map[string]interface{}{},
			n,
		),
	}
}

// RedelegationTimeoutInterval (leaf): When a PCEP session is terminated, the period of time a PCC waits
// before revoking LSP delegation and attempting to redelegate LSPs
// associated with the terminated PCEP session to an alternate PCE.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/redelegation-timeout-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/redelegation-timeout-interval"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath) RedelegationTimeoutInterval() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "redelegation-timeout-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RedelegationTimeoutInterval (leaf): When a PCEP session is terminated, the period of time a PCC waits
// before revoking LSP delegation and attempting to redelegate LSPs
// associated with the terminated PCEP session to an alternate PCE.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/redelegation-timeout-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/redelegation-timeout-interval"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny) RedelegationTimeoutInterval() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "redelegation-timeout-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateTimeoutInterval (leaf): When a PCEP session is terminated, the period of time a PCC waits
// before before flushing LSP state associated with that PCEP session
// and reverting to operator-defined default parameters or behaviors.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/state-timeout-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/state-timeout-interval"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath) StateTimeoutInterval() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "state-timeout-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateTimeoutInterval (leaf): When a PCEP session is terminated, the period of time a PCC waits
// before before flushing LSP state associated with that PCEP session
// and reverting to operator-defined default parameters or behaviors.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/state-timeout-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/config/state-timeout-interval"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny) StateTimeoutInterval() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "state-timeout-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_PimPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim YANG schema element.
type NetworkInstance_Protocol_PimPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_PimPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim YANG schema element.
type NetworkInstance_Protocol_PimPathAny struct {
	*ygot.NodePath
}

// Global (container): This container defines global PIM configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global"
func (n *NetworkInstance_Protocol_PimPath) Global() *NetworkInstance_Protocol_Pim_GlobalPath {
	return &NetworkInstance_Protocol_Pim_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): This container defines global PIM configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global"
func (n *NetworkInstance_Protocol_PimPathAny) Global() *NetworkInstance_Protocol_Pim_GlobalPathAny {
	return &NetworkInstance_Protocol_Pim_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_PimPath) InterfaceAny() *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_PimPathAny) InterfaceAny() *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_PimPath) Interface(InterfaceId string) *NetworkInstance_Protocol_Pim_InterfacePath {
	return &NetworkInstance_Protocol_Pim_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_PimPathAny) Interface(InterfaceId string) *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global YANG schema element.
type NetworkInstance_Protocol_Pim_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global YANG schema element.
type NetworkInstance_Protocol_Pim_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/config/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/config/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny struct {
	*ygot.NodePath
}

// MaximumGroups (leaf): Limit the number of accepted (S, G) and (*, G)
// PIM join states on the network-instance.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/config/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) MaximumGroups() *NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath {
	return &NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of accepted (S, G) and (*, G)
// PIM join states on the network-instance.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/config/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) MaximumGroups() *NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// RendezvousPointAny (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) RendezvousPointAny() *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// RendezvousPointAny (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) RendezvousPointAny() *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// RendezvousPoint (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) RendezvousPoint(Address string) *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPath{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// RendezvousPoint (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) RendezvousPoint(Address string) *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) Ssm() *NetworkInstance_Protocol_Pim_Global_SsmPath {
	return &NetworkInstance_Protocol_Pim_Global_SsmPath{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) Ssm() *NetworkInstance_Protocol_Pim_Global_SsmPathAny {
	return &NetworkInstance_Protocol_Pim_Global_SsmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPointPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/multicast-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/multicast-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny struct {
	*ygot.NodePath
}

// Address (leaf): IPv4 address of rendezvous point.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/address"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath) Address() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): IPv4 address of rendezvous point.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/address"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny) Address() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroups (leaf): List of multicast groups (multicast IP address ranges) for which
// this entry will be used as a rendezvous point. When not
// present the default is equivalent to all valid IP multicast
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multicast-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/multicast-groups"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath) MulticastGroups() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multicast-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroups (leaf): List of multicast groups (multicast IP address ranges) for which
// this entry will be used as a rendezvous point. When not
// present the default is equivalent to all valid IP multicast
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/multicast-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/config/multicast-groups"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny) MulticastGroups() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "multicast-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_SsmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SsmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_SsmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SsmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm/config/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm/config/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny struct {
	*ygot.NodePath
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm/config/ssm-ranges"
func (n *NetworkInstance_Protocol_Pim_Global_SsmPath) SsmRanges() *NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath {
	return &NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm/config/ssm-ranges"
func (n *NetworkInstance_Protocol_Pim_Global_SsmPathAny) SsmRanges() *NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Pim_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Pim_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BorderRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/border-router YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BorderRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/border-router YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BsrBorderPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/bsr-border YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BsrBorderPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/bsr-border YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DeadTimerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DeadTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DrPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dr-priority YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DrPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dr-priority YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/hello-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/hello-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/join-prune-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/join-prune-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_ModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_ModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_ModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_ModePathAny struct {
	*ygot.NodePath
}

// BorderRouter (leaf): When set to true the interface is set as MBR (multicast border
// router) and allows multicast traffic from sources that are
// outside of the PIM domain.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/border-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/border-router"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) BorderRouter() *NetworkInstance_Protocol_Pim_Interface_BorderRouterPath {
	return &NetworkInstance_Protocol_Pim_Interface_BorderRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "border-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BorderRouter (leaf): When set to true the interface is set as MBR (multicast border
// router) and allows multicast traffic from sources that are
// outside of the PIM domain.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/border-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/border-router"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) BorderRouter() *NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "border-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BsrBorder (leaf): When set to true the device will not send bootstrap router
// messages over this interface. By default these are transmitted
// over all PIM sparse mode (PIM-SM) enabled interfaces.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/bsr-border"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/bsr-border"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) BsrBorder() *NetworkInstance_Protocol_Pim_Interface_BsrBorderPath {
	return &NetworkInstance_Protocol_Pim_Interface_BsrBorderPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "bsr-border"},
			map[string]interface{}{},
			n,
		),
	}
}

// BsrBorder (leaf): When set to true the device will not send bootstrap router
// messages over this interface. By default these are transmitted
// over all PIM sparse mode (PIM-SM) enabled interfaces.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/bsr-border"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/bsr-border"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) BsrBorder() *NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "bsr-border"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTimer (leaf): Number of missed hello messages after which a neighbor is
// expired.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dead-timer"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) DeadTimer() *NetworkInstance_Protocol_Pim_Interface_DeadTimerPath {
	return &NetworkInstance_Protocol_Pim_Interface_DeadTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTimer (leaf): Number of missed hello messages after which a neighbor is
// expired.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dead-timer"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) DeadTimer() *NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DrPriority (leaf): The designated router priority of this interface. Larger always
// preferred.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dr-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dr-priority"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) DrPriority() *NetworkInstance_Protocol_Pim_Interface_DrPriorityPath {
	return &NetworkInstance_Protocol_Pim_Interface_DrPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dr-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// DrPriority (leaf): The designated router priority of this interface. Larger always
// preferred.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dr-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/dr-priority"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) DrPriority() *NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dr-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) EnableBfd() *NetworkInstance_Protocol_Pim_Interface_EnableBfdPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) EnableBfd() *NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/enabled"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnabledPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/enabled"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnabledPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Interval at which the router sends the PIM hello messages.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/hello-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) HelloInterval() *NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath {
	return &NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Interval at which the router sends the PIM hello messages.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/hello-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) HelloInterval() *NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which PIM is enabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) InterfaceId() *NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which PIM is enabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/interface-id"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) InterfaceId() *NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneInterval (leaf): Interval at which the router sends the PIM join/prune messages
// toward the upstream RPF neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/join-prune-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/join-prune-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) JoinPruneInterval() *NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath {
	return &NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "join-prune-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneInterval (leaf): Interval at which the router sends the PIM join/prune messages
// toward the upstream RPF neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/join-prune-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/join-prune-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) JoinPruneInterval() *NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "join-prune-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of (S, G) and (*, G) PIM
// entries accepted on the interface.
// This feature depends on hardware implementation.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) MaximumGroups() *NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath {
	return &NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of (S, G) and (*, G) PIM
// entries accepted on the interface.
// This feature depends on hardware implementation.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) MaximumGroups() *NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode to use when delivering multicast traffic via this
// interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/mode"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Mode() *NetworkInstance_Protocol_Pim_Interface_ModePath {
	return &NetworkInstance_Protocol_Pim_Interface_ModePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode to use when delivering multicast traffic via this
// interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/config/mode"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Mode() *NetworkInstance_Protocol_Pim_Interface_ModePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_ModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Pim_Interface_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_StaticPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static YANG schema element.
type NetworkInstance_Protocol_StaticPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_StaticPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static YANG schema element.
type NetworkInstance_Protocol_StaticPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_DescriptionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/description YANG schema element.
type NetworkInstance_Protocol_Static_DescriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_DescriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/description YANG schema element.
type NetworkInstance_Protocol_Static_DescriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/prefix YANG schema element.
type NetworkInstance_Protocol_Static_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/prefix YANG schema element.
type NetworkInstance_Protocol_Static_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_SetTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/set-tag YANG schema element.
type NetworkInstance_Protocol_Static_SetTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_SetTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/config/set-tag YANG schema element.
type NetworkInstance_Protocol_Static_SetTagPathAny struct {
	*ygot.NodePath
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/config/description"
func (n *NetworkInstance_Protocol_StaticPath) Description() *NetworkInstance_Protocol_Static_DescriptionPath {
	return &NetworkInstance_Protocol_Static_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/config/description"
func (n *NetworkInstance_Protocol_StaticPathAny) Description() *NetworkInstance_Protocol_Static_DescriptionPathAny {
	return &NetworkInstance_Protocol_Static_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopAny (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index (wildcarded): string
func (n *NetworkInstance_Protocol_StaticPath) NextHopAny() *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHopAny (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index (wildcarded): string
func (n *NetworkInstance_Protocol_StaticPathAny) NextHopAny() *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHop (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index: string
func (n *NetworkInstance_Protocol_StaticPath) NextHop(Index string) *NetworkInstance_Protocol_Static_NextHopPath {
	return &NetworkInstance_Protocol_Static_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// NextHop (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index: string
func (n *NetworkInstance_Protocol_StaticPathAny) NextHop(Index string) *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Prefix (leaf): Destination prefix for the static route, either IPv4 or
// IPv6.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/config/prefix"
func (n *NetworkInstance_Protocol_StaticPath) Prefix() *NetworkInstance_Protocol_Static_PrefixPath {
	return &NetworkInstance_Protocol_Static_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Destination prefix for the static route, either IPv4 or
// IPv6.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/config/prefix"
func (n *NetworkInstance_Protocol_StaticPathAny) Prefix() *NetworkInstance_Protocol_Static_PrefixPathAny {
	return &NetworkInstance_Protocol_Static_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/config/set-tag"
func (n *NetworkInstance_Protocol_StaticPath) SetTag() *NetworkInstance_Protocol_Static_SetTagPath {
	return &NetworkInstance_Protocol_Static_SetTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/config/set-tag"
func (n *NetworkInstance_Protocol_StaticPathAny) SetTag() *NetworkInstance_Protocol_Static_SetTagPathAny {
	return &NetworkInstance_Protocol_Static_SetTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/index YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/index YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/metric YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/metric YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/preference YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/preference YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_RecursePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/recurse YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_RecursePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_RecursePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/recurse YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_RecursePathAny struct {
	*ygot.NodePath
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd"
func (n *NetworkInstance_Protocol_Static_NextHopPath) EnableBfd() *NetworkInstance_Protocol_Static_NextHop_EnableBfdPath {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) EnableBfd() *NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): An user-specified identifier utilised to uniquely reference
// the next-hop entry in the next-hop list. The value of this
// index has no semantic meaning other than for referencing
// the entry.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/index"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Index() *NetworkInstance_Protocol_Static_NextHop_IndexPath {
	return &NetworkInstance_Protocol_Static_NextHop_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): An user-specified identifier utilised to uniquely reference
// the next-hop entry in the next-hop list. The value of this
// index has no semantic meaning other than for referencing
// the entry.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/index"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Index() *NetworkInstance_Protocol_Static_NextHop_IndexPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_Protocol_Static_NextHopPath) InterfaceRef() *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) InterfaceRef() *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric (or cost) which is utilized to specify the order of
// selection of the next-hop entry.  The lower the metric, the more
// preferable the prefix entry is.  When this value is not
// specified, the metric is inherited from the default metric of
// the implementation for static route entries.  When multiple
// next-hops are specified for a static route, the metric is
// utilized to determine which of the next-hops to be installed in
// the RIB.  When multiple next-hops have the same metric (be it
// specified, or simply the default) then these next-hops should
// all be installed in the RIB.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/metric"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Metric() *NetworkInstance_Protocol_Static_NextHop_MetricPath {
	return &NetworkInstance_Protocol_Static_NextHop_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric (or cost) which is utilized to specify the order of
// selection of the next-hop entry.  The lower the metric, the more
// preferable the prefix entry is.  When this value is not
// specified, the metric is inherited from the default metric of
// the implementation for static route entries.  When multiple
// next-hops are specified for a static route, the metric is
// utilized to determine which of the next-hops to be installed in
// the RIB.  When multiple next-hops have the same metric (be it
// specified, or simply the default) then these next-hops should
// all be installed in the RIB.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/metric"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Metric() *NetworkInstance_Protocol_Static_NextHop_MetricPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): The next-hop that is to be used for the static route
// - this may be specified as an IP address, an interface
// or a pre-defined next-hop type - for instance, DROP or
// LOCAL_LINK. When this leaf is not set, and the interface-ref
// value is specified for the next-hop, then the system should
// treat the prefix as though it is directly connected to the
// interface.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/next-hop"
func (n *NetworkInstance_Protocol_Static_NextHopPath) NextHop() *NetworkInstance_Protocol_Static_NextHop_NextHopPath {
	return &NetworkInstance_Protocol_Static_NextHop_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): The next-hop that is to be used for the static route
// - this may be specified as an IP address, an interface
// or a pre-defined next-hop type - for instance, DROP or
// LOCAL_LINK. When this leaf is not set, and the interface-ref
// value is specified for the next-hop, then the system should
// treat the prefix as though it is directly connected to the
// interface.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/next-hop"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) NextHop() *NetworkInstance_Protocol_Static_NextHop_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Administrative Distance (preference) of the entry.  The
// preference defines the order of selection when multiple
// sources (protocols, static, etc.) contribute to the same
// prefix entry.  The lower the preference, the more preferable the
// prefix is.  When this value is not specified, the preference is
// inherited from the default preference of the implementation for
// static routes.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/preference"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Preference() *NetworkInstance_Protocol_Static_NextHop_PreferencePath {
	return &NetworkInstance_Protocol_Static_NextHop_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Administrative Distance (preference) of the entry.  The
// preference defines the order of selection when multiple
// sources (protocols, static, etc.) contribute to the same
// prefix entry.  The lower the preference, the more preferable the
// prefix is.  When this value is not specified, the preference is
// inherited from the default preference of the implementation for
// static routes.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/preference"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Preference() *NetworkInstance_Protocol_Static_NextHop_PreferencePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Recurse (leaf): Determines whether the next-hop should be allowed to
// be looked up recursively - i.e., via a RIB entry which has
// been installed by a routing protocol, or another static route
// - rather than needing to be connected directly to an
// interface of the local system within the current network
// instance. When the interface reference specified within the
// next-hop entry is set (i.e., is not null) then forwarding is
// restricted to being via the interface specified - and
// recursion is hence disabled.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/recurse"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/recurse"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Recurse() *NetworkInstance_Protocol_Static_NextHop_RecursePath {
	return &NetworkInstance_Protocol_Static_NextHop_RecursePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "recurse"},
			map[string]interface{}{},
			n,
		),
	}
}

// Recurse (leaf): Determines whether the next-hop should be allowed to
// be looked up recursively - i.e., via a RIB entry which has
// been installed by a routing protocol, or another static route
// - rather than needing to be connected directly to an
// interface of the local system within the current network
// instance. When the interface reference specified within the
// next-hop entry is set (i.e., is not null) then forwarding is
// restricted to being via the interface specified - and
// recursion is hence disabled.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/recurse"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/config/recurse"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Recurse() *NetworkInstance_Protocol_Static_NextHop_RecursePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_RecursePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "recurse"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/config/enabled YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Static_NextHop_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/config/enabled"
func (n *NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/interface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/subinterface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/interface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/config/subinterface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_RouteLimitPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit YANG schema element.
type NetworkInstance_RouteLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit YANG schema element.
type NetworkInstance_RouteLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AfiPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/afi YANG schema element.
type NetworkInstance_RouteLimit_AfiPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AfiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/afi YANG schema element.
type NetworkInstance_RouteLimit_AfiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AlarmThresholdPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/alarm-threshold YANG schema element.
type NetworkInstance_RouteLimit_AlarmThresholdPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AlarmThresholdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/alarm-threshold YANG schema element.
type NetworkInstance_RouteLimit_AlarmThresholdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_MaximumPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/maximum YANG schema element.
type NetworkInstance_RouteLimit_MaximumPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_MaximumPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/maximum YANG schema element.
type NetworkInstance_RouteLimit_MaximumPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_WarningOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/warning-only YANG schema element.
type NetworkInstance_RouteLimit_WarningOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_WarningOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/config/warning-only YANG schema element.
type NetworkInstance_RouteLimit_WarningOnlyPathAny struct {
	*ygot.NodePath
}

// Afi (leaf): The address family for which the route limit applies.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/afi"
func (n *NetworkInstance_RouteLimitPath) Afi() *NetworkInstance_RouteLimit_AfiPath {
	return &NetworkInstance_RouteLimit_AfiPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi"},
			map[string]interface{}{},
			n,
		),
	}
}

// Afi (leaf): The address family for which the route limit applies.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/afi"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/afi"
func (n *NetworkInstance_RouteLimitPathAny) Afi() *NetworkInstance_RouteLimit_AfiPathAny {
	return &NetworkInstance_RouteLimit_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "afi"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): When specified, an alarm should be generated when the threshold
// number of installed routes is reached.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/alarm-threshold"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/alarm-threshold"
func (n *NetworkInstance_RouteLimitPath) AlarmThreshold() *NetworkInstance_RouteLimit_AlarmThresholdPath {
	return &NetworkInstance_RouteLimit_AlarmThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): When specified, an alarm should be generated when the threshold
// number of installed routes is reached.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/alarm-threshold"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/alarm-threshold"
func (n *NetworkInstance_RouteLimitPathAny) AlarmThreshold() *NetworkInstance_RouteLimit_AlarmThresholdPathAny {
	return &NetworkInstance_RouteLimit_AlarmThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// Maximum (leaf): The maximum number of routes for the address family. The
// system should not install more than maximum number of
// prefixes into the RIB unless the warning-only leaf is specified.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/maximum"
func (n *NetworkInstance_RouteLimitPath) Maximum() *NetworkInstance_RouteLimit_MaximumPath {
	return &NetworkInstance_RouteLimit_MaximumPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum"},
			map[string]interface{}{},
			n,
		),
	}
}

// Maximum (leaf): The maximum number of routes for the address family. The
// system should not install more than maximum number of
// prefixes into the RIB unless the warning-only leaf is specified.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/maximum"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/maximum"
func (n *NetworkInstance_RouteLimitPathAny) Maximum() *NetworkInstance_RouteLimit_MaximumPathAny {
	return &NetworkInstance_RouteLimit_MaximumPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "maximum"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningOnly (leaf): When specified, the route limit specified is considered only as
// a warning - and routes should continue to be installed into the
// RIB over the limit specified in the maximum leaf.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-only"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/warning-only"
func (n *NetworkInstance_RouteLimitPath) WarningOnly() *NetworkInstance_RouteLimit_WarningOnlyPath {
	return &NetworkInstance_RouteLimit_WarningOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningOnly (leaf): When specified, the route limit specified is considered only as
// a warning - and routes should continue to be installed into the
// RIB over the limit specified in the maximum leaf.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/warning-only"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/config/warning-only"
func (n *NetworkInstance_RouteLimitPathAny) WarningOnly() *NetworkInstance_RouteLimit_WarningOnlyPathAny {
	return &NetworkInstance_RouteLimit_WarningOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "warning-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing YANG schema element.
type NetworkInstance_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing YANG schema element.
type NetworkInstance_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// SrgbAny (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) SrgbAny() *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// SrgbAny (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) SrgbAny() *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// Srgb (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPath) Srgb(LocalId string) *NetworkInstance_SegmentRouting_SrgbPath {
	return &NetworkInstance_SegmentRouting_SrgbPath{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// Srgb (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPathAny) Srgb(LocalId string) *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// SrlbAny (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) SrlbAny() *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// SrlbAny (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) SrlbAny() *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// Srlb (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPath) Srlb(LocalId string) *NetworkInstance_SegmentRouting_SrlbPath {
	return &NetworkInstance_SegmentRouting_SrlbPath{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// Srlb (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPathAny) Srlb(LocalId string) *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_SrgbPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb YANG schema element.
type NetworkInstance_SegmentRouting_SrgbPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_SrgbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb YANG schema element.
type NetworkInstance_SegmentRouting_SrgbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/ipv6-prefixes YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/ipv6-prefixes YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_LocalIdPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_LocalIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/mpls-label-blocks YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/config/mpls-label-blocks YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny struct {
	*ygot.NodePath
}

// DataplaneType (leaf): The dataplane being used to instantiate the SRGB. When MPLS is specified
// the set of MPLS label blocks that are defined in the mpls-label-blocks
// list are used to make up the SRGB. When IPv6 is specified, the set of IPv6
// prefixes specified in the ipv6-prefixes list are used.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrgbPath) DataplaneType() *NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath {
	return &NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataplaneType (leaf): The dataplane being used to instantiate the SRGB. When MPLS is specified
// the set of MPLS label blocks that are defined in the mpls-label-blocks
// list are used to make up the SRGB. When IPv6 is specified, the set of IPv6
// prefixes specified in the ipv6-prefixes list are used.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) DataplaneType() *NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny {
	return &NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefixes (leaf-list): A list of IPv6 prefixes which are to be used for segment routing using
// the IPv6 dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv6-prefixes"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/ipv6-prefixes"
func (n *NetworkInstance_SegmentRouting_SrgbPath) Ipv6Prefixes() *NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath {
	return &NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv6-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefixes (leaf-list): A list of IPv6 prefixes which are to be used for segment routing using
// the IPv6 dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv6-prefixes"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/ipv6-prefixes"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) Ipv6Prefixes() *NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv6-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): Unique identifier for the segment routing global block on
// the local system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/local-id"
func (n *NetworkInstance_SegmentRouting_SrgbPath) LocalId() *NetworkInstance_SegmentRouting_Srgb_LocalIdPath {
	return &NetworkInstance_SegmentRouting_Srgb_LocalIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): Unique identifier for the segment routing global block on
// the local system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/local-id"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) LocalId() *NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlocks (leaf-list): A list of refences to the label blocks that are used to make
// up the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mpls-label-blocks"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/mpls-label-blocks"
func (n *NetworkInstance_SegmentRouting_SrgbPath) MplsLabelBlocks() *NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath {
	return &NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mpls-label-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlocks (leaf-list): A list of refences to the label blocks that are used to make
// up the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mpls-label-blocks"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/config/mpls-label-blocks"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) MplsLabelBlocks() *NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mpls-label-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_SrlbPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb YANG schema element.
type NetworkInstance_SegmentRouting_SrlbPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_SrlbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb YANG schema element.
type NetworkInstance_SegmentRouting_SrlbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/ipv6-prefix YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/ipv6-prefix YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_LocalIdPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_LocalIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/mpls-label-block YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/config/mpls-label-block YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny struct {
	*ygot.NodePath
}

// DataplaneType (leaf): The dataplane that is to be used for the Segment Routing Local Block.
// When MPLS is specified, the local block corresponds to a block of MPLS
// labels; when IPv6 is specified it corresponds to an IPv6 prefix.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrlbPath) DataplaneType() *NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath {
	return &NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataplaneType (leaf): The dataplane that is to be used for the Segment Routing Local Block.
// When MPLS is specified, the local block corresponds to a block of MPLS
// labels; when IPv6 is specified it corresponds to an IPv6 prefix.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) DataplaneType() *NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny {
	return &NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefix (leaf): The IPv6 prefix that is used for the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv6-prefix"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/ipv6-prefix"
func (n *NetworkInstance_SegmentRouting_SrlbPath) Ipv6Prefix() *NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath {
	return &NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv6-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefix (leaf): The IPv6 prefix that is used for the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/ipv6-prefix"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/ipv6-prefix"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) Ipv6Prefix() *NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "ipv6-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): A unique local identifier used for the Segment Routing Local Block.
// The identifier is used when referencing the SRLB within other
// contexts.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/local-id"
func (n *NetworkInstance_SegmentRouting_SrlbPath) LocalId() *NetworkInstance_SegmentRouting_Srlb_LocalIdPath {
	return &NetworkInstance_SegmentRouting_Srlb_LocalIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): A unique local identifier used for the Segment Routing Local Block.
// The identifier is used when referencing the SRLB within other
// contexts.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/local-id"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) LocalId() *NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlock (leaf): A reference to the MPLS label block that is used to contain the
// SIDs of the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mpls-label-block"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/mpls-label-block"
func (n *NetworkInstance_SegmentRouting_SrlbPath) MplsLabelBlock() *NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath {
	return &NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mpls-label-block"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlock (leaf): A reference to the MPLS label block that is used to contain the
// SIDs of the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/mpls-label-block"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/config/mpls-label-block"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) MplsLabelBlock() *NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "mpls-label-block"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_TablePath represents the /openconfig-network-instance/network-instances/network-instance/tables/table YANG schema element.
type NetworkInstance_TablePath struct {
	*ygot.NodePath
}

// NetworkInstance_TablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table YANG schema element.
type NetworkInstance_TablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Table_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/tables/table/config/address-family YANG schema element.
type NetworkInstance_Table_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Table_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table/config/address-family YANG schema element.
type NetworkInstance_Table_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Table_ProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/tables/table/config/protocol YANG schema element.
type NetworkInstance_Table_ProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_Table_ProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table/config/protocol YANG schema element.
type NetworkInstance_Table_ProtocolPathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family (IPv4, IPv6) of the table's entries
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address-family"
// Path from root: "/network-instances/network-instance/tables/table/config/address-family"
func (n *NetworkInstance_TablePath) AddressFamily() *NetworkInstance_Table_AddressFamilyPath {
	return &NetworkInstance_Table_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family (IPv4, IPv6) of the table's entries
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address-family"
// Path from root: "/network-instances/network-instance/tables/table/config/address-family"
func (n *NetworkInstance_TablePathAny) AddressFamily() *NetworkInstance_Table_AddressFamilyPathAny {
	return &NetworkInstance_Table_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): Reference to the protocol that the table is associated with.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protocol"
// Path from root: "/network-instances/network-instance/tables/table/config/protocol"
func (n *NetworkInstance_TablePath) Protocol() *NetworkInstance_Table_ProtocolPath {
	return &NetworkInstance_Table_ProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): Reference to the protocol that the table is associated with.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/protocol"
// Path from root: "/network-instances/network-instance/tables/table/config/protocol"
func (n *NetworkInstance_TablePathAny) Protocol() *NetworkInstance_Table_ProtocolPathAny {
	return &NetworkInstance_Table_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_TableConnectionPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection YANG schema element.
type NetworkInstance_TableConnectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection YANG schema element.
type NetworkInstance_TableConnectionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/address-family YANG schema element.
type NetworkInstance_TableConnection_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/address-family YANG schema element.
type NetworkInstance_TableConnection_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/default-import-policy YANG schema element.
type NetworkInstance_TableConnection_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/default-import-policy YANG schema element.
type NetworkInstance_TableConnection_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DisableMetricPropagationPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/disable-metric-propagation YANG schema element.
type NetworkInstance_TableConnection_DisableMetricPropagationPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DisableMetricPropagationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/disable-metric-propagation YANG schema element.
type NetworkInstance_TableConnection_DisableMetricPropagationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DstProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/dst-protocol YANG schema element.
type NetworkInstance_TableConnection_DstProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DstProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/dst-protocol YANG schema element.
type NetworkInstance_TableConnection_DstProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/import-policy YANG schema element.
type NetworkInstance_TableConnection_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/import-policy YANG schema element.
type NetworkInstance_TableConnection_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_SrcProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/src-protocol YANG schema element.
type NetworkInstance_TableConnection_SrcProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_SrcProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/config/src-protocol YANG schema element.
type NetworkInstance_TableConnection_SrcProtocolPathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family associated with the connection. This
// must be defined for the source protocol. The target
// address family is implicitly defined by the address family
// specified for the source protocol.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address-family"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/address-family"
func (n *NetworkInstance_TableConnectionPath) AddressFamily() *NetworkInstance_TableConnection_AddressFamilyPath {
	return &NetworkInstance_TableConnection_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family associated with the connection. This
// must be defined for the source protocol. The target
// address family is implicitly defined by the address family
// specified for the source protocol.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/address-family"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/address-family"
func (n *NetworkInstance_TableConnectionPathAny) AddressFamily() *NetworkInstance_TableConnection_AddressFamilyPathAny {
	return &NetworkInstance_TableConnection_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/default-import-policy"
func (n *NetworkInstance_TableConnectionPath) DefaultImportPolicy() *NetworkInstance_TableConnection_DefaultImportPolicyPath {
	return &NetworkInstance_TableConnection_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/default-import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/default-import-policy"
func (n *NetworkInstance_TableConnectionPathAny) DefaultImportPolicy() *NetworkInstance_TableConnection_DefaultImportPolicyPathAny {
	return &NetworkInstance_TableConnection_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableMetricPropagation (leaf): By default a system may reflect the metric specified in
// the destination protocol according to that which is set in
// the source protocol. For example:
// - IS-IS metric may be reflected in BGP MED (and vice versa)
// - OSPF metric may be reflected in the BGP MED (and vice versa)
// When this leaf is set to true, this reflection behaviour MUST be
// disabled, and rather the metric must be set to the default value,
// or explicitly set by policy.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-metric-propagation"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/disable-metric-propagation"
func (n *NetworkInstance_TableConnectionPath) DisableMetricPropagation() *NetworkInstance_TableConnection_DisableMetricPropagationPath {
	return &NetworkInstance_TableConnection_DisableMetricPropagationPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-metric-propagation"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableMetricPropagation (leaf): By default a system may reflect the metric specified in
// the destination protocol according to that which is set in
// the source protocol. For example:
// - IS-IS metric may be reflected in BGP MED (and vice versa)
// - OSPF metric may be reflected in the BGP MED (and vice versa)
// When this leaf is set to true, this reflection behaviour MUST be
// disabled, and rather the metric must be set to the default value,
// or explicitly set by policy.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/disable-metric-propagation"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/disable-metric-propagation"
func (n *NetworkInstance_TableConnectionPathAny) DisableMetricPropagation() *NetworkInstance_TableConnection_DisableMetricPropagationPathAny {
	return &NetworkInstance_TableConnection_DisableMetricPropagationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "disable-metric-propagation"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstProtocol (leaf): The destination protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dst-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/dst-protocol"
func (n *NetworkInstance_TableConnectionPath) DstProtocol() *NetworkInstance_TableConnection_DstProtocolPath {
	return &NetworkInstance_TableConnection_DstProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dst-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstProtocol (leaf): The destination protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/dst-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/dst-protocol"
func (n *NetworkInstance_TableConnectionPathAny) DstProtocol() *NetworkInstance_TableConnection_DstProtocolPathAny {
	return &NetworkInstance_TableConnection_DstProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "dst-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/import-policy"
func (n *NetworkInstance_TableConnectionPath) ImportPolicy() *NetworkInstance_TableConnection_ImportPolicyPath {
	return &NetworkInstance_TableConnection_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/import-policy"
func (n *NetworkInstance_TableConnectionPathAny) ImportPolicy() *NetworkInstance_TableConnection_ImportPolicyPathAny {
	return &NetworkInstance_TableConnection_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcProtocol (leaf): The source protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/src-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/src-protocol"
func (n *NetworkInstance_TableConnectionPath) SrcProtocol() *NetworkInstance_TableConnection_SrcProtocolPath {
	return &NetworkInstance_TableConnection_SrcProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "src-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcProtocol (leaf): The source protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/src-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/config/src-protocol"
func (n *NetworkInstance_TableConnectionPathAny) SrcProtocol() *NetworkInstance_TableConnection_SrcProtocolPathAny {
	return &NetworkInstance_TableConnection_SrcProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "src-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_VlanPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan YANG schema element.
type NetworkInstance_VlanPath struct {
	*ygot.NodePath
}

// NetworkInstance_VlanPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan YANG schema element.
type NetworkInstance_VlanPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_NamePath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/config/name YANG schema element.
type NetworkInstance_Vlan_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/config/name YANG schema element.
type NetworkInstance_Vlan_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_StatusPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/config/status YANG schema element.
type NetworkInstance_Vlan_StatusPath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_StatusPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/config/status YANG schema element.
type NetworkInstance_Vlan_StatusPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_VlanIdPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/config/vlan-id YANG schema element.
type NetworkInstance_Vlan_VlanIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_VlanIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/config/vlan-id YANG schema element.
type NetworkInstance_Vlan_VlanIdPathAny struct {
	*ygot.NodePath
}

// Name (leaf): Interface VLAN name.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/vlans/vlan/config/name"
func (n *NetworkInstance_VlanPath) Name() *NetworkInstance_Vlan_NamePath {
	return &NetworkInstance_Vlan_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Interface VLAN name.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/name"
// Path from root: "/network-instances/network-instance/vlans/vlan/config/name"
func (n *NetworkInstance_VlanPathAny) Name() *NetworkInstance_Vlan_NamePathAny {
	return &NetworkInstance_Vlan_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Status (leaf): Admin state of the VLAN
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/status"
// Path from root: "/network-instances/network-instance/vlans/vlan/config/status"
func (n *NetworkInstance_VlanPath) Status() *NetworkInstance_Vlan_StatusPath {
	return &NetworkInstance_Vlan_StatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "status"},
			map[string]interface{}{},
			n,
		),
	}
}

// Status (leaf): Admin state of the VLAN
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/status"
// Path from root: "/network-instances/network-instance/vlans/vlan/config/status"
func (n *NetworkInstance_VlanPathAny) Status() *NetworkInstance_Vlan_StatusPathAny {
	return &NetworkInstance_Vlan_StatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "status"},
			map[string]interface{}{},
			n,
		),
	}
}

// VlanId (leaf): Interface VLAN id.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/vlan-id"
// Path from root: "/network-instances/network-instance/vlans/vlan/config/vlan-id"
func (n *NetworkInstance_VlanPath) VlanId() *NetworkInstance_Vlan_VlanIdPath {
	return &NetworkInstance_Vlan_VlanIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"config", "vlan-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// VlanId (leaf): Interface VLAN id.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "config/vlan-id"
// Path from root: "/network-instances/network-instance/vlans/vlan/config/vlan-id"
func (n *NetworkInstance_VlanPathAny) VlanId() *NetworkInstance_Vlan_VlanIdPathAny {
	return &NetworkInstance_Vlan_VlanIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"config", "vlan-id"},
			map[string]interface{}{},
			n,
		),
	}
}
