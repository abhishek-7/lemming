/*
Package lacp is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /usr/local/google/home/wenbli/gocode/pkg/mod/github.com/openconfig/ygot@v0.24.2/genutil/names.go
using the following YANG input files:
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package lacp

import (
	"github.com/openconfig/ygot/ygot"
)

// Lacp_Interface_Member_CountersPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters YANG schema element.
type Lacp_Interface_Member_CountersPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_CountersPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters YANG schema element.
type Lacp_Interface_Member_CountersPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpErrorsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpErrorsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpErrorsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpErrorsPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpInPktsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-in-pkts YANG schema element.
type Lacp_Interface_Member_Counters_LacpInPktsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpInPktsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-in-pkts YANG schema element.
type Lacp_Interface_Member_Counters_LacpInPktsPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpOutPktsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-out-pkts YANG schema element.
type Lacp_Interface_Member_Counters_LacpOutPktsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpOutPktsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-out-pkts YANG schema element.
type Lacp_Interface_Member_Counters_LacpOutPktsPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpRxErrorsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-rx-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpRxErrorsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpRxErrorsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-rx-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpRxErrorsPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-timeout-transitions YANG schema element.
type Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-timeout-transitions YANG schema element.
type Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpTxErrorsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-tx-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpTxErrorsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpTxErrorsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-tx-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpTxErrorsPathAny struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpUnknownErrorsPath represents the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-unknown-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpUnknownErrorsPath struct {
	*ygot.NodePath
}

// Lacp_Interface_Member_Counters_LacpUnknownErrorsPathAny represents the wildcard version of the /openconfig-lacp/lacp/interfaces/interface/members/member/state/counters/lacp-unknown-errors YANG schema element.
type Lacp_Interface_Member_Counters_LacpUnknownErrorsPathAny struct {
	*ygot.NodePath
}

// LacpErrors (leaf): Number of LACPDU illegal packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-errors"
func (n *Lacp_Interface_Member_CountersPath) LacpErrors() *Lacp_Interface_Member_Counters_LacpErrorsPath {
	return &Lacp_Interface_Member_Counters_LacpErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpErrors (leaf): Number of LACPDU illegal packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-errors"
func (n *Lacp_Interface_Member_CountersPathAny) LacpErrors() *Lacp_Interface_Member_Counters_LacpErrorsPathAny {
	return &Lacp_Interface_Member_Counters_LacpErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpInPkts (leaf): Number of LACPDUs received
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-in-pkts"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-in-pkts"
func (n *Lacp_Interface_Member_CountersPath) LacpInPkts() *Lacp_Interface_Member_Counters_LacpInPktsPath {
	return &Lacp_Interface_Member_Counters_LacpInPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpInPkts (leaf): Number of LACPDUs received
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-in-pkts"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-in-pkts"
func (n *Lacp_Interface_Member_CountersPathAny) LacpInPkts() *Lacp_Interface_Member_Counters_LacpInPktsPathAny {
	return &Lacp_Interface_Member_Counters_LacpInPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpOutPkts (leaf): Number of LACPDUs transmitted
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-out-pkts"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-out-pkts"
func (n *Lacp_Interface_Member_CountersPath) LacpOutPkts() *Lacp_Interface_Member_Counters_LacpOutPktsPath {
	return &Lacp_Interface_Member_Counters_LacpOutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpOutPkts (leaf): Number of LACPDUs transmitted
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-out-pkts"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-out-pkts"
func (n *Lacp_Interface_Member_CountersPathAny) LacpOutPkts() *Lacp_Interface_Member_Counters_LacpOutPktsPathAny {
	return &Lacp_Interface_Member_Counters_LacpOutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpRxErrors (leaf): Number of LACPDU receive packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-rx-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-rx-errors"
func (n *Lacp_Interface_Member_CountersPath) LacpRxErrors() *Lacp_Interface_Member_Counters_LacpRxErrorsPath {
	return &Lacp_Interface_Member_Counters_LacpRxErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-rx-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpRxErrors (leaf): Number of LACPDU receive packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-rx-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-rx-errors"
func (n *Lacp_Interface_Member_CountersPathAny) LacpRxErrors() *Lacp_Interface_Member_Counters_LacpRxErrorsPathAny {
	return &Lacp_Interface_Member_Counters_LacpRxErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-rx-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpTimeoutTransitions (leaf): Number of times the LACP state has transitioned
// with a timeout since the time the device restarted
// or the interface was brought up, whichever is most
// recent. The last state change of the LACP timeout
// is defined as what is reported as the operating state
// to the system. The state change is both a timeout
// event and when the timeout event is no longer active.
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-timeout-transitions"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-timeout-transitions"
func (n *Lacp_Interface_Member_CountersPath) LacpTimeoutTransitions() *Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPath {
	return &Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-timeout-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpTimeoutTransitions (leaf): Number of times the LACP state has transitioned
// with a timeout since the time the device restarted
// or the interface was brought up, whichever is most
// recent. The last state change of the LACP timeout
// is defined as what is reported as the operating state
// to the system. The state change is both a timeout
// event and when the timeout event is no longer active.
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-timeout-transitions"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-timeout-transitions"
func (n *Lacp_Interface_Member_CountersPathAny) LacpTimeoutTransitions() *Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPathAny {
	return &Lacp_Interface_Member_Counters_LacpTimeoutTransitionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-timeout-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpTxErrors (leaf): Number of LACPDU transmit packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-tx-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-tx-errors"
func (n *Lacp_Interface_Member_CountersPath) LacpTxErrors() *Lacp_Interface_Member_Counters_LacpTxErrorsPath {
	return &Lacp_Interface_Member_Counters_LacpTxErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-tx-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpTxErrors (leaf): Number of LACPDU transmit packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-tx-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-tx-errors"
func (n *Lacp_Interface_Member_CountersPathAny) LacpTxErrors() *Lacp_Interface_Member_Counters_LacpTxErrorsPathAny {
	return &Lacp_Interface_Member_Counters_LacpTxErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-tx-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpUnknownErrors (leaf): Number of LACPDU unknown packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-unknown-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-unknown-errors"
func (n *Lacp_Interface_Member_CountersPath) LacpUnknownErrors() *Lacp_Interface_Member_Counters_LacpUnknownErrorsPath {
	return &Lacp_Interface_Member_Counters_LacpUnknownErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-unknown-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LacpUnknownErrors (leaf): Number of LACPDU unknown packet errors
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "lacp-unknown-errors"
// Path from root: "/lacp/interfaces/interface/members/member/state/counters/lacp-unknown-errors"
func (n *Lacp_Interface_Member_CountersPathAny) LacpUnknownErrors() *Lacp_Interface_Member_Counters_LacpUnknownErrorsPathAny {
	return &Lacp_Interface_Member_Counters_LacpUnknownErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lacp-unknown-errors"},
			map[string]interface{}{},
			n,
		),
	}
}
