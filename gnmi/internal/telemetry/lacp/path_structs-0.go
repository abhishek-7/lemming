/*
Package lacp is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /usr/local/google/home/robjs/go/pkg/mod/github.com/openconfig/ygot@v0.24.2/genutil/names.go
using the following YANG input files:
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package lacp

import (
	"github.com/openconfig/ygot/ygot"
)

// LacpPath represents the /openconfig-lacp/lacp YANG schema element.
type LacpPath struct {
	*ygot.NodePath
}

// LacpPathAny represents the wildcard version of the /openconfig-lacp/lacp YANG schema element.
type LacpPathAny struct {
	*ygot.NodePath
}

// Lacp_SystemPriorityPath represents the /openconfig-lacp/lacp/state/system-priority YANG schema element.
type Lacp_SystemPriorityPath struct {
	*ygot.NodePath
}

// Lacp_SystemPriorityPathAny represents the wildcard version of the /openconfig-lacp/lacp/state/system-priority YANG schema element.
type Lacp_SystemPriorityPathAny struct {
	*ygot.NodePath
}

// InterfaceAny (list): List of aggregate interfaces managed by LACP
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "interfaces/interface"
// Path from root: "/lacp/interfaces/interface"
// Name (wildcarded): string
func (n *LacpPath) InterfaceAny() *Lacp_InterfacePathAny {
	return &Lacp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// InterfaceAny (list): List of aggregate interfaces managed by LACP
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "interfaces/interface"
// Path from root: "/lacp/interfaces/interface"
// Name (wildcarded): string
func (n *LacpPathAny) InterfaceAny() *Lacp_InterfacePathAny {
	return &Lacp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"name": "*"},
			n,
		),
	}
}

// Interface (list): List of aggregate interfaces managed by LACP
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "interfaces/interface"
// Path from root: "/lacp/interfaces/interface"
// Name: string
func (n *LacpPath) Interface(Name string) *Lacp_InterfacePath {
	return &Lacp_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// Interface (list): List of aggregate interfaces managed by LACP
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "interfaces/interface"
// Path from root: "/lacp/interfaces/interface"
// Name: string
func (n *LacpPathAny) Interface(Name string) *Lacp_InterfacePathAny {
	return &Lacp_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"name": Name},
			n,
		),
	}
}

// SystemPriority (leaf): Sytem priority used by the node on this LAG interface.
// Lower value is higher priority for determining which node
// is the controlling system.
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/system-priority"
// Path from root: "/lacp/state/system-priority"
func (n *LacpPath) SystemPriority() *Lacp_SystemPriorityPath {
	return &Lacp_SystemPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemPriority (leaf): Sytem priority used by the node on this LAG interface.
// Lower value is higher priority for determining which node
// is the controlling system.
// ----------------------------------------
// Defining module: "openconfig-lacp"
// Instantiating module: "openconfig-lacp"
// Path from parent: "state/system-priority"
// Path from root: "/lacp/state/system-priority"
func (n *LacpPathAny) SystemPriority() *Lacp_SystemPriorityPathAny {
	return &Lacp_SystemPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-priority"},
			map[string]interface{}{},
			n,
		),
	}
}
