/*
Package networkinstance is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /usr/local/google/home/wenbli/gocode/pkg/mod/github.com/openconfig/ygot@v0.24.2/genutil/names.go
using the following YANG input files:
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package networkinstance

import (
	oc "github.com/openconfig/lemming/gnmi/internal/telemetry"
	"github.com/openconfig/ygot/ygot"
)

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size/state/size YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size/state/size YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePathAny struct {
	*ygot.NodePath
}

// Size (leaf): The maximum MTU that the advertising system can
// receive, expressed in bytes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size/state/size"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePath) Size() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "size"},
			map[string]interface{}{},
			n,
		),
	}
}

// Size (leaf): The maximum MTU that the advertising system can
// receive, expressed in bytes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/size"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/lsp-buffer-size/state/size"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSizePathAny) Size() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_LspBufferSize_SizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "size"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny struct {
	*ygot.NodePath
}

// PrefixAny (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId (wildcarded): uint16
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": "*", "prefix": "*"},
			n,
		),
	}
}

// PrefixAny (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId (wildcarded): uint16
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": "*", "prefix": "*"},
			n,
		),
	}
}

// PrefixAnyPrefix (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId: uint16
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath) PrefixAnyPrefix(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": MtId, "prefix": "*"},
			n,
		),
	}
}

// PrefixAnyPrefix (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId: uint16
// Prefix (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny) PrefixAnyPrefix(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": MtId, "prefix": "*"},
			n,
		),
	}
}

// PrefixAnyMtId (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId (wildcarded): uint16
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath) PrefixAnyMtId(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": "*", "prefix": Prefix},
			n,
		),
	}
}

// PrefixAnyMtId (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId (wildcarded): uint16
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny) PrefixAnyMtId(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": "*", "prefix": Prefix},
			n,
		),
	}
}

// Prefix (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId: uint16
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPath) Prefix(MtId uint16, Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": MtId, "prefix": Prefix},
			n,
		),
	}
}

// Prefix (list): IPv4 prefixes that are contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix"
// MtId: uint16
// Prefix: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4ReachabilityPathAny) Prefix(MtId uint16, Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"mt-id": MtId, "prefix": Prefix},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Multi-topology ID
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Multi-topology ID
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_MtIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv4 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv4 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The Sub-TLV present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The Sub-TLV present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPath) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_PrefixPathAny) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UpDownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPath{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_FlagsPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Flags_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny struct {
	*ygot.NodePath
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny struct {
	*ygot.NodePath
}

// Tag32 (leaf-list): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPath) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag32 (leaf-list): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_TagPathAny) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag_Tag32PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny struct {
	*ygot.NodePath
}

// Tag64 (leaf-list): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64Path) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (leaf-list): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64PathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_Subtlv_Tag64_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv4-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv4Reachability_Prefix_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny struct {
	*ygot.NodePath
}

// PrefixAny (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix (wildcarded): string
// MtId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*", "mt-id": "*"},
			n,
		),
	}
}

// PrefixAny (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix (wildcarded): string
// MtId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny) PrefixAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*", "mt-id": "*"},
			n,
		),
	}
}

// PrefixAnyMtId (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix: string
// MtId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath) PrefixAnyMtId(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix, "mt-id": "*"},
			n,
		),
	}
}

// PrefixAnyMtId (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix: string
// MtId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny) PrefixAnyMtId(Prefix string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix, "mt-id": "*"},
			n,
		),
	}
}

// PrefixAnyPrefix (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix (wildcarded): string
// MtId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath) PrefixAnyPrefix(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*", "mt-id": MtId},
			n,
		),
	}
}

// PrefixAnyPrefix (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix (wildcarded): string
// MtId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny) PrefixAnyPrefix(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": "*", "mt-id": MtId},
			n,
		),
	}
}

// Prefix (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix: string
// MtId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPath) Prefix(Prefix string, MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix, "mt-id": MtId},
			n,
		),
	}
}

// Prefix (list): List of IPv6 prefixes contained within MT
// reachability TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefixes/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix"
// Prefix: string
// MtId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6ReachabilityPathAny) Prefix(Prefix string, MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefixes", "prefix"},
			map[string]interface{}{"prefix": Prefix, "mt-id": MtId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/s-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/up-down YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/x-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/x-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Multi-topology ID
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Multi-topology ID
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_MtIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv6 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): IPv6 prefix contained within extended reachability TLVs.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/prefix"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) Prefix() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The sub-tlv present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SBit (leaf): The sub-tlv present bit. If UNSET, the octets of Sub-TLVs
// are not present. Otherwise, the bit is set and the octet
// following the prefix will contain the length of the Sub-TLV
// portion of the structure.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/s-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/s-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) SBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "s-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpDown (leaf): The up/down bit. Set if a prefix is advertised from a
// higher level to a lower level (e.g., level 2 to level 1),
// indicating that the prefix has traveled down the hierarchy.
// Prefixes that have the up/down bit set may only be
// advertised down the hierarchy, i.e., to lower levels. When a
// prefix is first injected into IS-IS, the bit is UNSET.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/up-down"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/up-down"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) UpDown() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UpDownPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "up-down"},
			map[string]interface{}{},
			n,
		),
	}
}

// XBit (leaf): The external bit. Set when the prefix was distributed into
// IS-IS from another routing protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/x-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/x-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPath) XBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "x-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// XBit (leaf): The external bit. Set when the prefix was distributed into
// IS-IS from another routing protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/x-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/state/x-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_PrefixPathAny) XBit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_XBitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "x-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4SourceRouterId (container): This container defines sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) Ipv4SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6SourceRouterId (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-source-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) Ipv6SourceRouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-source-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSidAny (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) PrefixSidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// PrefixSid (list): Prefix Segment-ID list. IGP-Prefix Segment is an IGP segment
// attached to an IGP prefix. An IGP-Prefix Segment is global
// (unless explicitly advertised otherwise) within the SR/IGP
// domain.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sids/prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) PrefixSid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sids", "prefix-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPath{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag (container): This container defines sub-TLV 1.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) Tag() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (container): This container defines sub-TLV 2.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Additional prefix reachability flags.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/flags/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_FlagsPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Flags_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv4 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv4-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv4SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny struct {
	*ygot.NodePath
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): IPv6 Source router ID address. In cases where the
// advertisement is an identifier for the advertising
// router (e.g., with the N-flag set in the Prefix
// Attribute Flags sub-TLV), it may be useful for other
// routers to know the source of the advertisement. When
// reachability advertisement is leaked from one level to
// another, Router ID advertised is always the Router ID
// of the IS-IS instance that originated the
// advertisement. This would be true even if the prefix
// had been learned from another protocol.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/router-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) RouterId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/ipv6-source-router-id/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterIdPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Ipv6SourceRouterId_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny struct {
	*ygot.NodePath
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Algorithm (leaf): Prefix-SID algorithm to be used for path computation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny) Algorithm() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_AlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Prefix Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): IGP Prefix-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/prefix-sids/prefix-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_PrefixSid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32PathAny struct {
	*ygot.NodePath
}

// Tag32 (leaf-list): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPath) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag32 (leaf-list): List of 32-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag32"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag/state/tag32"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_TagPathAny) Tag32() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag_Tag32PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag32"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64PathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64 YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64PathAny struct {
	*ygot.NodePath
}

// Tag64 (leaf-list): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64Path) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64Path {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64Path{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tag64 (leaf-list): List of 64-bit tags associated with the prefix. Example
// uses of these tags include carrying BGP standard (or
// extended) communities and controlling redistribution
// between levels and areas, different routing protocols,
// or multiple instances of IS-IS running on the same
// router.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tag64"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/subtlvs/subtlv/tag64/state/tag64"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64PathAny) Tag64() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64PathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_Subtlv_Tag64_Tag64PathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tag64"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-ipv6-reachability/prefixes/prefix/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIpv6Reachability_Prefix_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny struct {
	*ygot.NodePath
}

// NeighborAny (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": "*"},
			n,
		),
	}
}

// NeighborAnySystemId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId: uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath) NeighborAnySystemId(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": "*"},
			n,
		),
	}
}

// NeighborAnySystemId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId: uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny) NeighborAnySystemId(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": "*"},
			n,
		),
	}
}

// NeighborAnyMtId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath) NeighborAnyMtId(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": SystemId},
			n,
		),
	}
}

// NeighborAnyMtId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny) NeighborAnyMtId(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": SystemId},
			n,
		),
	}
}

// Neighbor (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId: uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePath) Neighbor(MtId uint16, SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": SystemId},
			n,
		),
	}
}

// Neighbor (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor"
// MtId: uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttributePathAny) Neighbor(MtId uint16, SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": SystemId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPathAny struct {
	*ygot.NodePath
}

// InstanceAny (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// InstanceAny (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Instance (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Instance (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// MtId (leaf): Identifier of a topology being announced.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Identifier of a topology being announced.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_MtIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): System-id of the IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPath) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): System-id of the IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_NeighborPathAny) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_SystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPathAny struct {
	*ygot.NodePath
}

// Id (leaf): Unique identifier for the TLV instance for the
// neighbor. The ID is not required to be consistent
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Unique identifier for the TLV instance for the
// neighbor. The ID is not required to be consistent
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_InstancePathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPath) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_SubtlvPathAny) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPath) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny struct {
	*ygot.NodePath
}

// AdminGroup (leaf-list): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (leaf-list): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroupPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny struct {
	*ygot.NodePath
}

// ConstraintAny (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath) ConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": "*"},
			n,
		),
	}
}

// ConstraintAny (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) ConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": "*"},
			n,
		),
	}
}

// Constraint (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath) Constraint(ConstraintId uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": ConstraintId},
			n,
		),
	}
}

// Constraint (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) Constraint(ConstraintId uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": ConstraintId},
			n,
		),
	}
}

// ModelId (leaf): Identifier for the Bandwidth Constraints  Model
// currently in use by the LSR initiating the IGP
// advertisement.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/model-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPath) ModelId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "model-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModelId (leaf): Identifier for the Bandwidth Constraints  Model
// currently in use by the LSR initiating the IGP
// advertisement.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/model-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) ModelId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "model-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The bandwidth constraint, expressed as a 32-bit IEEE
// floating point number expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The bandwidth constraint, expressed as a 32-bit IEEE
// floating point number expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConstraintId (leaf): Unique reference for the bandwidth constraint level. BC0
// is indicated by this leaf being set to zero, with BCN
// represented by this leaf being set to N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/constraint-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath) ConstraintId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "constraint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConstraintId (leaf): Unique reference for the bandwidth constraint level. BC0
// is indicated by this leaf being set to zero, with BCN
// represented by this leaf being set to N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/constraint-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny) ConstraintId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "constraint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny struct {
	*ygot.NodePath
}

// ExtendedAdminGroup (leaf-list): The extended-admin-group sub-TLV is used in addition
// to the Administrative Groups when it is desirable to
// make more than 32 colors available for advertisement
// in a network.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedAdminGroup (leaf-list): The extended-admin-group sub-TLV is used in addition
// to the Administrative Groups when it is desirable to
// make more than 32 colors available for advertisement
// in a network.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): A 4-octet IPv4 address for the interface described by
// the (main) TLV. This sub-TLV can occur multiple
// times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): A 4-octet IPv4 address for the interface described by
// the (main) TLV. This sub-TLV can occur multiple
// times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): A single IPv4 address for a neighboring router on
// this link. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): A single IPv4 address for a neighboring router on
// this link. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): Contains a 16-octet IPv6 address for the interface
// described by the containing  Extended IS Reachability
// TLV. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): Contains a 16-octet IPv6 address for the interface
// described by the containing  Extended IS Reachability
// TLV. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): Contains a 16-octet IPv6 address for a neighboring
// router on the link described by the (main) TLV. This
// sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): Contains a 16-octet IPv6 address for a neighboring
// router on the link described by the (main) TLV. This
// sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Flags associated with LAN-Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with LAN-Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborId (leaf): System ID of the neighbor associated with the LAN-
// Adj-Segment-ID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath) NeighborId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborId (leaf): System ID of the neighbor associated with the LAN-
// Adj-Segment-ID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) NeighborId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): LAN Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): LAN Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID
// for the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID
// for the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny struct {
	*ygot.NodePath
}

// LocalProtection (leaf-list): Link local-protection attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-protection"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPath) LocalProtection() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalProtection (leaf-list): Link local-protection attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-protection"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributesPathAny) LocalProtection() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay value (in microseconds) between
// two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPath) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay value (in microseconds) between
// two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayPathAny) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny struct {
	*ygot.NodePath
}

// Delay (leaf): Average link delay between two directly connected IS-
// IS neighbors over a configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPath) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay between two directly connected IS-
// IS neighbors over a configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePathAny struct {
	*ygot.NodePath
}

// Local (leaf): The value field of this sub-TLV contains 4 octets of
// Link Local Identifier followed by 4 octets of Link
// Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath) Local() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Local (leaf): The value field of this sub-TLV contains 4 octets of
// Link Local Identifier followed by 4 octets of Link
// Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny) Local() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_LocalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (leaf): If the Link Remote Identifier is unknown, it is set
// to 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPath) Remote() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (leaf): If the Link Remote Identifier is unknown, it is set
// to 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkIdPathAny) Remote() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkId_RemotePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (leaf): Link packet loss as a percentage of the total traffic
// sent over a configurable interval. The basic unit is
// 0.000003%, where (2^24 - 2) is 50.331642%. This value
// is the highest packet-loss percentage that can be
// expressed (the assumption being that precision is more
// important on high-speed links than the ability to
// advertise loss rates greater than this, and that high-
// speed links with over 50% loss are unusable).
// Therefore, measured values that are larger than the
// field maximum SHOULD be encoded as the maximum
// value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPath) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (leaf): Link packet loss as a percentage of the total traffic
// sent over a configurable interval. The basic unit is
// 0.000003%, where (2^24 - 2) is 50.331642%. This value
// is the highest packet-loss percentage that can be
// expressed (the assumption being that precision is more
// important on high-speed links than the ability to
// advertise loss rates greater than this, and that high-
// speed links with over 50% loss are unusable).
// Therefore, measured values that are larger than the
// field maximum SHOULD be encoded as the maximum
// value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLossPathAny) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny struct {
	*ygot.NodePath
}

// Type (leaf-list): Link protection capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf-list): Link protection capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The maximum bandwidth that can be used on this link
// in this direction (from the system originating the LSP
// to its neighbors).  It is encoded in 32 bits in IEEE
// floating point format.  The units are bytes (not
// bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The maximum bandwidth that can be used on this link
// in this direction (from the system originating the LSP
// to its neighbors).  It is encoded in 32 bits in IEEE
// floating point format.  The units are bytes (not
// bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The maximum amount of bandwidth that can be reserved
// in this direction on this link.  Note that for
// oversubscription purposes,  this can be greater than
// the bandwidth of the link. It is encoded  in 32 bits
// in IEEE floating point format.  The units are bytes
// (not bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The maximum amount of bandwidth that can be reserved
// in this direction on this link.  Note that for
// oversubscription purposes,  this can be greater than
// the bandwidth of the link. It is encoded  in 32 bits
// in IEEE floating point format.  The units are bytes
// (not bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDelay (leaf): Maximum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) MaxDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDelay (leaf): Maximum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) MaxDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinDelay (leaf): Minimum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/min-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) MinDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinDelay (leaf): Minimum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/min-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) MinDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): Residual bandwidth on a link,forwarding adjacency
// [RFC4206], or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, residual bandwidth is defined to
// be the Maximum Bandwidth [RFC5305] minus the bandwidth
// currently allocated to RSVP-TE label switched paths.
// For a bundled link, residual bandwidth is defined to
// be the sum of the component link residual
// bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): Residual bandwidth on a link,forwarding adjacency
// [RFC4206], or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, residual bandwidth is defined to
// be the Maximum Bandwidth [RFC5305] minus the bandwidth
// currently allocated to RSVP-TE label switched paths.
// For a bundled link, residual bandwidth is defined to
// be the sum of the component link residual
// bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The amount of bandwidth reservable in this
// direction on this link. Note that for
// oversubscription purposes, this can be greater than
// the bandwidth of the link. It contains eight 32-bit
// IEEE floating point numbers(one for each priority).
// The units are bytes (not bits!) per second. The
// values correspond to the bandwidth that can be
// reserved with a setup priority of 0 through 7,
// arranged in increasing order with priority 0
// occurring at the start of the sub-TLV, and priority
// 7 at the end of the sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The amount of bandwidth reservable in this
// direction on this link. Note that for
// oversubscription purposes, this can be greater than
// the bandwidth of the link. It contains eight 32-bit
// IEEE floating point numbers(one for each priority).
// The units are bytes (not bits!) per second. The
// values correspond to the bandwidth that can be
// reserved with a setup priority of 0 through 7,
// arranged in increasing order with priority 0
// occurring at the start of the sub-TLV, and priority
// 7 at the end of the sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Setup priority level of 0 through 7 to be used by
// Unreserved Bandwidth sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPath) Priority() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Setup priority level of 0 through 7 to be used by
// Unreserved Bandwidth sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriorityPathAny) Priority() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): This metric is administratively assigned and can be
// used to present a differently weighted topology to
// traffic engineering SPF calculations. To preclude
// overflow within a traffic engineering SPF
// implementation, all metrics greater than or equal to
// MAX_PATH_METRIC SHALL be considered to have a metric
// of MAX_PATH_METRIC.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): This metric is administratively assigned and can be
// used to present a differently weighted topology to
// traffic engineering SPF calculations. To preclude
// overflow within a traffic engineering SPF
// implementation, all metrics greater than or equal to
// MAX_PATH_METRIC SHALL be considered to have a metric
// of MAX_PATH_METRIC.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny struct {
	*ygot.NodePath
}

// Count (leaf): Unconstrained TE LSP count(TE Label Switched Paths
// (LSPs) signalled with zero bandwidth).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath) Count() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "count"},
			map[string]interface{}{},
			n,
		),
	}
}

// Count (leaf): Unconstrained TE LSP count(TE Label Switched Paths
// (LSPs) signalled with zero bandwidth).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny) Count() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "count"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The bandwidth utilization on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second.  For a link or
// forwarding adjacency, bandwidth utilization represents
// the actual utilization of the link (i.e., as measured
// by the advertising node).  For a bundled link,
// bandwidth utilization is defined to be the sum of the
// component link bandwidth utilizations.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The bandwidth utilization on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second.  For a link or
// forwarding adjacency, bandwidth utilization represents
// the actual utilization of the link (i.e., as measured
// by the advertising node).  For a bundled link,
// bandwidth utilization is defined to be the sum of the
// component link bandwidth utilizations.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isis-neighbor-attribute/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsisNeighborAttribute_Neighbor_Instance_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny struct {
	*ygot.NodePath
}

// NeighborAny (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny) NeighborAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": "*"},
			n,
		),
	}
}

// NeighborAnySystemId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId: uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath) NeighborAnySystemId(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": "*"},
			n,
		),
	}
}

// NeighborAnySystemId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId: uint16
// SystemId (wildcarded): string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny) NeighborAnySystemId(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": "*"},
			n,
		),
	}
}

// NeighborAnyMtId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath) NeighborAnyMtId(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": SystemId},
			n,
		),
	}
}

// NeighborAnyMtId (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId (wildcarded): uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny) NeighborAnyMtId(SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": "*", "system-id": SystemId},
			n,
		),
	}
}

// Neighbor (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId: uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPath) Neighbor(MtId uint16, SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": SystemId},
			n,
		),
	}
}

// Neighbor (list): This container describes IS neighbors.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor"
// MtId: uint16
// SystemId: string
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsnPathAny) Neighbor(MtId uint16, SystemId string) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"mt-id": MtId, "system-id": SystemId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPathAny struct {
	*ygot.NodePath
}

// InstanceAny (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// InstanceAny (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance"
// Id (wildcarded): uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny) InstanceAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Instance (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Instance (list): Instance of TLV-222 between the originating
// and remote IS.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "instances/instance"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance"
// Id: uint64
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny) Instance(Id uint64) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instances", "instance"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// MtId (leaf): Identifier of a topology being announced.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Identifier of a topology being announced.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_MtIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): System-id of the IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPath) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemId (leaf): System-id of the IS neighbor.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/state/system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_NeighborPathAny) SystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_SystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPathAny struct {
	*ygot.NodePath
}

// Id (leaf): Unique identifier for the TLV instance for the
// neighbor. The ID is not required to be consistent
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Unique identifier for the TLV instance for the
// neighbor. The ID is not required to be consistent
// across readvertisements of the LSP.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny) Id() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): ISIS metric value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// SubtlvAny (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type (wildcarded): oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny) SubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// Subtlv (list): List of subTLV types in the LSDB for the specified TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "subtlvs/subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv"
// Type: oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny) Subtlv(Type oc.E_IsisLsdbTypes_ISIS_SUBTLV_TYPE) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"subtlvs", "subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlvAny (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny) UndefinedSubtlvAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePath) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// UndefinedSubtlv (list): Sub-TLVs that are not defined in the model or not
// recognised by system.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "undefined-subtlvs/undefined-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv"
// Type: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_InstancePathAny) UndefinedSubtlv(Type uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"undefined-subtlvs", "undefined-subtlv"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePathAny struct {
	*ygot.NodePath
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) AdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sids/adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) AdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sids", "adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (container): This container defines sub-TLV 3.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// AvailableBandwidth (container): This container defines unidirectional lavailable
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "available-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) AvailableBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"available-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraintAny (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) BandwidthConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": "*"},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// BandwidthConstraint (list): List of the Bandwidth Constraints sub-TLV instances
// present in the TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bandwidth-constraints/bandwidth-constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint"
// ModelId: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) BandwidthConstraint(ModelId uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bandwidth-constraints", "bandwidth-constraint"},
			map[string]interface{}{"model-id": ModelId},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedAdminGroup (container): This container defines sub-TLV 14.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4InterfaceAddress (container): This container defines sub-TLV 6.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) Ipv4InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4NeighborAddress (container): This container defines sub-TLV 8.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) Ipv4NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6InterfaceAddress (container): This container defines sub-TLV 12.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) Ipv6InterfaceAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6NeighborAddress (container): This container defines sub-TLV 13.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv6-neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) Ipv6NeighborAddress() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv6-neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySidAny (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LanAdjacencySidAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": "*"},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LanAdjacencySid (list): Adjacency Segment-IDs List. An IGP-Adjacency Segment is
// an IGP segment attached to a unidirectional adjacency or
// a set of unidirectional adjacencies. By default, an IGP-
// Adjacency Segment is local to the node which advertises
// it.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lan-adjacency-sids/lan-adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid"
// Value: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LanAdjacencySid(Value uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lan-adjacency-sids", "lan-adjacency-sid"},
			map[string]interface{}{"value": Value},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkAttributes (container): This container defines link-attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LinkAttributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelay (container): This container defines unidirectional link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkDelayVariation (container): This container defines unidirectional link delay
// variation.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-delay-variation"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LinkDelayVariation() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-delay-variation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (container): This container defines sub-TLV 4.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LinkId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPath{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (container): This container defines unidirectional link loss delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkProtectionType (container): ISIS LSDB parameters relating to the type of link
// protection offered.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link-protection-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) LinkProtectionType() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link-protection-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxLinkBandwidth (container): This container defines sub-TLV 9.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) MaxLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxReservableLinkBandwidth (container): This container defines sub-TLV 10.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-reservable-link-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) MaxReservableLinkBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-reservable-link-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinMaxLinkDelay (container): This container defines min/max link delay.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "min-max-link-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) MinMaxLinkDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-max-link-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ResidualBandwidth (container): This container defines unidirectional residual
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "residual-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) ResidualBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"residual-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriorityAny (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) SetupPriorityAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// SetupPriority (list): Setup priority (0 through 7) for unreserved
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidth/setup-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority"
// Priority: uint8
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) SetupPriority(Priority uint8) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidth", "setup-priority"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// TeDefaultMetric (container): This container defines sub-TLV 18.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-default-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) TeDefaultMetric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-default-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnconstrainedLsp (container): This container defines sub-TLV 23.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unconstrained-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) UnconstrainedLsp() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unconstrained-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPath) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// UtilizedBandwidth (container): This container defines unidirectional utilized
// bandwidth.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "utilized-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_SubtlvPathAny) UtilizedBandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"utilized-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPath) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID for
// the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/adjacency-sids/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny struct {
	*ygot.NodePath
}

// AdminGroup (leaf-list): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPath) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdminGroup (leaf-list): The administrative group sub-TLV contains a 4-octet
// bit mask assigned by the network administrator.  Each
// set bit corresponds to one administrative group
// assigned to the interface. By convention, the least
// significant bit is referred to as group 0, and the
// most significant bit is referred to as group 31.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/admin-group/state/admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroupPathAny) AdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AdminGroup_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The available bandwidth on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, available bandwidth is defined
// to be residual bandwidth minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths minus the measured bandwidth
// used for the actual forwarding of non-RSVP-TE label
// switched path packets.  For a bundled link, available
// bandwidth is defined to be the sum of the component
// link available bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/available-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidthPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_AvailableBandwidth_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny struct {
	*ygot.NodePath
}

// ConstraintAny (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath) ConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": "*"},
			n,
		),
	}
}

// ConstraintAny (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId (wildcarded): uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) ConstraintAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": "*"},
			n,
		),
	}
}

// Constraint (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath) Constraint(ConstraintId uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": ConstraintId},
			n,
		),
	}
}

// Constraint (list): List of the constraints within the Bandwidth
// Constraints sub-TLV. The BC0 level is indicated by
// the constraint-id leaf being set to 0, with BCN
// being indicated by constraint-id N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "constraints/constraint"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint"
// ConstraintId: uint32
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) Constraint(ConstraintId uint32) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"constraints", "constraint"},
			map[string]interface{}{"constraint-id": ConstraintId},
			n,
		),
	}
}

// ModelId (leaf): Identifier for the Bandwidth Constraints  Model
// currently in use by the LSR initiating the IGP
// advertisement.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/model-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPath) ModelId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "model-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ModelId (leaf): Identifier for the Bandwidth Constraints  Model
// currently in use by the LSR initiating the IGP
// advertisement.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/model-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/state/model-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraintPathAny) ModelId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ModelIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "model-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The bandwidth constraint, expressed as a 32-bit IEEE
// floating point number expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The bandwidth constraint, expressed as a 32-bit IEEE
// floating point number expressed in bytes per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConstraintId (leaf): Unique reference for the bandwidth constraint level. BC0
// is indicated by this leaf being set to zero, with BCN
// represented by this leaf being set to N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/constraint-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPath) ConstraintId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "constraint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ConstraintId (leaf): Unique reference for the bandwidth constraint level. BC0
// is indicated by this leaf being set to zero, with BCN
// represented by this leaf being set to N.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/constraint-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/bandwidth-constraints/bandwidth-constraint/constraints/constraint/state/constraint-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_ConstraintPathAny) ConstraintId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_BandwidthConstraint_Constraint_ConstraintIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "constraint-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny struct {
	*ygot.NodePath
}

// ExtendedAdminGroup (leaf-list): The extended-admin-group sub-TLV is used in addition
// to the Administrative Groups when it is desirable to
// make more than 32 colors available for advertisement
// in a network.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPath) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedAdminGroup (leaf-list): The extended-admin-group sub-TLV is used in addition
// to the Administrative Groups when it is desirable to
// make more than 32 colors available for advertisement
// in a network.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/extended-admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/extended-admin-group/state/extended-admin-group"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroupPathAny) ExtendedAdminGroup() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ExtendedAdminGroup_ExtendedAdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "extended-admin-group"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): A 4-octet IPv4 address for the interface described by
// the (main) TLV. This sub-TLV can occur multiple
// times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): A 4-octet IPv4 address for the interface described by
// the (main) TLV. This sub-TLV can occur multiple
// times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4InterfaceAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): A single IPv4 address for a neighboring router on
// this link. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): A single IPv4 address for a neighboring router on
// this link. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv4-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv4NeighborAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): Contains a 16-octet IPv6 address for the interface
// described by the containing  Extended IS Reachability
// TLV. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): Contains a 16-octet IPv6 address for the interface
// described by the containing  Extended IS Reachability
// TLV. This sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-interface-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6InterfaceAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf-list): Contains a 16-octet IPv6 address for a neighboring
// router on the link described by the (main) TLV. This
// sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPath) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf-list): Contains a 16-octet IPv6 address for a neighboring
// router on the link described by the (main) TLV. This
// sub-TLV can occur multiple times.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/ipv6-neighbor-address/state/address"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddressPathAny) Address() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_Ipv6NeighborAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Flags (leaf-list): Flags associated with LAN-Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// Flags (leaf-list): Flags associated with LAN-Adj-Segment-ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/flags"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/flags"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Flags() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_FlagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "flags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborId (leaf): System ID of the neighbor associated with the LAN-
// Adj-Segment-ID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath) NeighborId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborId (leaf): System ID of the neighbor associated with the LAN-
// Adj-Segment-ID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/neighbor-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) NeighborId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_NeighborIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): LAN Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): LAN Adjacency-SID value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID
// for the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPath) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): Value that represents the weight of the Adj-SID
// for the purpose of load balancing.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/lan-adjacency-sids/lan-adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LanAdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny struct {
	*ygot.NodePath
}

// LocalProtection (leaf-list): Link local-protection attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-protection"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPath) LocalProtection() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalProtection (leaf-list): Link local-protection attributes.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-protection"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-attributes/state/local-protection"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributesPathAny) LocalProtection() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkAttributes_LocalProtectionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-protection"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay value (in microseconds) between
// two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPath) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay value (in microseconds) between
// two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayPathAny) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelay_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny struct {
	*ygot.NodePath
}

// Delay (leaf): Average link delay between two directly connected IS-
// IS neighbors over a configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPath) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Delay (leaf): Average link delay between two directly connected IS-
// IS neighbors over a configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-delay-variation/state/delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariationPathAny) Delay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkDelayVariation_DelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePathAny struct {
	*ygot.NodePath
}

// Local (leaf): The value field of this sub-TLV contains 4 octets of
// Link Local Identifier followed by 4 octets of Link
// Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPath) Local() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Local (leaf): The value field of this sub-TLV contains 4 octets of
// Link Local Identifier followed by 4 octets of Link
// Remote Identifier.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/local"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPathAny) Local() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_LocalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (leaf): If the Link Remote Identifier is unknown, it is set
// to 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPath) Remote() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// Remote (leaf): If the Link Remote Identifier is unknown, it is set
// to 0.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-id/state/remote"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkIdPathAny) Remote() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkId_RemotePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (leaf): Link packet loss as a percentage of the total traffic
// sent over a configurable interval. The basic unit is
// 0.000003%, where (2^24 - 2) is 50.331642%. This value
// is the highest packet-loss percentage that can be
// expressed (the assumption being that precision is more
// important on high-speed links than the ability to
// advertise loss rates greater than this, and that high-
// speed links with over 50% loss are unusable).
// Therefore, measured values that are larger than the
// field maximum SHOULD be encoded as the maximum
// value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPath) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkLoss (leaf): Link packet loss as a percentage of the total traffic
// sent over a configurable interval. The basic unit is
// 0.000003%, where (2^24 - 2) is 50.331642%. This value
// is the highest packet-loss percentage that can be
// expressed (the assumption being that precision is more
// important on high-speed links than the ability to
// advertise loss rates greater than this, and that high-
// speed links with over 50% loss are unusable).
// Therefore, measured values that are larger than the
// field maximum SHOULD be encoded as the maximum
// value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-loss"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-loss/state/link-loss"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLossPathAny) LinkLoss() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkLoss_LinkLossPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-loss"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny struct {
	*ygot.NodePath
}

// Type (leaf-list): Link protection capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf-list): Link protection capabilities.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/link-protection-type/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionTypePathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_LinkProtectionType_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The maximum bandwidth that can be used on this link
// in this direction (from the system originating the LSP
// to its neighbors).  It is encoded in 32 bits in IEEE
// floating point format.  The units are bytes (not
// bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The maximum bandwidth that can be used on this link
// in this direction (from the system originating the LSP
// to its neighbors).  It is encoded in 32 bits in IEEE
// floating point format.  The units are bytes (not
// bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxLinkBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The maximum amount of bandwidth that can be reserved
// in this direction on this link.  Note that for
// oversubscription purposes,  this can be greater than
// the bandwidth of the link. It is encoded  in 32 bits
// in IEEE floating point format.  The units are bytes
// (not bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The maximum amount of bandwidth that can be reserved
// in this direction on this link.  Note that for
// oversubscription purposes,  this can be greater than
// the bandwidth of the link. It is encoded  in 32 bits
// in IEEE floating point format.  The units are bytes
// (not bits!) per second.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/max-reservable-link-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MaxReservableLinkBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny struct {
	*ygot.NodePath
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// ABit (leaf): The A bit is set when the measured value of this parameter
// exceeds its configured maximum threshold. The A bit is cleared
// when the measured value falls below its configured reuse
// threshold.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/a-bit"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/a-bit"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) ABit() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_ABitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a-bit"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDelay (leaf): Maximum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) MaxDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxDelay (leaf): Maximum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/max-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) MaxDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MaxDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinDelay (leaf): Minimum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/min-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPath) MinDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinDelay (leaf): Minimum measured link delay value(in microseconds)
// between two directly connected IS-IS neighbors over a
// configurable interval.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/min-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/min-max-link-delay/state/min-delay"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelayPathAny) MinDelay() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_MinMaxLinkDelay_MinDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "min-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): Residual bandwidth on a link,forwarding adjacency
// [RFC4206], or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, residual bandwidth is defined to
// be the Maximum Bandwidth [RFC5305] minus the bandwidth
// currently allocated to RSVP-TE label switched paths.
// For a bundled link, residual bandwidth is defined to
// be the sum of the component link residual
// bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): Residual bandwidth on a link,forwarding adjacency
// [RFC4206], or bundled link in IEEE floating-point
// format with units of bytes per second. For a link or
// forwarding adjacency, residual bandwidth is defined to
// be the Maximum Bandwidth [RFC5305] minus the bandwidth
// currently allocated to RSVP-TE label switched paths.
// For a bundled link, residual bandwidth is defined to
// be the sum of the component link residual
// bandwidths.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/residual-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_ResidualBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The amount of bandwidth reservable in this
// direction on this link. Note that for
// oversubscription purposes, this can be greater than
// the bandwidth of the link. It contains eight 32-bit
// IEEE floating point numbers(one for each priority).
// The units are bytes (not bits!) per second. The
// values correspond to the bandwidth that can be
// reserved with a setup priority of 0 through 7,
// arranged in increasing order with priority 0
// occurring at the start of the sub-TLV, and priority
// 7 at the end of the sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The amount of bandwidth reservable in this
// direction on this link. Note that for
// oversubscription purposes, this can be greater than
// the bandwidth of the link. It contains eight 32-bit
// IEEE floating point numbers(one for each priority).
// The units are bytes (not bits!) per second. The
// values correspond to the bandwidth that can be
// reserved with a setup priority of 0 through 7,
// arranged in increasing order with priority 0
// occurring at the start of the sub-TLV, and priority
// 7 at the end of the sub-TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Setup priority level of 0 through 7 to be used by
// Unreserved Bandwidth sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPath) Priority() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): Setup priority level of 0 through 7 to be used by
// Unreserved Bandwidth sub-TLV 11.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unreserved-bandwidth/setup-priority/state/priority"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriorityPathAny) Priority() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_SetupPriority_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): This metric is administratively assigned and can be
// used to present a differently weighted topology to
// traffic engineering SPF calculations. To preclude
// overflow within a traffic engineering SPF
// implementation, all metrics greater than or equal to
// MAX_PATH_METRIC SHALL be considered to have a metric
// of MAX_PATH_METRIC.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPath) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): This metric is administratively assigned and can be
// used to present a differently weighted topology to
// traffic engineering SPF calculations. To preclude
// overflow within a traffic engineering SPF
// implementation, all metrics greater than or equal to
// MAX_PATH_METRIC SHALL be considered to have a metric
// of MAX_PATH_METRIC.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/te-default-metric/state/metric"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetricPathAny) Metric() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_TeDefaultMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny struct {
	*ygot.NodePath
}

// Count (leaf): Unconstrained TE LSP count(TE Label Switched Paths
// (LSPs) signalled with zero bandwidth).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPath) Count() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "count"},
			map[string]interface{}{},
			n,
		),
	}
}

// Count (leaf): Unconstrained TE LSP count(TE Label Switched Paths
// (LSPs) signalled with zero bandwidth).
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny) Count() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_CountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "count"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/unconstrained-lsp/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLspPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UnconstrainedLsp_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny struct {
	*ygot.NodePath
}

// Bandwidth (leaf): The bandwidth utilization on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second.  For a link or
// forwarding adjacency, bandwidth utilization represents
// the actual utilization of the link (i.e., as measured
// by the advertising node).  For a bundled link,
// bandwidth utilization is defined to be the sum of the
// component link bandwidth utilizations.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPath) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bandwidth (leaf): The bandwidth utilization on a link, forwarding
// adjacency, or bundled link in IEEE floating-point
// format with units of bytes per second.  For a link or
// forwarding adjacency, bandwidth utilization represents
// the actual utilization of the link (i.e., as measured
// by the advertising node).  For a bundled link,
// bandwidth utilization is defined to be the sum of the
// component link bandwidth utilizations.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/bandwidth"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny) Bandwidth() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_BandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of subTLV being described. The type of subTLV is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/subtlvs/subtlv/utilized-bandwidth/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidthPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_Subtlv_UtilizedBandwidth_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/mt-isn/neighbors/neighbor/instances/instance/undefined-subtlvs/undefined-subtlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MtIsn_Neighbor_Instance_UndefinedSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPathAny struct {
	*ygot.NodePath
}

// TopologyAny (list): This list describes a topology.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "topologies/topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology"
// MtId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPath) TopologyAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"topologies", "topology"},
			map[string]interface{}{"mt-id": "*"},
			n,
		),
	}
}

// TopologyAny (list): This list describes a topology.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "topologies/topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology"
// MtId (wildcarded): uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPathAny) TopologyAny() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"topologies", "topology"},
			map[string]interface{}{"mt-id": "*"},
			n,
		),
	}
}

// Topology (list): This list describes a topology.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "topologies/topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology"
// MtId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPath) Topology(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPath{
		NodePath: ygot.NewNodePath(
			[]string{"topologies", "topology"},
			map[string]interface{}{"mt-id": MtId},
			n,
		),
	}
}

// Topology (list): This list describes a topology.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "topologies/topology"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology"
// MtId: uint16
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopologyPathAny) Topology(MtId uint16) *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"topologies", "topology"},
			map[string]interface{}{"mt-id": MtId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/attributes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/mt-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPathAny struct {
	*ygot.NodePath
}

// Attributes (leaf): Attributes of the LSP for the associated
// topology.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPath) Attributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Attributes (leaf): Attributes of the LSP for the associated
// topology.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attributes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/attributes"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny) Attributes() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_AttributesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attributes"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Multi-topology ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPath) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MtId (leaf): Multi-topology ID.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mt-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/multi-topology/topologies/topology/state/mt-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_TopologyPathAny) MtId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_MultiTopology_Topology_MtIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mt-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid/state/nlpid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid/state/nlpid YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPathAny struct {
	*ygot.NodePath
}

// Nlpid (leaf-list): Protocol supported. IPv4 is defined as (0xcc) and IPv6 -
// (0x8e)
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/nlpid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid/state/nlpid"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPath) Nlpid() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nlpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nlpid (leaf-list): Protocol supported. IPv4 is defined as (0xcc) and IPv6 -
// (0x8e)
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/nlpid"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/nlpid/state/nlpid"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_NlpidPathAny) Nlpid() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_Nlpid_NlpidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nlpid"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/received-system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/received-system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/source-system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/source-system-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/system-id-count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/system-id-count YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPathAny struct {
	*ygot.NodePath
}

// ReceivedSystemId (leaf): System ID of the Intermediate System from which the
// purge was received.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received-system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/received-system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath) ReceivedSystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received-system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReceivedSystemId (leaf): System ID of the Intermediate System from which the
// purge was received.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/received-system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/received-system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny) ReceivedSystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_ReceivedSystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "received-system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceSystemId (leaf): System ID of the Intermediate System that inserted
// this TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/source-system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath) SourceSystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceSystemId (leaf): System ID of the Intermediate System that inserted
// this TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-system-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/source-system-id"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny) SourceSystemId() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SourceSystemIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-system-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemIdCount (leaf): Number of system IDs carried in this TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id-count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/system-id-count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPath) SystemIdCount() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// SystemIdCount (leaf): Number of system IDs carried in this TLV.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/system-id-count"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/tlvs/tlv/purge-oi/state/system-id-count"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOiPathAny) SystemIdCount() *NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_Tlv_PurgeOi_SystemIdCountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "system-id-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): TLV length.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/length"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny) Length() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): TLV Type.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/type"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny) Type() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPath) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePath {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): TLV value.
// ----------------------------------------
// Defining module: "openconfig-isis-lsp"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/link-state-database/lsp/undefined-tlvs/undefined-tlv/state/value"
func (n *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlvPathAny) Value() *NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Isis_Level_Lsp_UndefinedTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_RoutePreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/external-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/external-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/internal-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/internal-route-preference YANG schema element.
type NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny struct {
	*ygot.NodePath
}

// ExternalRoutePreference (leaf): Administrative Distance (preference) for external ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/external-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePath) ExternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalRoutePreference (leaf): Administrative Distance (preference) for external ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/external-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny) ExternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_ExternalRoutePreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalRoutePreference (leaf): Administrative Distance (preference) for internal ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/internal-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/internal-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePath) InternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "internal-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// InternalRoutePreference (leaf): Administrative Distance (preference) for internal ISIS routes.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/internal-route-preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/route-preference/state/internal-route-preference"
func (n *NetworkInstance_Protocol_Isis_Level_RoutePreferencePathAny) InternalRoutePreference() *NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny {
	return &NetworkInstance_Protocol_Isis_Level_RoutePreference_InternalRoutePreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "internal-route-preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-type-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-type-fails YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/corrupted-lsps YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/corrupted-lsps YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/database-overloads YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/database-overloads YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/exceed-max-seq-nums YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/exceed-max-seq-nums YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/id-len-mismatch YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/id-len-mismatch YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/lsp-errors YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/lsp-errors YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/manual-address-drop-from-areas YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/manual-address-drop-from-areas YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/max-area-address-mismatches YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/max-area-address-mismatches YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/own-lsp-purges YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/own-lsp-purges YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/part-changes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/part-changes YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/seq-num-skips YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/seq-num-skips YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/spf-runs YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/spf-runs YANG schema element.
type NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPathAny struct {
	*ygot.NodePath
}

// AuthFails (leaf): The number of authentication key failures.
// MIB Entry: SysAuthFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-fails"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) AuthFails() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthFails (leaf): The number of authentication key failures.
// MIB Entry: SysAuthFails.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-fails"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) AuthFails() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthFailsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthTypeFails (leaf): The number of authentication type mismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-type-fails"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) AuthTypeFails() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthTypeFails (leaf): The number of authentication type mismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/auth-type-fails"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/auth-type-fails"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) AuthTypeFails() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_AuthTypeFailsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "auth-type-fails"},
			map[string]interface{}{},
			n,
		),
	}
}

// CorruptedLsps (leaf): Number of corrupted in-memory LSPs detected. LSPs received from the
// wire with a bad checksum are silently dropped and not counted. LSPs
// received from the wire with parse errors are counted by lsp-errors. MIB
// Entry: SysCorrLSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/corrupted-lsps"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/corrupted-lsps"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) CorruptedLsps() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "corrupted-lsps"},
			map[string]interface{}{},
			n,
		),
	}
}

// CorruptedLsps (leaf): Number of corrupted in-memory LSPs detected. LSPs received from the
// wire with a bad checksum are silently dropped and not counted. LSPs
// received from the wire with parse errors are counted by lsp-errors. MIB
// Entry: SysCorrLSPs.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/corrupted-lsps"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/corrupted-lsps"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) CorruptedLsps() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_CorruptedLspsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "corrupted-lsps"},
			map[string]interface{}{},
			n,
		),
	}
}

// DatabaseOverloads (leaf): Number of times the database has become
// overloaded.
// MIB entry: SysLSPL(Level)DbaseOloads.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/database-overloads"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/database-overloads"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) DatabaseOverloads() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "database-overloads"},
			map[string]interface{}{},
			n,
		),
	}
}

// DatabaseOverloads (leaf): Number of times the database has become
// overloaded.
// MIB entry: SysLSPL(Level)DbaseOloads.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/database-overloads"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/database-overloads"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) DatabaseOverloads() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_DatabaseOverloadsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "database-overloads"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedMaxSeqNums (leaf): The number of times the system has attempted to exceed the maximum
// sequence number. MIB Entry: SysAttmptToExMaxSeqNums.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/exceed-max-seq-nums"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/exceed-max-seq-nums"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) ExceedMaxSeqNums() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exceed-max-seq-nums"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExceedMaxSeqNums (leaf): The number of times the system has attempted to exceed the maximum
// sequence number. MIB Entry: SysAttmptToExMaxSeqNums.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/exceed-max-seq-nums"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/exceed-max-seq-nums"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) ExceedMaxSeqNums() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ExceedMaxSeqNumsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "exceed-max-seq-nums"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdLenMismatch (leaf): Number of times a PDU is received with a different value for ID field
// length from that of the receiving system. MIB Entry:
// isisSysIDFieldLenMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id-len-mismatch"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/id-len-mismatch"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) IdLenMismatch() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id-len-mismatch"},
			map[string]interface{}{},
			n,
		),
	}
}

// IdLenMismatch (leaf): Number of times a PDU is received with a different value for ID field
// length from that of the receiving system. MIB Entry:
// isisSysIDFieldLenMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id-len-mismatch"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/id-len-mismatch"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) IdLenMismatch() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_IdLenMismatchPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id-len-mismatch"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspErrors (leaf): The number of received LSPs with errors.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-errors"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/lsp-errors"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) LspErrors() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// LspErrors (leaf): The number of received LSPs with errors.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/lsp-errors"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/lsp-errors"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) LspErrors() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_LspErrorsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "lsp-errors"},
			map[string]interface{}{},
			n,
		),
	}
}

// ManualAddressDropFromAreas (leaf): Number of times a manual address has been dropped from area.
// MIB Entry: SysManAddrDropFromAreas.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/manual-address-drop-from-areas"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/manual-address-drop-from-areas"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) ManualAddressDropFromAreas() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "manual-address-drop-from-areas"},
			map[string]interface{}{},
			n,
		),
	}
}

// ManualAddressDropFromAreas (leaf): Number of times a manual address has been dropped from area.
// MIB Entry: SysManAddrDropFromAreas.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/manual-address-drop-from-areas"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/manual-address-drop-from-areas"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) ManualAddressDropFromAreas() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_ManualAddressDropFromAreasPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "manual-address-drop-from-areas"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxAreaAddressMismatches (leaf): Number of times a PDU is received with a different value for
// MaximumAreaAddresses from that of the receiving system. MIB Entry:
// SysMaxAreaAddrMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-area-address-mismatches"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/max-area-address-mismatches"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) MaxAreaAddressMismatches() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-area-address-mismatches"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxAreaAddressMismatches (leaf): Number of times a PDU is received with a different value for
// MaximumAreaAddresses from that of the receiving system. MIB Entry:
// SysMaxAreaAddrMismatches.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/max-area-address-mismatches"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/max-area-address-mismatches"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) MaxAreaAddressMismatches() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_MaxAreaAddressMismatchesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "max-area-address-mismatches"},
			map[string]interface{}{},
			n,
		),
	}
}

// OwnLspPurges (leaf): Number of times a zero-aged copy of the system's
// own LSP is received from some other node.
// MIB Entry: isisSysOwnLSPPurges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/own-lsp-purges"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/own-lsp-purges"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) OwnLspPurges() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "own-lsp-purges"},
			map[string]interface{}{},
			n,
		),
	}
}

// OwnLspPurges (leaf): Number of times a zero-aged copy of the system's
// own LSP is received from some other node.
// MIB Entry: isisSysOwnLSPPurges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/own-lsp-purges"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/own-lsp-purges"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) OwnLspPurges() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_OwnLspPurgesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "own-lsp-purges"},
			map[string]interface{}{},
			n,
		),
	}
}

// PartChanges (leaf): The number of partition changes detected. MIB Entry: SysPartChanges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/part-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/part-changes"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) PartChanges() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "part-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// PartChanges (leaf): The number of partition changes detected. MIB Entry: SysPartChanges.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/part-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/part-changes"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) PartChanges() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_PartChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "part-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// SeqNumSkips (leaf): Number of times a sequence number skip has occurred. MIB Entry:
// SysSeqNumSkips.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/seq-num-skips"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/seq-num-skips"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) SeqNumSkips() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "seq-num-skips"},
			map[string]interface{}{},
			n,
		),
	}
}

// SeqNumSkips (leaf): Number of times a sequence number skip has occurred. MIB Entry:
// SysSeqNumSkips.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/seq-num-skips"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/seq-num-skips"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) SeqNumSkips() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SeqNumSkipsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "seq-num-skips"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfRuns (leaf): The number of times SPF was ran at this level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-runs"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/spf-runs"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPath) SpfRuns() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPath {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-runs"},
			map[string]interface{}{},
			n,
		),
	}
}

// SpfRuns (leaf): The number of times SPF was ran at this level.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/spf-runs"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/system-level-counters/state/spf-runs"
func (n *NetworkInstance_Protocol_Isis_Level_SystemLevelCountersPathAny) SpfRuns() *NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPathAny {
	return &NetworkInstance_Protocol_Isis_Level_SystemLevelCounters_SpfRunsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "spf-runs"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/enabled YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv4-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv4-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv6-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv6-router-id YANG schema element.
type NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath) Enabled() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this leaf is
// defined is enabled, when set to false it is explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/enabled"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny) Enabled() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4RouterId (leaf): IPv4 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv4-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv4-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath) Ipv4RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv4-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4RouterId (leaf): IPv4 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv4-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv4-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny) Ipv4RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv4RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv4-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6RouterId (leaf): IPv6 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv6-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPath) Ipv6RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6RouterId (leaf): IPv6 MPLS Traffic Engineering Router-ID.
// ----------------------------------------
// Defining module: "openconfig-isis"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/isis/levels/level/traffic-engineering/state/ipv6-router-id"
func (n *NetworkInstance_Protocol_Isis_Level_TrafficEngineeringPathAny) Ipv6RouterId() *NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny {
	return &NetworkInstance_Protocol_Isis_Level_TrafficEngineering_Ipv6RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2Path represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2 YANG schema element.
type NetworkInstance_Protocol_Ospfv2Path struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2PathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2 YANG schema element.
type NetworkInstance_Protocol_Ospfv2PathAny struct {
	*ygot.NodePath
}

// AreaAny (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2Path) AreaAny() *NetworkInstance_Protocol_Ospfv2_AreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_AreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": "*"},
			n,
		),
	}
}

// AreaAny (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2PathAny) AreaAny() *NetworkInstance_Protocol_Ospfv2_AreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_AreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": "*"},
			n,
		),
	}
}

// Area (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2Path) Area(Identifier oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_AreaPath {
	return &NetworkInstance_Protocol_Ospfv2_AreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": Identifier},
			n,
		),
	}
}

// Area (list): The OSPFv2 areas within which the local system exists
// ----------------------------------------
// Defining module: "openconfig-ospfv2"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "areas/area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area"
// Identifier: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2PathAny) Area(Identifier oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_AreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_AreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"areas", "area"},
			map[string]interface{}{"identifier": Identifier},
			n,
		),
	}
}

// Global (container): Configuration and operational state parameters for settings
// that are global to the OSPFv2 instance
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global"
func (n *NetworkInstance_Protocol_Ospfv2Path) Global() *NetworkInstance_Protocol_Ospfv2_GlobalPath {
	return &NetworkInstance_Protocol_Ospfv2_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): Configuration and operational state parameters for settings
// that are global to the OSPFv2 instance
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global"
func (n *NetworkInstance_Protocol_Ospfv2PathAny) Global() *NetworkInstance_Protocol_Ospfv2_GlobalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_AreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_AreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_AreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_AreaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/state/identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/state/identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny struct {
	*ygot.NodePath
}

// Identifier (leaf): An identifier for the OSPFv2 area - described as either a
// 32-bit unsigned integer, or a dotted-quad
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/state/identifier"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Identifier() *NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_IdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// Identifier (leaf): An identifier for the OSPFv2 area - described as either a
// 32-bit unsigned integer, or a dotted-quad
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/state/identifier"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Identifier() *NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_IdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) InterfaceAny() *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) InterfaceAny() *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// Interface (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Interface(Id string) *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Interface (list): List of interfaces which are enabled within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface"
// Id: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Interface(Id string) *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Lsdb (container): The link-state database for the OSPFv2 area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsdb"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Lsdb() *NetworkInstance_Protocol_Ospfv2_Area_LsdbPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_LsdbPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsdb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Lsdb (container): The link-state database for the OSPFv2 area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsdb"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Lsdb() *NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsdb"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for OSPFv2
// extensions relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_MplsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for OSPFv2
// extensions relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// VirtualLinkAny (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) VirtualLinkAny() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": "*"},
			n,
		),
	}
}

// VirtualLinkAny (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) VirtualLinkAny() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": "*"},
			n,
		),
	}
}

// VirtualLink (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPath) VirtualLink(RemoteRouterId string) *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": RemoteRouterId},
			n,
		),
	}
}

// VirtualLink (list): Configuration and state parameters relating to a
// virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "virtual-links/virtual-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link"
// RemoteRouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_AreaPathAny) VirtualLink(RemoteRouterId string) *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"virtual-links", "virtual-link"},
			map[string]interface{}{"remote-router-id": RemoteRouterId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/authentication-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/authentication-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/hide-network YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/hide-network YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/multi-area-adjacency-primary YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/multi-area-adjacency-primary YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/network-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/network-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/passive YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/passive YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny struct {
	*ygot.NodePath
}

// AuthenticationType (leaf): The type of authentication that should be used on this
// interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/authentication-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) AuthenticationType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationType (leaf): The type of authentication that should be used on this
// interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/authentication-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) AuthenticationType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_AuthenticationTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) EnableBfd() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) EnableBfd() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideNetwork (leaf): When this leaf is set to true, the network connected to
// the interface should be hidden from OSPFv2 advertisements
// per the procedure described in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hide-network"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/hide-network"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) HideNetwork() *NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hide-network"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideNetwork (leaf): When this leaf is set to true, the network connected to
// the interface should be hidden from OSPFv2 advertisements
// per the procedure described in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hide-network"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/hide-network"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) HideNetwork() *NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_HideNetworkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hide-network"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): An operator-specified string utilised to uniquely
// reference this interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Id() *NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): An operator-specified string utilised to uniquely
// reference this interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Id() *NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaFilter (container): OSPFv2 parameters relating to filtering of LSAs to
// neighbors the specified interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) LsaFilter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaFilter (container): OSPFv2 parameters relating to filtering of LSAs to
// neighbors the specified interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-filter"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) LsaFilter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-filter"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric for the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric for the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for
// OSPFv2 extensions related to MPLS on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): Configuration and operational state parameters for
// OSPFv2 extensions related to MPLS on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Mpls() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiAreaAdjacencyPrimary (leaf): When the specified interface is included in more than one
// area's configuration, this leaf marks whether the area should
// be considered the primary (when the value is true). In the
// case that this value is false, the area is considered a
// secondary area.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-area-adjacency-primary"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/multi-area-adjacency-primary"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) MultiAreaAdjacencyPrimary() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-area-adjacency-primary"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiAreaAdjacencyPrimary (leaf): When the specified interface is included in more than one
// area's configuration, this leaf marks whether the area should
// be considered the primary (when the value is true). In the
// case that this value is false, the area is considered a
// secondary area.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-area-adjacency-primary"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/multi-area-adjacency-primary"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) MultiAreaAdjacencyPrimary() *NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_MultiAreaAdjacencyPrimaryPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-area-adjacency-primary"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAny (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) NeighborAny() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": "*"},
			n,
		),
	}
}

// NeighborAny (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) NeighborAny() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": "*"},
			n,
		),
	}
}

// Neighbor (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Neighbor(RouterId string) *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": RouterId},
			n,
		),
	}
}

// Neighbor (list): A neighbor with which an OSPFv2 adjacency has been
// established within this area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor"
// RouterId: string
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Neighbor(RouterId string) *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"router-id": RouterId},
			n,
		),
	}
}

// NetworkType (leaf): The type of network that OSPFv2 should use for the specified
// interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/network-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) NetworkType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkType (leaf): The type of network that OSPFv2 should use for the specified
// interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/network-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) NetworkType() *NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_NetworkTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When this leaf is set to true, the interface should be
// advertised within the OSPF area but OSPF adjacencies should
// not be established over the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/passive"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Passive() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Passive (leaf): When this leaf is set to true, the interface should be
// advertised within the OSPF area but OSPF adjacencies should
// not be established over the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/passive"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/passive"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Passive() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PassivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "passive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The local system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The local system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers relating to OSPFv2 on the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePath) Timers() *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Timers relating to OSPFv2 on the interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers"
func (n *NetworkInstance_Protocol_Ospfv2_Area_InterfacePathAny) Timers() *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/state/all YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/state/all YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny struct {
	*ygot.NodePath
}

// All (leaf): When this leaf is set to true, all LSAs should be
// filtered to the neighbours with whom adjacencies are
// formed on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/all"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/state/all"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPath) All() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "all"},
			map[string]interface{}{},
			n,
		),
	}
}

// All (leaf): When this leaf is set to true, all LSAs should be
// filtered to the neighbours with whom adjacencies are
// formed on the interface.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/all"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/lsa-filter/state/all"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilterPathAny) All() *NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_LsaFilter_AllPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "all"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/state/traffic-engineering-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/state/traffic-engineering-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringMetric (leaf): A link metric that should only be considered for traffic
// engineering purposes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/state/traffic-engineering-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPath) TrafficEngineeringMetric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringMetric (leaf): A link metric that should only be considered for traffic
// engineering purposes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/state/traffic-engineering-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_MplsPathAny) TrafficEngineeringMetric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_TrafficEngineeringMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/synchronized YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/synchronized YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// Synchronized (leaf): When the value of this leaf is set to true, the
// LDP neighbors reachable via this interface are considered
// to be synchronized, and hence the link is considered
// usable by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/synchronized"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/synchronized"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPath) Synchronized() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "synchronized"},
			map[string]interface{}{},
			n,
		),
	}
}

// Synchronized (leaf): When the value of this leaf is set to true, the
// LDP neighbors reachable via this interface are considered
// to be synchronized, and hence the link is considered
// usable by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/synchronized"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/mpls/igp-ldp-sync/state/synchronized"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSyncPathAny) Synchronized() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Mpls_IgpLdpSync_SynchronizedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "synchronized"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/backup-designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/backup-designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/dead-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/dead-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/last-established-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/last-established-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/optional-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/optional-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/retransmission-queue-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/retransmission-queue-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/state-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/state-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPathAny struct {
	*ygot.NodePath
}

// AdjacencyState (leaf): The state of the adjacency with the neighbor.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/adjacency-state"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) AdjacencyState() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencyState (leaf): The state of the adjacency with the neighbor.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/adjacency-state"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) AdjacencyState() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_AdjacencyStatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// BackupDesignatedRouter (leaf): The backup designated router for the adjacency.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup-designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/backup-designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) BackupDesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup-designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BackupDesignatedRouter (leaf): The backup designated router for the adjacency.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup-designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/backup-designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) BackupDesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_BackupDesignatedRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup-designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTime (leaf): The time at which this neighbor's adjacency will be
// considered dead. The value is expressed relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/dead-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) DeadTime() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTime (leaf): The time at which this neighbor's adjacency will be
// considered dead. The value is expressed relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/dead-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) DeadTime() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DeadTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// DesignatedRouter (leaf): The designated router for the adjacency. This device
// advertises the Network LSA for broadcast and NBMA networks.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) DesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// DesignatedRouter (leaf): The designated router for the adjacency. This device
// advertises the Network LSA for broadcast and NBMA networks.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) DesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_DesignatedRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastEstablishedTime (leaf): The time at which the adjacency was last established with
// the neighbor. That is to say the time at which the
// adjacency last transitioned into the FULL state. The
// value is expressed relative to the Unix Epoch (Jan 1 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-established-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/last-established-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) LastEstablishedTime() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-established-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastEstablishedTime (leaf): The time at which the adjacency was last established with
// the neighbor. That is to say the time at which the
// adjacency last transitioned into the FULL state. The
// value is expressed relative to the Unix Epoch (Jan 1 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-established-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/last-established-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) LastEstablishedTime() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_LastEstablishedTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-established-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric that should be considered to the remote neighbor
// over this interface. This configuration is only applicable
// for multiple-access networks
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric that should be considered to the remote neighbor
// over this interface. This configuration is only applicable
// for multiple-access networks
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// OptionalCapabilities (leaf): The optional capabilities field received in the Hello
// message from the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/optional-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) OptionalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// OptionalCapabilities (leaf): The optional capabilities field received in the Hello
// message from the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/optional-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) OptionalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_OptionalCapabilitiesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The remote system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The remote system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionQueueLength (leaf): The number of LSAs that are currently in the queue to be
// retransmitted to the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmission-queue-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/retransmission-queue-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) RetransmissionQueueLength() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmission-queue-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionQueueLength (leaf): The number of LSAs that are currently in the queue to be
// retransmitted to the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmission-queue-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/retransmission-queue-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) RetransmissionQueueLength() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RetransmissionQueueLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmission-queue-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The router ID of the remote system.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The router ID of the remote system.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateChanges (leaf): The number of transitions out of the FULL state that this
// neighbor has been through
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/state-changes"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPath) StateChanges() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateChanges (leaf): The number of transitions out of the FULL state that this
// neighbor has been through
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/neighbors/neighbor/state/state-changes"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_NeighborPathAny) StateChanges() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Neighbor_StateChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/dead-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/dead-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/retransmission-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/retransmission-interval YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny struct {
	*ygot.NodePath
}

// DeadInterval (leaf): The number of seconds that the local system should let
// elapse before declaring a silent router down
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/dead-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath) DeadInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadInterval (leaf): The number of seconds that the local system should let
// elapse before declaring a silent router down
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/dead-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny) DeadInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_DeadIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): The number of seconds the local system waits between the
// transmission of subsequent Hello packets
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/hello-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath) HelloInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): The number of seconds the local system waits between the
// transmission of subsequent Hello packets
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/hello-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny) HelloInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionInterval (leaf): The number of seconds that the local system waits before
// retransmitting an unacknowledged LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmission-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/retransmission-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPath) RetransmissionInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmission-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionInterval (leaf): The number of seconds that the local system waits before
// retransmitting an unacknowledged LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmission-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/interfaces/interface/timers/state/retransmission-interval"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Interface_TimersPathAny) RetransmissionInterval() *NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Interface_Timers_RetransmissionIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmission-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_LsdbPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_LsdbPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/state/identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/state/identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPathAny struct {
	*ygot.NodePath
}

// Identifier (leaf): An identifier for the area, expressed as a dotted quad or
// an unsigned 32-bit integer
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/state/identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_LsdbPath) Identifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// Identifier (leaf): An identifier for the area, expressed as a dotted quad or
// an unsigned 32-bit integer
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/state/identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny) Identifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_IdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaTypeAny (list): List of LSA types in the LSDB for the specified
// area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-types/lsa-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type"
// Type (wildcarded): oc.E_OspfTypes_OSPF_LSA_TYPE
func (n *NetworkInstance_Protocol_Ospfv2_Area_LsdbPath) LsaTypeAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-types", "lsa-type"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// LsaTypeAny (list): List of LSA types in the LSDB for the specified
// area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-types/lsa-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type"
// Type (wildcarded): oc.E_OspfTypes_OSPF_LSA_TYPE
func (n *NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny) LsaTypeAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-types", "lsa-type"},
			map[string]interface{}{"type": "*"},
			n,
		),
	}
}

// LsaType (list): List of LSA types in the LSDB for the specified
// area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-types/lsa-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type"
// Type: oc.E_OspfTypes_OSPF_LSA_TYPE
func (n *NetworkInstance_Protocol_Ospfv2_Area_LsdbPath) LsaType(Type oc.E_OspfTypes_OSPF_LSA_TYPE) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-types", "lsa-type"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// LsaType (list): List of LSA types in the LSDB for the specified
// area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-types/lsa-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type"
// Type: oc.E_OspfTypes_OSPF_LSA_TYPE
func (n *NetworkInstance_Protocol_Ospfv2_Area_LsdbPathAny) LsaType(Type oc.E_OspfTypes_OSPF_LSA_TYPE) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-types", "lsa-type"},
			map[string]interface{}{"type": Type},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePathAny struct {
	*ygot.NodePath
}

// LsaAny (list): List of the LSAs of a specified type in the
// LSDB for the specified area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsas/lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa"
// LinkStateId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath) LsaAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsas", "lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
}

// LsaAny (list): List of the LSAs of a specified type in the
// LSDB for the specified area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsas/lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa"
// LinkStateId (wildcarded): string
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny) LsaAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsas", "lsa"},
			map[string]interface{}{"link-state-id": "*"},
			n,
		),
	}
}

// Lsa (list): List of the LSAs of a specified type in the
// LSDB for the specified area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsas/lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa"
// LinkStateId: string
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath) Lsa(LinkStateId string) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsas", "lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
}

// Lsa (list): List of the LSAs of a specified type in the
// LSDB for the specified area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsas/lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa"
// LinkStateId: string
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny) Lsa(LinkStateId string) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsas", "lsa"},
			map[string]interface{}{"link-state-id": LinkStateId},
			n,
		),
	}
}

// Type (leaf): The type of LSA being described. The type of the LSA is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of LSA being described. The type of the LSA is
// expressed as a canonical name.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaTypePathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/advertising-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/advertising-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/age YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/age YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/checksum YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/checksum YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/link-state-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/link-state-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/sequence-number YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/sequence-number YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPathAny struct {
	*ygot.NodePath
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertising-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/advertising-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) AdvertisingRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdvertisingRouter (leaf): The router ID of the router that originated the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/advertising-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/advertising-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) AdvertisingRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AdvertisingRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "advertising-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// Age (leaf): The time since the LSA's generation in seconds
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/age"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/age"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) Age() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
	}
}

// Age (leaf): The time since the LSA's generation in seconds
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/age"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/age"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) Age() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AgePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "age"},
			map[string]interface{}{},
			n,
		),
	}
}

// AsExternalLsa (container): Contents of the AS External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "as-external-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) AsExternalLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"as-external-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// AsExternalLsa (container): Contents of the AS External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "as-external-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) AsExternalLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"as-external-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// Checksum (leaf): The checksum of the complete contents of the LSA excluding
// the age field.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/checksum"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/checksum"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) Checksum() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "checksum"},
			map[string]interface{}{},
			n,
		),
	}
}

// Checksum (leaf): The checksum of the complete contents of the LSA excluding
// the age field.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/checksum"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/checksum"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) Checksum() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_ChecksumPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "checksum"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkStateId (leaf): The Link State ID for the specified LSA type. The exact
// defined value of the Link State ID is dependent on the LSA
// type.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-state-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/link-state-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) LinkStateId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-state-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkStateId (leaf): The Link State ID for the specified LSA type. The exact
// defined value of the Link State ID is dependent on the LSA
// type.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-state-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/link-state-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) LinkStateId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_LinkStateIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-state-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkLsa (container): Contents of the network LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "network-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) NetworkLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"network-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkLsa (container): Contents of the network LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "network-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) NetworkLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"network-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// NssaExternalLsa (container): Contents of the NSSA External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nssa-external-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) NssaExternalLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"nssa-external-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// NssaExternalLsa (container): Contents of the NSSA External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "nssa-external-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) NssaExternalLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"nssa-external-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// OpaqueLsa (container): Contents of the opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "opaque-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) OpaqueLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"opaque-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// OpaqueLsa (container): Contents of the opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "opaque-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) OpaqueLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"opaque-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterLsa (container): Contents of the router LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) RouterLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"router-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterLsa (container): Contents of the router LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) RouterLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"router-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// SequenceNumber (leaf): A signed 32-bit integer used to detect old and duplicate
// LSAs. The greater the sequence number the more recent the
// LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sequence-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/sequence-number"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) SequenceNumber() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// SequenceNumber (leaf): A signed 32-bit integer used to detect old and duplicate
// LSAs. The greater the sequence number the more recent the
// LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sequence-number"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/state/sequence-number"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) SequenceNumber() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SequenceNumberPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sequence-number"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryLsa (container): Contents of the summary LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "summary-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPath) SummaryLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"summary-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryLsa (container): Contents of the summary LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "summary-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_LsaPathAny) SummaryLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"summary-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePathAny struct {
	*ygot.NodePath
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ExternalRouteTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_ForwardingAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mask (leaf): The subnet mask for the advertised destination
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) Mask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mask (leaf): The subnet mask for the advertised destination
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) Mask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost to reach the external network specified. The exact
// interpretation of this cost is dependent on the type of
// metric specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost to reach the external network specified. The exact
// interpretation of this cost is dependent on the type of
// metric specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricType (leaf): The type of metric included within the AS External LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) MetricType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricType (leaf): The type of metric included within the AS External LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/state/metric-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) MetricType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_MetricTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the AS External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the AS External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the AS External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPath) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the AS External LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsaPathAny) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPathAny struct {
	*ygot.NodePath
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ExternalRouteTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_ForwardingAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePath) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/as-external-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfServicePathAny) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_AsExternalLsa_TypeOfService_TosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/attached-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/attached-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/network-mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/network-mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPathAny struct {
	*ygot.NodePath
}

// AttachedRouter (leaf-list): A list of the router ID of the routers that are attached to
// the network described by the Network LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attached-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/attached-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPath) AttachedRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attached-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// AttachedRouter (leaf-list): A list of the router ID of the routers that are attached to
// the network described by the Network LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attached-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/attached-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPathAny) AttachedRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_AttachedRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attached-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkMask (leaf): The mask of the network described by the Network LSA
// represented as a CIDR mask.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/network-mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPath) NetworkMask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkMask (leaf): The mask of the network described by the Network LSA
// represented as a CIDR mask.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/network-lsa/state/network-mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsaPathAny) NetworkMask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NetworkLsa_NetworkMaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/propagate YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/propagate YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePathAny struct {
	*ygot.NodePath
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ExternalRouteTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_ForwardingAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mask (leaf): The subnet mask for the advertised destination
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) Mask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mask (leaf): The subnet mask for the advertised destination
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) Mask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost to reach the external network specified. The exact
// interpretation of this cost is dependent on the type of
// metric specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost to reach the external network specified. The exact
// interpretation of this cost is dependent on the type of
// metric specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricType (leaf): The type of metric included within the AS External LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) MetricType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// MetricType (leaf): The type of metric included within the AS External LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/metric-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) MetricType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_MetricTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Propagate (leaf): When this bit is set to true, an NSSA border router will
// translate a Type 7 LSA (NSSA External) to a Type 5 LSA
// (AS External).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/propagate"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/propagate"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) Propagate() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "propagate"},
			map[string]interface{}{},
			n,
		),
	}
}

// Propagate (leaf): When this bit is set to true, an NSSA border router will
// translate a Type 7 LSA (NSSA External) to a Type 5 LSA
// (AS External).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/propagate"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/state/propagate"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) Propagate() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_PropagatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "propagate"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the NSSA external LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the NSSA external LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the NSSA external LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPath) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the NSSA external LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsaPathAny) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/external-route-tag YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/forwarding-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPathAny struct {
	*ygot.NodePath
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExternalRouteTag (leaf): An opaque tag that set by the LSA originator to carry
// information relating to the external route
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/external-route-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/external-route-tag"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny) ExternalRouteTag() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ExternalRouteTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "external-route-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// ForwardingAddress (leaf): The destination to which traffic for the external prefix
// should be advertised. When this value is set to 0.0.0.0 then
// traffic should be forwarded to the LSA's originator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/forwarding-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/forwarding-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny) ForwardingAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_ForwardingAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "forwarding-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePath) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/nssa-external-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfServicePathAny) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_NssaExternalLsa_TypeOfService_TosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/scope YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/scope YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePathAny struct {
	*ygot.NodePath
}

// ExtendedLink (container): The OSPFv2 Extended Link Opaque LSA, used to encapsulate TLV
// attributes associated with a link advertised in OSPF.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) ExtendedLink() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-link"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedLink (container): The OSPFv2 Extended Link Opaque LSA, used to encapsulate TLV
// attributes associated with a link advertised in OSPF.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) ExtendedLink() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-link"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedPrefix (container): An OSPFv2 Extended Prefix Opaque LSA, used to encapsulate
// TLV attributes associated with a prefix advertised in OSPF.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) ExtendedPrefix() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedPrefix (container): An OSPFv2 Extended Prefix Opaque LSA, used to encapsulate
// TLV attributes associated with a prefix advertised in OSPF.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) ExtendedPrefix() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// GraceLsa (container): The Grace LSA is utilised when a remote system is undergoing
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "grace-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) GraceLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPath{
		NodePath: ygot.NewNodePath(
			[]string{"grace-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// GraceLsa (container): The Grace LSA is utilised when a remote system is undergoing
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "grace-lsa"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) GraceLsa() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"grace-lsa"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterInformation (container): The router information LSA is utilised to advertise capabilities
// of a system to other systems who receive the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-information"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) RouterInformation() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPath{
		NodePath: ygot.NewNodePath(
			[]string{"router-information"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterInformation (container): The router information LSA is utilised to advertise capabilities
// of a system to other systems who receive the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-information"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) RouterInformation() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"router-information"},
			map[string]interface{}{},
			n,
		),
	}
}

// Scope (leaf): The scope of the opaque LSA. The type of the LSA
// indicates its scope - the value of this leaf
// determines both the flooding domain, and the type
// of the LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/scope"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/scope"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) Scope() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "scope"},
			map[string]interface{}{},
			n,
		),
	}
}

// Scope (leaf): The scope of the opaque LSA. The type of the LSA
// indicates its scope - the value of this leaf
// determines both the flooding domain, and the type
// of the LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/scope"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/scope"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) Scope() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ScopePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "scope"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (container): Contents of the Traffic Engineering Opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) TrafficEngineering() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPath{
		NodePath: ygot.NewNodePath(
			[]string{"traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (container): Contents of the Traffic Engineering Opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) TrafficEngineering() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The Opaque Type of the LSA. This value is used to
// indicate the type of data carried by the opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The Opaque Type of the LSA. This value is used to
// indicate the type of data carried by the opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsaPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-data YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-data YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePathAny struct {
	*ygot.NodePath
}

// LinkData (leaf): The data associated with the link type. The value is
// dependent upon the subtype of the LSA. When the connection is
// to a stub network it represents the mask; for p2p connections
// that are unnumbered it represents the ifIndex value of the
// router's interface; for all other connections it represents
// the local system's IP address
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-data"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-data"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath) LinkData() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-data"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkData (leaf): The data associated with the link type. The value is
// dependent upon the subtype of the LSA. When the connection is
// to a stub network it represents the mask; for p2p connections
// that are unnumbered it represents the ifIndex value of the
// router's interface; for all other connections it represents
// the local system's IP address
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-data"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-data"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny) LinkData() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkDataPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-data"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (leaf): The identifier for the link specified. The value of the link
// identifier is dependent upon the type of the LSA. The value is
// specified to be, per sub-type:
//  1. Neighbouring router's router ID.
//  2. IP address of DR.
//  3. IP network address.
//  4. Neighbouring router router's ID.
//
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (leaf): The identifier for the link specified. The value of the link
// identifier is dependent upon the type of the LSA. The value is
// specified to be, per sub-type:
//  1. Neighbouring router's router ID.
//  2. IP address of DR.
//  3. IP network address.
//  4. Neighbouring router router's ID.
//
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkType (leaf): The type of link with which extended attributes are associated
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPath) LinkType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkType (leaf): The type of link with which extended attributes are associated
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/state/link-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLinkPathAny) LinkType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_LinkTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// AdjacencySid (container): Parameters relating to an Adjacency SID sub-TLV of the
// extended link LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPath) AdjacencySid() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencySid (container): Parameters relating to an Adjacency SID sub-TLV of the
// extended link LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "adjacency-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPathAny) AdjacencySid() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"adjacency-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV contained within the extended link TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV contained within the extended link TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/backup YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/backup YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/group YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/group YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/multi-topology-identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/multi-topology-identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/weight YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPathAny struct {
	*ygot.NodePath
}

// Backup (leaf): When this flag is set, it indicates that the adjacency SID refers to
// an adjacency which is eligible for protection
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/backup"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath) Backup() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup"},
			map[string]interface{}{},
			n,
		),
	}
}

// Backup (leaf): When this flag is set, it indicates that the adjacency SID refers to
// an adjacency which is eligible for protection
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/backup"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny) Backup() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_BackupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): When this flag is set it indicates that the adjacency SID refers to
// a group of adjacencies that have a common value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/group"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath) Group() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): When this flag is set it indicates that the adjacency SID refers to
// a group of adjacencies that have a common value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/group"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny) Group() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopologyIdentifier (leaf): The multi-topology identifier with which the adjacency SID is
// associated
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology-identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/multi-topology-identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath) MultiTopologyIdentifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopologyIdentifier (leaf): The multi-topology identifier with which the adjacency SID is
// associated
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology-identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/multi-topology-identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny) MultiTopologyIdentifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_MultiTopologyIdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidType (leaf): The type of the value contained within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath) SidType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidType (leaf): The type of the value contained within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny) SidType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the binding included within the sub-TLV. The type of
// this binding is indicated by the type leaf.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the binding included within the sub-TLV. The type of
// this binding is indicated by the type leaf.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_SidValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the Adjacency SID when used for load-balancing
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPath) Weight() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the Adjacency SID when used for load-balancing
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/adjacency-sid/state/weight"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySidPathAny) Weight() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_AdjacencySid_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-link/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedLink_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/address-family YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/address-family YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/attached YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/attached YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/node YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/node YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/route-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/route-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family of the prefix contained in the Extended Prefix
// LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/address-family"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath) AddressFamily() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family of the prefix contained in the Extended Prefix
// LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/address-family"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny) AddressFamily() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// Attached (leaf): If this value is set to true, the prefix being advertised was
// generated by an ABR for an inter-area prefix. The value corresponds
// to the A-flag of the flags field of the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attached"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/attached"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath) Attached() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attached"},
			map[string]interface{}{},
			n,
		),
	}
}

// Attached (leaf): If this value is set to true, the prefix being advertised was
// generated by an ABR for an inter-area prefix. The value corresponds
// to the A-flag of the flags field of the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/attached"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/attached"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny) Attached() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_AttachedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "attached"},
			map[string]interface{}{},
			n,
		),
	}
}

// Node (leaf): If this value is set to true, the prefix being advertised represents
// the advertising router. Typically, the prefix within the LSA is
// expected to be globally-reachable prefix associated with a loopback
// interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/node"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/node"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath) Node() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "node"},
			map[string]interface{}{},
			n,
		),
	}
}

// Node (leaf): If this value is set to true, the prefix being advertised represents
// the advertising router. Typically, the prefix within the LSA is
// expected to be globally-reachable prefix associated with a loopback
// interface
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/node"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/node"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny) Node() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_NodePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "node"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IPv4 prefix contained within the extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath) Prefix() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The IPv4 prefix contained within the extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny) Prefix() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLength (leaf): The length of the IPv4 prefix contained in the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath) PrefixLength() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLength (leaf): The length of the IPv4 prefix contained in the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/prefix-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny) PrefixLength() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_PrefixLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteType (leaf): The type of prefix that is contained within the Extended Prefix LSA.
// The information contained in sub-TLVs of the attribute is applicable
// regardless of this value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/route-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/route-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPath) RouteType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "route-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouteType (leaf): The type of prefix that is contained within the Extended Prefix LSA.
// The information contained in sub-TLVs of the attribute is applicable
// regardless of this value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/route-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/state/route-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefixPathAny) RouteType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_RouteTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "route-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// ExtendedPrefixRange (container): State parameters relating to the extended prefix range
// sub-TLV of the extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-prefix-range"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath) ExtendedPrefixRange() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath{
		NodePath: ygot.NewNodePath(
			[]string{"extended-prefix-range"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExtendedPrefixRange (container): State parameters relating to the extended prefix range
// sub-TLV of the extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "extended-prefix-range"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny) ExtendedPrefixRange() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"extended-prefix-range"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixSid (container): State parameters relating to the Prefix SID sub-TLV of the
// extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath) PrefixSid() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixSid (container): State parameters relating to the Prefix SID sub-TLV of the
// extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "prefix-sid"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny) PrefixSid() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"prefix-sid"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabelBinding (container): State parameters relating to the SID/Label binding sub-TLV
// of the extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label-binding"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath) SidLabelBinding() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label-binding"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabelBinding (container): State parameters relating to the SID/Label binding sub-TLV
// of the extended prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label-binding"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny) SidLabelBinding() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label-binding"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV as indicated by the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV as indicated by the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/address-family YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/address-family YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/inter-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/inter-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/range-size YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/range-size YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family of the prefix contained in the Extended Prefix
// LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/address-family"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath) AddressFamily() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family of the prefix contained in the Extended Prefix
// LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/address-family"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny) AddressFamily() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterArea (leaf): When this leaf is set to true, then the prefix range is inter-area -
// the flag is set by the ABR that advertises the Extended Prefix Range
// TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/inter-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/inter-area"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath) InterArea() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "inter-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterArea (leaf): When this leaf is set to true, then the prefix range is inter-area -
// the flag is set by the ABR that advertises the Extended Prefix Range
// TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/inter-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/inter-area"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny) InterArea() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_InterAreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "inter-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The first prefix in the range of prefixes being described by the
// extended prefix range sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath) Prefix() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): The first prefix in the range of prefixes being described by the
// extended prefix range sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny) Prefix() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLength (leaf): The length of the IPv4 prefix contained in the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath) PrefixLength() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// PrefixLength (leaf): The length of the IPv4 prefix contained in the Extended Prefix LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/prefix-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny) PrefixLength() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_PrefixLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// RangeSize (leaf): The number of prefixes that are covered by the advertisement.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/range-size"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePath) RangeSize() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// RangeSize (leaf): The number of prefixes that are covered by the advertisement.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/extended-prefix-range/state/range-size"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRangePathAny) RangeSize() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_ExtendedPrefixRange_RangeSizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/algorithm YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/explicit-null YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/explicit-null YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/mapping-server YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/mapping-server YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/multi-topology-identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/multi-topology-identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/no-php YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/no-php YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-scope YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-scope YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePathAny struct {
	*ygot.NodePath
}

// Algorithm (leaf): The algorithm that computes the path associated with the Prefix SID
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) Algorithm() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Algorithm (leaf): The algorithm that computes the path associated with the Prefix SID
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/algorithm"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) Algorithm() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_AlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExplicitNull (leaf): If this leaf is set, the advertising system has requested that the
// prefix SID value should be replaced with the explicit null label
// value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/explicit-null"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/explicit-null"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) ExplicitNull() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "explicit-null"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExplicitNull (leaf): If this leaf is set, the advertising system has requested that the
// prefix SID value should be replaced with the explicit null label
// value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/explicit-null"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/explicit-null"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) ExplicitNull() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_ExplicitNullPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "explicit-null"},
			map[string]interface{}{},
			n,
		),
	}
}

// MappingServer (leaf): If this leaf is set the SID was advertised by a Segment Routing
// mapping server
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mapping-server"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/mapping-server"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) MappingServer() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mapping-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// MappingServer (leaf): If this leaf is set the SID was advertised by a Segment Routing
// mapping server
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mapping-server"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/mapping-server"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) MappingServer() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MappingServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mapping-server"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopologyIdentifier (leaf): The identifier for the topology to which the Prefix SID relates. The
// value of this leaf is a MT-ID as defined in RFC4915
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology-identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/multi-topology-identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) MultiTopologyIdentifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopologyIdentifier (leaf): The identifier for the topology to which the Prefix SID relates. The
// value of this leaf is a MT-ID as defined in RFC4915
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology-identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/multi-topology-identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) MultiTopologyIdentifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_MultiTopologyIdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// NoPhp (leaf): If this leaf is set the advertising system has indicated that the
// prefix SID must not be popped before delivering packets to it
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/no-php"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/no-php"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) NoPhp() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "no-php"},
			map[string]interface{}{},
			n,
		),
	}
}

// NoPhp (leaf): If this leaf is set the advertising system has indicated that the
// prefix SID must not be popped before delivering packets to it
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/no-php"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/no-php"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) NoPhp() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_NoPhpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "no-php"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidScope (leaf): Specifies the scope of the SID advertisement within the Prefix SID
// sub-TLV. The scope of the SID is independent of whether the SID
// contained is an index, or an absolute value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-scope"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-scope"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) SidScope() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-scope"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidScope (leaf): Specifies the scope of the SID advertisement within the Prefix SID
// sub-TLV. The scope of the SID is independent of whether the SID
// contained is an index, or an absolute value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-scope"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-scope"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) SidScope() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidScopePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-scope"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the Prefix SID. The meaning of this value is dependent
// upon the type of SID, and its scope. The value contained is either a
// 32-bit value indicating the index of the SID, or a 24-bit label where
// the 20 right-most bits are used for encoding the label value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the Prefix SID. The meaning of this value is dependent
// upon the type of SID, and its scope. The value contained is either a
// 32-bit value indicating the index of the SID, or a 24-bit label where
// the 20 right-most bits are used for encoding the label value
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValueType (leaf): Specifies the type of the value specified within the Prefix SID
// sub-TLV - in particular, whether the value is an index or an
// absolute value. This value corresponds with the V-flag of the Prefix
// SID sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPath) SidValueType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValueType (leaf): Specifies the type of the value specified within the Prefix SID
// sub-TLV - in particular, whether the value is an index or an
// absolute value. This value corresponds with the V-flag of the Prefix
// SID sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/prefix-sid/state/sid-value-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSidPathAny) SidValueType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_PrefixSid_SidValueTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/mirroring YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/mirroring YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/multi-topology-identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/multi-topology-identifier YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/weight YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/weight YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPathAny struct {
	*ygot.NodePath
}

// Mirroring (leaf): When set to true, this indicates that the SID/Label Binding sub-TLV
// entries contained within this TLV are indicative of a mirroring
// context
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mirroring"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/mirroring"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath) Mirroring() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mirroring"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mirroring (leaf): When set to true, this indicates that the SID/Label Binding sub-TLV
// entries contained within this TLV are indicative of a mirroring
// context
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mirroring"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/mirroring"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny) Mirroring() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MirroringPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mirroring"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopologyIdentifier (leaf): The identifier for the topology to which the SID/Label Binding
// sub-TLV is associated. The value of this leaf is a MT-ID as defined
// in RFC4915
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology-identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/multi-topology-identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath) MultiTopologyIdentifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// MultiTopologyIdentifier (leaf): The identifier for the topology to which the SID/Label Binding
// sub-TLV is associated. The value of this leaf is a MT-ID as defined
// in RFC4915
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multi-topology-identifier"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/multi-topology-identifier"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny) MultiTopologyIdentifier() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_MultiTopologyIdentifierPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multi-topology-identifier"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the advertised binding when used for load-balancing
// purposes
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/weight"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPath) Weight() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the advertised binding when used for load-balancing
// purposes
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/state/weight"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBindingPathAny) Weight() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// EroMetric (container): Parameters for the ERO Metric Sub-TLV of the SID/Label
// binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ero-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPath) EroMetric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"ero-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// EroMetric (container): Parameters for the ERO Metric Sub-TLV of the SID/Label
// binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ero-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPathAny) EroMetric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ero-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// EroPath (container): Parameters for the ERO Path Sub-TLV of the SID/Label
// binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ero-path"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPath) EroPath() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPath{
		NodePath: ygot.NewNodePath(
			[]string{"ero-path"},
			map[string]interface{}{},
			n,
		),
	}
}

// EroPath (container): Parameters for the ERO Path Sub-TLV of the SID/Label
// binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ero-path"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPathAny) EroPath() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ero-path"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabelBinding (container): Parameters for the SID/Label Binding sub-TLV of the
// SID/Label binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label-binding"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPath) SidLabelBinding() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label-binding"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabelBinding (container): Parameters for the SID/Label Binding sub-TLV of the
// SID/Label binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label-binding"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPathAny) SidLabelBinding() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label-binding"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV that is being contained within the SID/Label
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV that is being contained within the SID/Label
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): The metric representing the aggregate IGP or TE path cost for the
// binding included within the SID/Label Binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric representing the aggregate IGP or TE path cost for the
// binding included within the SID/Label Binding TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-metric/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetricPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroMetric_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/loose YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/loose YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePathAny struct {
	*ygot.NodePath
}

// Ipv4Segment (container): Details of the IPv4 segment interface of the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath) Ipv4Segment() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-segment"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv4Segment (container): Details of the IPv4 segment interface of the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ipv4-segment"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny) Ipv4Segment() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ipv4-segment"},
			map[string]interface{}{},
			n,
		),
	}
}

// Loose (leaf): If this leaf is set the segment is identifier as a loose path
// segment, otherwise the path strictly follows the path specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/loose"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/loose"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath) Loose() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "loose"},
			map[string]interface{}{},
			n,
		),
	}
}

// Loose (leaf): If this leaf is set the segment is identifier as a loose path
// segment, otherwise the path strictly follows the path specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/loose"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/loose"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny) Loose() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_LoosePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "loose"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the segment being specified as part of the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the segment being specified as part of the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnnumberedHop (container): Details of the unnumbered interface segment of the
// ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unnumbered-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPath) UnnumberedHop() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"unnumbered-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnnumberedHop (container): Details of the unnumbered interface segment of the
// ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unnumbered-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_SegmentPathAny) UnnumberedHop() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unnumbered-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment/state/address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment/state/address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf): The IPv4 address of the hop within the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment/state/address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPath) Address() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): The IPv4 address of the hop within the ERO
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/ipv4-segment/state/address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4SegmentPathAny) Address() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_Ipv4Segment_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPathAny struct {
	*ygot.NodePath
}

// InterfaceId (leaf): The identifier assigned to the link by the remote system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/interface-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath) InterfaceId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): The identifier assigned to the link by the remote system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/interface-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny) InterfaceId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The IPv4 router identtifier of the remote system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPath) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): The IPv4 router identtifier of the remote system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/ero-path/segments/segment/unnumbered-hop/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHopPathAny) RouterId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_EroPath_Segment_UnnumberedHop_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePathAny struct {
	*ygot.NodePath
}

// SidType (leaf): The type of the value contained within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath) SidType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidType (leaf): The type of the value contained within the sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny) SidType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the binding included within the sub-TLV. The type of
// this binding is indicated by the type leaf.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPath) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidValue (leaf): The value of the binding included within the sub-TLV. The type of
// this binding is indicated by the type leaf.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sid-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/sid-label-binding/tlvs/tlv/sid-label-binding/state/sid-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBindingPathAny) SidValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_SidLabelBinding_Tlv_SidLabelBinding_SidValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sid-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/extended-prefix/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_ExtendedPrefix_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/ip-interface-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/ip-interface-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/period YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/period YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/reason YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/reason YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// IpInterfaceAddress (leaf): The restarting system's IP address on the interface via which the
// Grace LSA is being advertised.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/ip-interface-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) IpInterfaceAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpInterfaceAddress (leaf): The restarting system's IP address on the interface via which the
// Grace LSA is being advertised.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-interface-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/ip-interface-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) IpInterfaceAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_IpInterfaceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-interface-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Period (leaf): The number of seconds that the router's neighbors should advertise
// the local system as fully adjacent regardless of database
// synchronization state
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/period"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/period"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) Period() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "period"},
			map[string]interface{}{},
			n,
		),
	}
}

// Period (leaf): The number of seconds that the router's neighbors should advertise
// the local system as fully adjacent regardless of database
// synchronization state
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/period"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/period"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) Period() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_PeriodPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "period"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reason (leaf): The reason for the graceful restart event occurring, as advertised
// by the restarting system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/reason"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) Reason() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// Reason (leaf): The reason for the graceful restart event occurring, as advertised
// by the restarting system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/reason"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/reason"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) Reason() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_ReasonPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV received within the Grace LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV received within the Grace LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/grace-lsa/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_GraceLsa_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// InformationalCapabilities (container): Information related to the capabilities of the advertising
// router within the scope that the opaque RI LSA is being
// advertised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "informational-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) InformationalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath{
		NodePath: ygot.NewNodePath(
			[]string{"informational-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// InformationalCapabilities (container): Information related to the capabilities of the advertising
// router within the scope that the opaque RI LSA is being
// advertised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "informational-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) InformationalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"informational-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// NodeAdministrativeTags (container): Per-node administrative tags associated with the local system
// specified by the operator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "node-administrative-tags"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) NodeAdministrativeTags() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"node-administrative-tags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NodeAdministrativeTags (container): Per-node administrative tags associated with the local system
// specified by the operator
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "node-administrative-tags"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) NodeAdministrativeTags() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"node-administrative-tags"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingAlgorithm (container): The algorithms supported for Segment Routing by the local system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) SegmentRoutingAlgorithm() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingAlgorithm (container): The algorithms supported for Segment Routing by the local system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-algorithm"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) SegmentRoutingAlgorithm() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-algorithm"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingSidLabelRange (container): The Segment Identifier (SID) or label ranges that are supported by
// the local system for Segment Routing
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-sid-label-range"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) SegmentRoutingSidLabelRange() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-sid-label-range"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentRoutingSidLabelRange (container): The Segment Identifier (SID) or label ranges that are supported by
// the local system for Segment Routing
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-routing-sid-label-range"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) SegmentRoutingSidLabelRange() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-routing-sid-label-range"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV of the Router Information opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of sub-TLV of the Router Information opaque LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/experimental-te YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/experimental-te YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-capable YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-capable YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-helper YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-helper YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/point-to-point-over-lan YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/point-to-point-over-lan YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/stub-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/stub-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPathAny struct {
	*ygot.NodePath
}

// ExperimentalTe (leaf): When this leaf is set to ture, the advertising system supports the
// experimental extensions to OSPF for TE described in RFC4973
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/experimental-te"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/experimental-te"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) ExperimentalTe() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "experimental-te"},
			map[string]interface{}{},
			n,
		),
	}
}

// ExperimentalTe (leaf): When this leaf is set to ture, the advertising system supports the
// experimental extensions to OSPF for TE described in RFC4973
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/experimental-te"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/experimental-te"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) ExperimentalTe() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_ExperimentalTePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "experimental-te"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestartCapable (leaf): When this leaf is set to true, the advertising system is capable of
// OSPF graceful restart.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/graceful-restart-capable"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-capable"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) GracefulRestartCapable() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "graceful-restart-capable"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestartCapable (leaf): When this leaf is set to true, the advertising system is capable of
// OSPF graceful restart.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/graceful-restart-capable"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-capable"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) GracefulRestartCapable() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartCapablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "graceful-restart-capable"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestartHelper (leaf): When this leaf is set to true, the advertising system is capable of
// being a helper for OSPF graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/graceful-restart-helper"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-helper"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) GracefulRestartHelper() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "graceful-restart-helper"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestartHelper (leaf): When this leaf is set to true, the advertising system is capable of
// being a helper for OSPF graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/graceful-restart-helper"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/graceful-restart-helper"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) GracefulRestartHelper() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_GracefulRestartHelperPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "graceful-restart-helper"},
			map[string]interface{}{},
			n,
		),
	}
}

// PointToPointOverLan (leaf): When this leaf is set to true, the advertising system supports treating
// LAN adjacencies as though they were point to point
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/point-to-point-over-lan"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/point-to-point-over-lan"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) PointToPointOverLan() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "point-to-point-over-lan"},
			map[string]interface{}{},
			n,
		),
	}
}

// PointToPointOverLan (leaf): When this leaf is set to true, the advertising system supports treating
// LAN adjacencies as though they were point to point
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/point-to-point-over-lan"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/point-to-point-over-lan"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) PointToPointOverLan() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_PointToPointOverLanPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "point-to-point-over-lan"},
			map[string]interface{}{},
			n,
		),
	}
}

// StubRouter (leaf): When this leaf is set to true, the advertising system is able to
// advertise its status as a stub router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/stub-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/stub-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) StubRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "stub-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// StubRouter (leaf): When this leaf is set to true, the advertising system is able to
// advertise its status as a stub router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/stub-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/stub-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) StubRouter() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_StubRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "stub-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (leaf): When this leaf is set to true, the advertising system supports OSPFv2
// traffic engineering capabilities
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/traffic-engineering"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPath) TrafficEngineering() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineering (leaf): When this leaf is set to true, the advertising system supports OSPFv2
// traffic engineering capabilities
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/informational-capabilities/state/traffic-engineering"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilitiesPathAny) TrafficEngineering() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_InformationalCapabilities_TrafficEngineeringPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags/state/administrative-tags YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags/state/administrative-tags YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPathAny struct {
	*ygot.NodePath
}

// AdministrativeTags (leaf-list): The set of administrative tags assigned to the local system by
// the network operator. The meaning of these tags is opaque to OSPF
// - and their interpretation is per-domain specific
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/administrative-tags"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags/state/administrative-tags"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPath) AdministrativeTags() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "administrative-tags"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdministrativeTags (leaf-list): The set of administrative tags assigned to the local system by
// the network operator. The meaning of these tags is opaque to OSPF
// - and their interpretation is per-domain specific
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/administrative-tags"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/node-administrative-tags/state/administrative-tags"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTagsPathAny) AdministrativeTags() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_NodeAdministrativeTags_AdministrativeTagsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "administrative-tags"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm/state/supported-algorithms YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm/state/supported-algorithms YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPathAny struct {
	*ygot.NodePath
}

// SupportedAlgorithms (leaf-list): A list of the algorithms that are supported for segment routing
// by the advertising system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/supported-algorithms"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm/state/supported-algorithms"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPath) SupportedAlgorithms() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supported-algorithms"},
			map[string]interface{}{},
			n,
		),
	}
}

// SupportedAlgorithms (leaf-list): A list of the algorithms that are supported for segment routing
// by the advertising system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/supported-algorithms"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-algorithm/state/supported-algorithms"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithmPathAny) SupportedAlgorithms() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingAlgorithm_SupportedAlgorithmsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "supported-algorithms"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRangePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/range-size YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/range-size YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// RangeSize (leaf): The number of entries within the range being described within the
// SID/Label range TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/range-size"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath) RangeSize() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// RangeSize (leaf): The number of entries within the range being described within the
// SID/Label range TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/range-size"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/range-size"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny) RangeSize() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_RangeSizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "range-size"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabel (container): Sub-TLV used to advertise the SID or label associated with the
// subset of the SRGB being advertised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath) SidLabel() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// SidLabel (container): Sub-TLV used to advertise the SID or label associated with the
// subset of the SRGB being advertised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sid-label"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny) SidLabel() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sid-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV received by the local system within the
// SR SID/Label Range TLV of the RI LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV received by the local system within the
// SR SID/Label Range TLV of the RI LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/entry-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/entry-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/first-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/first-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePathAny struct {
	*ygot.NodePath
}

// EntryType (leaf): The type of entry that is contained within the sub-TLV. The range may
// be represented as either a range of MPLS labels, or numeric segment
// identifiers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/entry-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/entry-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath) EntryType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "entry-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// EntryType (leaf): The type of entry that is contained within the sub-TLV. The range may
// be represented as either a range of MPLS labels, or numeric segment
// identifiers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/entry-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/entry-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny) EntryType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_EntryTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "entry-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// FirstValue (leaf): The first value within the SRGB range being specified. The type of the
// entry is determined based on the value of the entry type as this value
// may represent either a segment identifier or an MPLS label.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/first-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/first-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPath) FirstValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "first-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// FirstValue (leaf): The first value within the SRGB range being specified. The type of the
// entry is determined based on the value of the entry type as this value
// may represent either a segment identifier or an MPLS label.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/first-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/sid-label/state/first-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabelPathAny) FirstValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_SidLabel_FirstValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "first-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/segment-routing-sid-label-range/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_SegmentRoutingSidLabelRange_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/router-information/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_RouterInformation_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineeringPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePathAny struct {
	*ygot.NodePath
}

// Link (container): Parameters included in the Link TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) Link() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPath{
		NodePath: ygot.NewNodePath(
			[]string{"link"},
			map[string]interface{}{},
			n,
		),
	}
}

// Link (container): Parameters included in the Link TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "link"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) Link() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"link"},
			map[string]interface{}{},
			n,
		),
	}
}

// NodeAttribute (container): Parameters included in the Node Attribute TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "node-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) NodeAttribute() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePath{
		NodePath: ygot.NewNodePath(
			[]string{"node-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// NodeAttribute (container): Parameters included in the Node Attribute TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "node-attribute"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) NodeAttribute() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"node-attribute"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterAddress (container): Parameters included in the Router Address TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) RouterAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"router-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterAddress (container): Parameters included in the Router Address TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "router-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) RouterAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"router-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of TLV within the Traffic Engineering LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of TLV within the Traffic Engineering LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPath) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownTlv (container): An unknown TLV within the context. Unknown TLVs are
// defined to be the set of TLVs that are not modelled
// within the OpenConfig model, or are unknown to the
// local system such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-tlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_TlvPathAny) UnknownTlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-tlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_LinkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/local-ip-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/local-ip-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-reservable-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-reservable-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/remote-ip-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/remote-ip-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePathAny struct {
	*ygot.NodePath
}

// AdminGroupAny (list): The administrative group described within the
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "administrative-groups/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group"
// BitIndex (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) AdminGroupAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"administrative-groups", "admin-group"},
			map[string]interface{}{"bit-index": "*"},
			n,
		),
	}
}

// AdminGroupAny (list): The administrative group described within the
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "administrative-groups/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group"
// BitIndex (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) AdminGroupAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"administrative-groups", "admin-group"},
			map[string]interface{}{"bit-index": "*"},
			n,
		),
	}
}

// AdminGroup (list): The administrative group described within the
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "administrative-groups/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group"
// BitIndex: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) AdminGroup(BitIndex uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"administrative-groups", "admin-group"},
			map[string]interface{}{"bit-index": BitIndex},
			n,
		),
	}
}

// AdminGroup (list): The administrative group described within the
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "administrative-groups/admin-group"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group"
// BitIndex: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) AdminGroup(BitIndex uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"administrative-groups", "admin-group"},
			map[string]interface{}{"bit-index": BitIndex},
			n,
		),
	}
}

// LinkId (leaf): The ID of the remote system. For point-to-point links, this is the
// router ID of the neighbor. For multi-access links it is the address
// of the designated router.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (leaf): The ID of the remote system. For point-to-point links, this is the
// router ID of the neighbor. For multi-access links it is the address
// of the designated router.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkType (leaf): The type of the link that is being described by the TE LSA Link
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) LinkType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkType (leaf): The type of the link that is being described by the TE LSA Link
// sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/link-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) LinkType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LinkTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpAddress (leaf-list): The IP address(es) of the local system that correspond to the
// specified TE link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ip-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/local-ip-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) LocalIpAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpAddress (leaf-list): The IP address(es) of the local system that correspond to the
// specified TE link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ip-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/local-ip-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) LocalIpAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_LocalIpAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumBandwidth (leaf): The maximum bandwidth of the link. This value reflects the actual
// bandwidth of the link expressed asn IEEE 32-bit floating point
// number
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) MaximumBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumBandwidth (leaf): The maximum bandwidth of the link. This value reflects the actual
// bandwidth of the link expressed asn IEEE 32-bit floating point
// number
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) MaximumBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumReservableBandwidth (leaf): The maximum reservable bandwidth for the link. This value represents
// the total bandwidth which may be used for traffic engineering
// purposes. The value may exceed the maximum-bandwidth value
// in cases where the link is oversubscribed. The value is reflected as
// a 32-bit IEEE floating-point number
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-reservable-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-reservable-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) MaximumReservableBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-reservable-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumReservableBandwidth (leaf): The maximum reservable bandwidth for the link. This value represents
// the total bandwidth which may be used for traffic engineering
// purposes. The value may exceed the maximum-bandwidth value
// in cases where the link is oversubscribed. The value is reflected as
// a 32-bit IEEE floating-point number
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-reservable-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/maximum-reservable-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) MaximumReservableBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MaximumReservableBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-reservable-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric of the link that should be used for traffic engineering
// purposes. This link may be different than the standard OSPF link
// metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric of the link that should be used for traffic engineering
// purposes. This link may be different than the standard OSPF link
// metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpAddress (leaf-list): The IP address(es) of the remote systems that are attached to the
// specified TE link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ip-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/remote-ip-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) RemoteIpAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteIpAddress (leaf-list): The IP address(es) of the remote systems that are attached to the
// specified TE link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-ip-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/remote-ip-address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) RemoteIpAddress() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_RemoteIpAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The sub-TLV type specified in the Link TLV. When the value is
// known by the local system, a canonical name of the sub-TLV is utilised
// - the special UNKNOWN value indicates that the system did not
// support the sub-TLV type received in the LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The sub-TLV type specified in the Link TLV. When the value is
// known by the local system, a canonical name of the sub-TLV is utilised
// - the special UNKNOWN value indicates that the system did not
// support the sub-TLV type received in the LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownSubtlv (container): An unknown SubTLV within the context. Unknown Sub-TLV
// are defined to be the set of SubTLVs that are not modelled
// by the OpenConfig schema, or are unknown to the local system
// such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnknownSubtlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-subtlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownSubtlv (container): An unknown SubTLV within the context. Unknown Sub-TLV
// are defined to be the set of SubTLVs that are not modelled
// by the OpenConfig schema, or are unknown to the local system
// such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnknownSubtlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-subtlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownType (leaf): The value of the type field of an unknown sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unknown-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnknownType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unknown-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownType (leaf): The value of the type field of an unknown sub-TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unknown-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnknownType() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unknown-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownValue (leaf): The binary contents of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unknown-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnknownValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unknown-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownValue (leaf): The binary contents of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unknown-value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/state/unknown-value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnknownValue() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unknown-value"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnreservedBandwidthAny (list): The unreserved bandwidth at each priority level
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidths/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnreservedBandwidthAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidths", "unreserved-bandwidth"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// UnreservedBandwidthAny (list): The unreserved bandwidth at each priority level
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidths/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth"
// Priority (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnreservedBandwidthAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidths", "unreserved-bandwidth"},
			map[string]interface{}{"priority": "*"},
			n,
		),
	}
}

// UnreservedBandwidth (list): The unreserved bandwidth at each priority level
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidths/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth"
// Priority: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPath) UnreservedBandwidth(Priority uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidths", "unreserved-bandwidth"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// UnreservedBandwidth (list): The unreserved bandwidth at each priority level
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unreserved-bandwidths/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth"
// Priority: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlvPathAny) UnreservedBandwidth(Priority uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unreserved-bandwidths", "unreserved-bandwidth"},
			map[string]interface{}{"priority": Priority},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/bit-index YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/bit-index YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPathAny struct {
	*ygot.NodePath
}

// BitIndex (leaf): The index of the bit within the 32-bit administrative group field
// of the Administrative Group sub-TLV of the Traffic Engineering LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bit-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/bit-index"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath) BitIndex() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bit-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// BitIndex (leaf): The index of the bit within the 32-bit administrative group field
// of the Administrative Group sub-TLV of the Traffic Engineering LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bit-index"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/bit-index"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny) BitIndex() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_BitIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bit-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): Whether the bit is set within the administrative group field
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/set"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPath) Set() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): Whether the bit is set within the administrative group field
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/administrative-groups/admin-group/state/set"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroupPathAny) Set() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_AdminGroup_SetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unknown-subtlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnknownSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/unreserved-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/unreserved-bandwidth YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPathAny struct {
	*ygot.NodePath
}

// Priority (leaf): The priority level being described
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The priority level being described
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny) Priority() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnreservedBandwidth (leaf): The unreserved bandwidth for at priority level P, where P is
// equal to the priority of the current list entry. The reservable
// bandwidth at priority P is equal to the sum of the reservable
// bandwidth at all levels 0..P.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/unreserved-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPath) UnreservedBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unreserved-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnreservedBandwidth (leaf): The unreserved bandwidth for at priority level P, where P is
// equal to the priority of the current list entry. The reservable
// bandwidth at priority P is equal to the sum of the reservable
// bandwidth at all levels 0..P.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/unreserved-bandwidth"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/link/sub-tlvs/sub-tlv/unreserved-bandwidths/unreserved-bandwidth/state/unreserved-bandwidth"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidthPathAny) UnreservedBandwidth() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_Link_SubTlv_UnreservedBandwidth_UnreservedBandwidthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "unreserved-bandwidth"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttributePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv4-addresses YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv4-addresses YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv6-addresses YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv6-addresses YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePathAny struct {
	*ygot.NodePath
}

// LocalIpv4Addresses (leaf-list): The local IPv4 addresses of the node expressed in CIDR notation
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv4-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv4-addresses"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath) LocalIpv4Addresses() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv4-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv4Addresses (leaf-list): The local IPv4 addresses of the node expressed in CIDR notation
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv4-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv4-addresses"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny) LocalIpv4Addresses() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv4AddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv4-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv6Addresses (leaf-list): The local IPv6 addreses of the node
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv6-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv6-addresses"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath) LocalIpv6Addresses() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv6-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalIpv6Addresses (leaf-list): The local IPv6 addreses of the node
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-ipv6-addresses"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/local-ipv6-addresses"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny) LocalIpv6Addresses() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_LocalIpv6AddressesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-ipv6-addresses"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV of the Node Attribute TLV contained within
// the TE LSA. If the local system can interpret the value received the
// canonical name of the type is utilised, otherwise the special UNKNOWN
// value is used
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type of the sub-TLV of the Node Attribute TLV contained within
// the TE LSA. If the local system can interpret the value received the
// canonical name of the type is utilised, otherwise the special UNKNOWN
// value is used
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownSubtlv (container): An unknown SubTLV within the context. Unknown Sub-TLV
// are defined to be the set of SubTLVs that are not modelled
// by the OpenConfig schema, or are unknown to the local system
// such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPath) UnknownSubtlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-subtlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// UnknownSubtlv (container): An unknown SubTLV within the context. Unknown Sub-TLV
// are defined to be the set of SubTLVs that are not modelled
// by the OpenConfig schema, or are unknown to the local system
// such that it cannot decode their value.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "unknown-subtlv"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlvPathAny) UnknownSubtlv() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"unknown-subtlv"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/node-attribute/sub-tlvs/sub-tlv/unknown-subtlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_NodeAttribute_SubTlv_UnknownSubtlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address/state/address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address/state/address YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPathAny struct {
	*ygot.NodePath
}

// Address (leaf): A stable IP address of the advertising router, that is always
// reachable when the router is connected to the network. Typically this
// is a loopback address.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address/state/address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPath) Address() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): A stable IP address of the advertising router, that is always
// reachable when the router is connected to the network. Typically this
// is a loopback address.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/router-address/state/address"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddressPathAny) Address() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_RouterAddress_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/traffic-engineering/tlvs/tlv/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_TrafficEngineering_Tlv_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/value YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePathAny struct {
	*ygot.NodePath
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Length (leaf): The length value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny) Length() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_LengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "length"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The type value of the unknown TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPath) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value portion of the unknwon TLV
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/opaque-lsa/unknown-tlv/state/value"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlvPathAny) Value() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_OpaqueLsa_UnknownTlv_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-links YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-links YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-tos-metrics YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-tos-metrics YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePathAny struct {
	*ygot.NodePath
}

// LinkData (leaf): The data associated with the link type. The value is
// dependent upon the subtype of the LSA. When the connection is
// to a stub network it represents the mask; for p2p connections
// that are unnumbered it represents the ifIndex value of the
// router's interface; for all other connections it represents
// the local system's IP address
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-data"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) LinkData() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-data"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkData (leaf): The data associated with the link type. The value is
// dependent upon the subtype of the LSA. When the connection is
// to a stub network it represents the mask; for p2p connections
// that are unnumbered it represents the ifIndex value of the
// router's interface; for all other connections it represents
// the local system's IP address
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-data"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-data"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) LinkData() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkDataPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-data"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (leaf): The identifier for the link specified. The value of the link
// identifier is dependent upon the type of the LSA. The value is
// specified to be, per sub-type:
//  1. Neighbouring router's router ID.
//  2. IP address of DR.
//  3. IP network address.
//  4. Neighbouring router router's ID.
//
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LinkId (leaf): The identifier for the link specified. The value of the link
// identifier is dependent upon the type of the LSA. The value is
// specified to be, per sub-type:
//  1. Neighbouring router's router ID.
//  2. IP address of DR.
//  3. IP network address.
//  4. Neighbouring router router's ID.
//
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/link-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/link-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) LinkId() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_LinkIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "link-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost of utilising the link specified independent of TOS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The cost of utilising the link specified independent of TOS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumberLinks (leaf): The number of links that are described within the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/number-links"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-links"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) NumberLinks() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "number-links"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumberLinks (leaf): The number of links that are described within the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/number-links"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-links"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) NumberLinks() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberLinksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "number-links"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumberTosMetrics (leaf): The number of different TOS metrics given for this link, not
// including the link metric (which is referred to as TOS 0).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/number-tos-metrics"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-tos-metrics"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) NumberTosMetrics() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "number-tos-metrics"},
			map[string]interface{}{},
			n,
		),
	}
}

// NumberTosMetrics (leaf): The number of different TOS metrics given for this link, not
// including the link metric (which is referred to as TOS 0).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/number-tos-metrics"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/number-tos-metrics"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) NumberTosMetrics() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_NumberTosMetricsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "number-tos-metrics"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The sub-type of the Router LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Type (leaf): The sub-type of the Router LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/state/type"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) Type() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPath) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsaPathAny) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePath) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/router-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfServicePathAny) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_RouterLsa_TypeOfService_TosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/state/network-mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/state/network-mask YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPathAny struct {
	*ygot.NodePath
}

// NetworkMask (leaf): The mask of the network described by the Summary LSA
// represented as a CIDR mask.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/state/network-mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath) NetworkMask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkMask (leaf): The mask of the network described by the Summary LSA
// represented as a CIDR mask.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/network-mask"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/state/network-mask"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny) NetworkMask() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_NetworkMaskPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "network-mask"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfServiceAny (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service"
// Tos (wildcarded): uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny) TypeOfServiceAny() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": "*"},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPath) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// TypeOfService (list): Per-type of service parameters for the LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "types-of-service/type-of-service"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service"
// Tos: uint8
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsaPathAny) TypeOfService(Tos uint8) *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"types-of-service", "type-of-service"},
			map[string]interface{}{"tos": Tos},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/tos YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPathAny struct {
	*ygot.NodePath
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): The metric value to be used for the TOS specified. This value
// represents the cost of use of the link for the specific type
// of service.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/metric"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny) Metric() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePath) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// Tos (leaf): OSPF encoding of the type of service referred to by this
// LSA. Encoding for OSPF TOS are described in RFC2328.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-lsdb"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/tos"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/lsdb/lsa-types/lsa-type/lsas/lsa/summary-lsa/types-of-service/type-of-service/state/tos"
func (n *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfServicePathAny) Tos() *NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Lsdb_LsaType_Lsa_SummaryLsa_TypeOfService_TosPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "tos"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/state/traffic-engineering-enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/state/traffic-engineering-enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny struct {
	*ygot.NodePath
}

// TrafficEngineeringEnabled (leaf): Specifies whether traffic engineering extensions should be
// advertised within the area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/state/traffic-engineering-enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_MplsPath) TrafficEngineeringEnabled() *NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringEnabled (leaf): Specifies whether traffic engineering extensions should be
// advertised within the area
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/mpls/state/traffic-engineering-enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Area_MplsPathAny) TrafficEngineeringEnabled() *NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_Mpls_TrafficEngineeringEnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/adjacency-state YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/backup-designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/backup-designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/dead-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/dead-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/designated-router YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/last-established-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/last-established-time YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/optional-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/optional-capabilities YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/priority YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/remote-router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/remote-router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/retransmission-queue-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/retransmission-queue-length YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/state-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/state-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPathAny struct {
	*ygot.NodePath
}

// AdjacencyState (leaf): The state of the adjacency with the neighbor.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/adjacency-state"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) AdjacencyState() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// AdjacencyState (leaf): The state of the adjacency with the neighbor.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/adjacency-state"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/adjacency-state"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) AdjacencyState() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_AdjacencyStatePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "adjacency-state"},
			map[string]interface{}{},
			n,
		),
	}
}

// BackupDesignatedRouter (leaf): The backup designated router for the adjacency.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup-designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/backup-designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) BackupDesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup-designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BackupDesignatedRouter (leaf): The backup designated router for the adjacency.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/backup-designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/backup-designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) BackupDesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_BackupDesignatedRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "backup-designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTime (leaf): The time at which this neighbor's adjacency will be
// considered dead. The value is expressed relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/dead-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) DeadTime() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTime (leaf): The time at which this neighbor's adjacency will be
// considered dead. The value is expressed relative to
// the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/dead-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) DeadTime() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DeadTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// DesignatedRouter (leaf): The designated router for the adjacency. This device
// advertises the Network LSA for broadcast and NBMA networks.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) DesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// DesignatedRouter (leaf): The designated router for the adjacency. This device
// advertises the Network LSA for broadcast and NBMA networks.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/designated-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/designated-router"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) DesignatedRouter() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_DesignatedRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "designated-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastEstablishedTime (leaf): The time at which the adjacency was last established with
// the neighbor. That is to say the time at which the
// adjacency last transitioned into the FULL state. The
// value is expressed relative to the Unix Epoch (Jan 1 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-established-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/last-established-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) LastEstablishedTime() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-established-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// LastEstablishedTime (leaf): The time at which the adjacency was last established with
// the neighbor. That is to say the time at which the
// adjacency last transitioned into the FULL state. The
// value is expressed relative to the Unix Epoch (Jan 1 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/last-established-time"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/last-established-time"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) LastEstablishedTime() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_LastEstablishedTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "last-established-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// OptionalCapabilities (leaf): The optional capabilities field received in the Hello
// message from the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/optional-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) OptionalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// OptionalCapabilities (leaf): The optional capabilities field received in the Hello
// message from the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/optional-capabilities"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/optional-capabilities"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) OptionalCapabilities() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_OptionalCapabilitiesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "optional-capabilities"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The remote system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) Priority() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// Priority (leaf): The remote system's priority to become the designated
// router
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/priority"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) Priority() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_PriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteRouterId (leaf): The router ID of the device which terminates the remote end
// of the virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/remote-router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) RemoteRouterId() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RemoteRouterId (leaf): The router ID of the device which terminates the remote end
// of the virtual link
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/remote-router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/remote-router-id"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) RemoteRouterId() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RemoteRouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "remote-router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionQueueLength (leaf): The number of LSAs that are currently in the queue to be
// retransmitted to the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmission-queue-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/retransmission-queue-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) RetransmissionQueueLength() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmission-queue-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetransmissionQueueLength (leaf): The number of LSAs that are currently in the queue to be
// retransmitted to the neighbor
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/retransmission-queue-length"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/retransmission-queue-length"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) RetransmissionQueueLength() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_RetransmissionQueueLengthPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "retransmission-queue-length"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateChanges (leaf): The number of transitions out of the FULL state that this
// neighbor has been through
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/state-changes"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPath) StateChanges() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPath {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateChanges (leaf): The number of transitions out of the FULL state that this
// neighbor has been through
// ----------------------------------------
// Defining module: "openconfig-ospfv2-area-interface"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/state-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/areas/area/virtual-links/virtual-link/state/state-changes"
func (n *NetworkInstance_Protocol_Ospfv2_Area_VirtualLinkPathAny) StateChanges() *NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Area_VirtualLink_StateChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "state-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global YANG schema element.
type NetworkInstance_Protocol_Ospfv2_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global YANG schema element.
type NetworkInstance_Protocol_Ospfv2_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/hide-transit-only-networks YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/hide-transit-only-networks YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/igp-shortcuts YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/igp-shortcuts YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/log-adjacency-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/log-adjacency-changes YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/router-id YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/summary-route-cost-mode YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/state/summary-route-cost-mode YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny struct {
	*ygot.NodePath
}

// GracefulRestart (container): Configuration and operational state parameters for OSPFv2
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) GracefulRestart() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// GracefulRestart (container): Configuration and operational state parameters for OSPFv2
// graceful restart
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "graceful-restart"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) GracefulRestart() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"graceful-restart"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideTransitOnlyNetworks (leaf): When this leaf is set to true, do not advertise prefixes
// into OSPFv2 that correspond to transit interfaces, as per
// the behaviour discussed in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hide-transit-only-networks"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/hide-transit-only-networks"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) HideTransitOnlyNetworks() *NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hide-transit-only-networks"},
			map[string]interface{}{},
			n,
		),
	}
}

// HideTransitOnlyNetworks (leaf): When this leaf is set to true, do not advertise prefixes
// into OSPFv2 that correspond to transit interfaces, as per
// the behaviour discussed in RFC6860.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hide-transit-only-networks"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/hide-transit-only-networks"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) HideTransitOnlyNetworks() *NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_HideTransitOnlyNetworksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hide-transit-only-networks"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpShortcuts (leaf): When this leaf is set to true, OSPFv2 will route traffic to
// a remote system via any LSP to the system that is marked as
// shortcut eligible.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/igp-shortcuts"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/igp-shortcuts"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) IgpShortcuts() *NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "igp-shortcuts"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpShortcuts (leaf): When this leaf is set to true, OSPFv2 will route traffic to
// a remote system via any LSP to the system that is marked as
// shortcut eligible.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/igp-shortcuts"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/igp-shortcuts"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) IgpShortcuts() *NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_IgpShortcutsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "igp-shortcuts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterAreaPropagationPolicyAny (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAny() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAny (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAny() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnyDstArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAnyDstArea(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnyDstArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea (wildcarded): [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAnyDstArea(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": "*"},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnySrcArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicyAnySrcArea(DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicyAnySrcArea (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea (wildcarded): [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicyAnySrcArea(DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": "*", "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicy (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) InterAreaPropagationPolicy(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union, DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": DstArea},
			n,
		),
	}
}

// InterAreaPropagationPolicy (list): A list of connections between pairs of areas - routes are
// propagated from the source (src) area to the destination (dst)
// area according to the policy specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "inter-area-propagation-policies/inter-area-propagation-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy"
// SrcArea: [oc.UnionUint32, oc.UnionString]
// DstArea: [oc.UnionUint32, oc.UnionString]
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) InterAreaPropagationPolicy(SrcArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union, DstArea oc.NetworkInstance_Protocol_Ospfv2_Area_Identifier_Union) *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"inter-area-propagation-policies", "inter-area-propagation-policy"},
			map[string]interface{}{"src-area": SrcArea, "dst-area": DstArea},
			n,
		),
	}
}

// LogAdjacencyChanges (leaf): When this leaf is set to true, a log message will be
// generated when the state of an OSPFv2 neighbour changes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/log-adjacency-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/log-adjacency-changes"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) LogAdjacencyChanges() *NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "log-adjacency-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LogAdjacencyChanges (leaf): When this leaf is set to true, a log message will be
// generated when the state of an OSPFv2 neighbour changes.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/log-adjacency-changes"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/log-adjacency-changes"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) LogAdjacencyChanges() *NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_LogAdjacencyChangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "log-adjacency-changes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): OSPFv2 parameters relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) Mpls() *NetworkInstance_Protocol_Ospfv2_Global_MplsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_MplsPath{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mpls (container): OSPFv2 parameters relating to MPLS
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "mpls"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) Mpls() *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"mpls"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): A 32-bit number represented as a dotted quad assigned to
// each router running the OSPFv2 protocol. This number should
// be unique within the autonomous system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) RouterId() *NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_RouterIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// RouterId (leaf): A 32-bit number represented as a dotted quad assigned to
// each router running the OSPFv2 protocol. This number should
// be unique within the autonomous system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/router-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/router-id"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) RouterId() *NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_RouterIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "router-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryRouteCostMode (leaf): Specify how costs for the summary routes should be specified
// as per the behaviour in the original OSPF specification
// RFC1583, or alternatively whether the revised behaviour
// described in RFC2328 should be utilised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/summary-route-cost-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/summary-route-cost-mode"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) SummaryRouteCostMode() *NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "summary-route-cost-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// SummaryRouteCostMode (leaf): Specify how costs for the summary routes should be specified
// as per the behaviour in the original OSPF specification
// RFC1583, or alternatively whether the revised behaviour
// described in RFC2328 should be utilised
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/summary-route-cost-mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/state/summary-route-cost-mode"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) SummaryRouteCostMode() *NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_SummaryRouteCostModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "summary-route-cost-mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Configuration and operational state parameters for OSPFv2
// timers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPath) Timers() *NetworkInstance_Protocol_Ospfv2_Global_TimersPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): Configuration and operational state parameters for OSPFv2
// timers
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers"
func (n *NetworkInstance_Protocol_Ospfv2_GlobalPathAny) Timers() *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/helper-only YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/helper-only YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When the value of this leaf is set to true, graceful restart
// is enabled on the local system. In this case, the system will
// use Grace-LSAs to signal that it is restarting to its
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When the value of this leaf is set to true, graceful restart
// is enabled on the local system. In this case, the system will
// use Grace-LSAs to signal that it is restarting to its
// neighbors.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Operate graceful-restart only in helper mode. When this leaf
// is set to true, the local system does not use Grace-LSAs to
// indicate that it is restarting, but will accept Grace-LSAs
// from remote systems, and suppress withdrawl of adjacencies
// of the system for the grace period specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/helper-only"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPath) HelperOnly() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelperOnly (leaf): Operate graceful-restart only in helper mode. When this leaf
// is set to true, the local system does not use Grace-LSAs to
// indicate that it is restarting, but will accept Grace-LSAs
// from remote systems, and suppress withdrawl of adjacencies
// of the system for the grace period specified
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/helper-only"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/graceful-restart/state/helper-only"
func (n *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestartPathAny) HelperOnly() *NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_GracefulRestart_HelperOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "helper-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/default-import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/dst-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/dst-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/import-policy YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/src-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/src-area YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny struct {
	*ygot.NodePath
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/default-import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) DefaultImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/default-import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) DefaultImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstArea (leaf): The destination area to which prefixes are to be imported
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dst-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/dst-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) DstArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dst-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstArea (leaf): The destination area to which prefixes are to be imported
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dst-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/dst-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) DstArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_DstAreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dst-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) ImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/import-policy"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) ImportPolicy() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcArea (leaf): The area from which prefixes are to be exported.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/src-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/src-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPath) SrcArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "src-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcArea (leaf): The area from which prefixes are to be exported.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/src-area"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/inter-area-propagation-policies/inter-area-propagation-policy/state/src-area"
func (n *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicyPathAny) SrcArea() *NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_InterAreaPropagationPolicy_SrcAreaPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "src-area"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_MplsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_MplsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/state/traffic-engineering-extensions YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/state/traffic-engineering-extensions YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny struct {
	*ygot.NodePath
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPath) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// IgpLdpSync (container): OSPFv2 parameters relating to LDP/IGP synchronization
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "igp-ldp-sync"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny) IgpLdpSync() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"igp-ldp-sync"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringExtensions (leaf): When this leaf is set to true, use traffic engineering
// extensions for OSPF to advertise TE parameters via type 10
// Opaque LSAs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-extensions"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/state/traffic-engineering-extensions"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPath) TrafficEngineeringExtensions() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-extensions"},
			map[string]interface{}{},
			n,
		),
	}
}

// TrafficEngineeringExtensions (leaf): When this leaf is set to true, use traffic engineering
// extensions for OSPF to advertise TE parameters via type 10
// Opaque LSAs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/traffic-engineering-extensions"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/state/traffic-engineering-extensions"
func (n *NetworkInstance_Protocol_Ospfv2_Global_MplsPathAny) TrafficEngineeringExtensions() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_TrafficEngineeringExtensionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "traffic-engineering-extensions"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/enabled YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/post-session-up-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, do not utilise this link for
// forwarding via the IGP until such time as LDP adjacencies to
// the neighbor(s) over the link are established.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/enabled"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny) Enabled() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPath) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// PostSessionUpDelay (leaf): This leaf specifies a delay, expressed in units of milliseconds,
// between the LDP session to the IGP neighbor being established, and
// it being considered synchronized by the IGP.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/post-session-up-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/mpls/igp-ldp-sync/state/post-session-up-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSyncPathAny) PostSessionUpDelay() *NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Mpls_IgpLdpSync_PostSessionUpDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "post-session-up-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny struct {
	*ygot.NodePath
}

// LsaGeneration (container): Configuration and operational state parameters relating
// to timers governing the generation of LSAs by the local
// system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) LsaGeneration() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// LsaGeneration (container): Configuration and operational state parameters relating
// to timers governing the generation of LSAs by the local
// system
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "lsa-generation"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) LsaGeneration() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"lsa-generation"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxMetric (container): Configuration and operational state parameters relating
// to setting the OSPFv2 maximum metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) MaxMetric() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"max-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxMetric (container): Configuration and operational state parameters relating
// to setting the OSPFv2 maximum metric.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "max-metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) MaxMetric() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): Configuration and operational state parameters relating
// to timers governing the operation of SPF runs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPath) Spf() *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// Spf (container): Configuration and operational state parameters relating
// to timers governing the operation of SPF runs
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "spf"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf"
func (n *NetworkInstance_Protocol_Ospfv2_Global_TimersPathAny) Spf() *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"spf"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/timer-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/timer-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePathAny struct {
	*ygot.NodePath
}

// InitialDelay (leaf): The value of this leaf specifies the time between the first
// time an LSA is generated and advertised and the subsequent
// generation of that LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitialDelay (leaf): The value of this leaf specifies the time between the first
// time an LSA is generated and advertised and the subsequent
// generation of that LSA.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_InitialDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum time between the
// generation of an LSA and the subsequent re-generation of that
// LSA. This value is used in implementations that support
// increasing delay between generation of an LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum time between the
// generation of an LSA and the subsequent re-generation of that
// LSA. This value is used in implementations that support
// increasing delay between generation of an LSA
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_MaximumDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimerType (leaf): The timer mode that is utilised by the implementation.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/timer-type"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPath) TimerType() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimerType (leaf): The timer mode that is utilised by the implementation.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/lsa-generation/state/timer-type"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGenerationPathAny) TimerType() *NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_LsaGeneration_TimerTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/include YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/include YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/set YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/timeout YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/timeout YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/trigger YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/trigger YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny struct {
	*ygot.NodePath
}

// Include (leaf-list): By default, the maximum metric is advertised for all
// non-stub interfaces of a device. When identities are
// specified within this leaf-list, additional entities
// are also advertised with the maximum metric according
// to the values within the list.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/include"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Include() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include"},
			map[string]interface{}{},
			n,
		),
	}
}

// Include (leaf-list): By default, the maximum metric is advertised for all
// non-stub interfaces of a device. When identities are
// specified within this leaf-list, additional entities
// are also advertised with the maximum metric according
// to the values within the list.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/include"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/include"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Include() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_IncludePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "include"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): When this leaf is set to true, all non-stub interfaces of
// the local system are advertised with the maximum metric,
// such that the router does not act as a transit system,
// (similarly to the IS-IS overload functionality).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/set"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Set() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// Set (leaf): When this leaf is set to true, all non-stub interfaces of
// the local system are advertised with the maximum metric,
// such that the router does not act as a transit system,
// (similarly to the IS-IS overload functionality).
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/set"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Set() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_SetPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): The delay, in seconds, after which the advertisement of
// entities with the maximum metric should be cleared, and
// the system reverts to the default, or configured, metrics.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timeout"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/timeout"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Timeout() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timeout (leaf): The delay, in seconds, after which the advertisement of
// entities with the maximum metric should be cleared, and
// the system reverts to the default, or configured, metrics.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timeout"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/timeout"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Timeout() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TimeoutPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timeout"},
			map[string]interface{}{},
			n,
		),
	}
}

// Trigger (leaf-list): By default, the maximum metric is only advertised
// when the max-metric/set leaf is specified as true.
// In the case that identities are specified within this
// list, they provide additional triggers (e.g., system
// boot) that may cause the max-metric to be set. In this
// case, the system should still honour the timeout specified
// by the max-metric/timeout leaf, and clear the max-metric
// advertisements after the expiration of this timer.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/trigger"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPath) Trigger() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// Trigger (leaf-list): By default, the maximum metric is only advertised
// when the max-metric/set leaf is specified as true.
// In the case that identities are specified within this
// list, they provide additional triggers (e.g., system
// boot) that may cause the max-metric to be set. In this
// case, the system should still honour the timeout specified
// by the max-metric/timeout leaf, and clear the max-metric
// advertisements after the expiration of this timer.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/trigger"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/max-metric/state/trigger"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetricPathAny) Trigger() *NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_MaxMetric_TriggerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "trigger"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/initial-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/maximum-delay YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/timer-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/timer-type YANG schema element.
type NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePathAny struct {
	*ygot.NodePath
}

// InitialDelay (leaf): The value of this leaf specifies the time between a change
// in topology being detected and the first run of the SPF
// algorithm.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// InitialDelay (leaf): The value of this leaf specifies the time between a change
// in topology being detected and the first run of the SPF
// algorithm.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/initial-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/initial-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny) InitialDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_InitialDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "initial-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum delay between
// a topology change being detected and the SPF algorithm
// running. This value is used for implementations that support
// increasing the wait time between SPF runs.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumDelay (leaf): The value of this leaf specifies the maximum delay between
// a topology change being detected and the SPF algorithm
// running. This value is used for implementations that support
// increasing the wait time between SPF runs.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-global"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-delay"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/maximum-delay"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny) MaximumDelay() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_MaximumDelayPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-delay"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimerType (leaf): The timer mode that is utilised by the implementation.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/timer-type"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPath) TimerType() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePath {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimerType (leaf): The timer mode that is utilised by the implementation.
// ----------------------------------------
// Defining module: "openconfig-ospfv2-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/timer-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/ospfv2/global/timers/spf/state/timer-type"
func (n *NetworkInstance_Protocol_Ospfv2_Global_Timers_SpfPathAny) TimerType() *NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePathAny {
	return &NetworkInstance_Protocol_Ospfv2_Global_Timers_Spf_TimerTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timer-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_PcepPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep YANG schema element.
type NetworkInstance_Protocol_PcepPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_PcepPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep YANG schema element.
type NetworkInstance_Protocol_PcepPathAny struct {
	*ygot.NodePath
}

// PathComputationServerAny (list): Configuration and state information for communication with a PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-computation-servers/path-computation-server"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server"
// PceServerAddress (wildcarded): string
func (n *NetworkInstance_Protocol_PcepPath) PathComputationServerAny() *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-computation-servers", "path-computation-server"},
			map[string]interface{}{"pce-server-address": "*"},
			n,
		),
	}
}

// PathComputationServerAny (list): Configuration and state information for communication with a PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-computation-servers/path-computation-server"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server"
// PceServerAddress (wildcarded): string
func (n *NetworkInstance_Protocol_PcepPathAny) PathComputationServerAny() *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-computation-servers", "path-computation-server"},
			map[string]interface{}{"pce-server-address": "*"},
			n,
		),
	}
}

// PathComputationServer (list): Configuration and state information for communication with a PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-computation-servers/path-computation-server"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server"
// PceServerAddress: string
func (n *NetworkInstance_Protocol_PcepPath) PathComputationServer(PceServerAddress string) *NetworkInstance_Protocol_Pcep_PathComputationServerPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServerPath{
		NodePath: ygot.NewNodePath(
			[]string{"path-computation-servers", "path-computation-server"},
			map[string]interface{}{"pce-server-address": PceServerAddress},
			n,
		),
	}
}

// PathComputationServer (list): Configuration and state information for communication with a PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "path-computation-servers/path-computation-server"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server"
// PceServerAddress: string
func (n *NetworkInstance_Protocol_PcepPathAny) PathComputationServer(PceServerAddress string) *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"path-computation-servers", "path-computation-server"},
			map[string]interface{}{"pce-server-address": PceServerAddress},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pcep_PathComputationServerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_IdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/id YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/id YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/pce-initiated-capability YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/pce-initiated-capability YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/pce-server-address YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/pce-server-address YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/pce-type YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/pce-type YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PortPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/port YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PortPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PortPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/port YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PortPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/preference YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/preference YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/report-local-lsp YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/report-local-lsp YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/source-address YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/source-address YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/sr-support YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/sr-support YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPathAny struct {
	*ygot.NodePath
}

// Authentication (container): Global PCEP authentication
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) Authentication() *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Authentication (container): Global PCEP authentication
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "authentication"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) Authentication() *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"authentication"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique name for the PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/id"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) Id() *NetworkInstance_Protocol_Pcep_PathComputationServer_IdPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique name for the PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/id"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) Id() *NetworkInstance_Protocol_Pcep_PathComputationServer_IdPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// PceInitiatedCapability (leaf): Indicates to PCE that PCC (Router) supports PCE-initiated LSP paths instantiation.
// A PCE can initiate LSPs only for PCCs that advertised this capability.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pce-initiated-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/pce-initiated-capability"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) PceInitiatedCapability() *NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pce-initiated-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// PceInitiatedCapability (leaf): Indicates to PCE that PCC (Router) supports PCE-initiated LSP paths instantiation.
// A PCE can initiate LSPs only for PCCs that advertised this capability.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pce-initiated-capability"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/pce-initiated-capability"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) PceInitiatedCapability() *NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PceInitiatedCapabilityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pce-initiated-capability"},
			map[string]interface{}{},
			n,
		),
	}
}

// PceServerAddress (leaf): The destination IP address of the PCE server for PCEP service.
// Specify multiple entries in the path-computation-server-list to provide redundancy.
// When multiple candidate servers are specified for a single client,
// they are prioritized according to preference.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pce-server-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/pce-server-address"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) PceServerAddress() *NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pce-server-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// PceServerAddress (leaf): The destination IP address of the PCE server for PCEP service.
// Specify multiple entries in the path-computation-server-list to provide redundancy.
// When multiple candidate servers are specified for a single client,
// they are prioritized according to preference.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pce-server-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/pce-server-address"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) PceServerAddress() *NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PceServerAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pce-server-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// PceType (leaf): The type of PCEP capability supported which is advertised in the Open
// message when a PCEP session is established.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pce-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/pce-type"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) PceType() *NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pce-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// PceType (leaf): The type of PCEP capability supported which is advertised in the Open
// message when a PCEP session is established.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pce-type"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/pce-type"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) PceType() *NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PceTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pce-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Port (leaf): The destination TCP port used for PCEP service in the PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/port"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/port"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) Port() *NetworkInstance_Protocol_Pcep_PathComputationServer_PortPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PortPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "port"},
			map[string]interface{}{},
			n,
		),
	}
}

// Port (leaf): The destination TCP port used for PCEP service in the PCE server.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/port"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/port"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) Port() *NetworkInstance_Protocol_Pcep_PathComputationServer_PortPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "port"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): When multiple PCE servers are specified, the candidate PCE server
// with the highest preference is selected to calculate paths.
// The greater or lower the value, the higher the preference could
// dependon vendor implementation. If no preference value is set, indicate
// the lowest preference or no preference at all.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/preference"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) Preference() *NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): When multiple PCE servers are specified, the candidate PCE server
// with the highest preference is selected to calculate paths.
// The greater or lower the value, the higher the preference could
// dependon vendor implementation. If no preference value is set, indicate
// the lowest preference or no preference at all.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/preference"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) Preference() *NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReportLocalLsp (leaf): Specifies whether the PCC (Router) will advertise LSP existence and state
// for LSPs that are not controlled by any PCE (for example, LSPs that are
// statically configured at the PCC) but without delegating them.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/report-local-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/report-local-lsp"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) ReportLocalLsp() *NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "report-local-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// ReportLocalLsp (leaf): Specifies whether the PCC (Router) will advertise LSP existence and state
// for LSPs that are not controlled by any PCE (for example, LSPs that are
// statically configured at the PCC) but without delegating them.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/report-local-lsp"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/report-local-lsp"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) ReportLocalLsp() *NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_ReportLocalLspPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "report-local-lsp"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): The source IP address used by PCC(Router) to establish PCEP session.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/source-address"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) SourceAddress() *NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): The source IP address used by PCC(Router) to establish PCEP session.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/source-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/source-address"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) SourceAddress() *NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_SourceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrSupport (leaf): Indicates to PCE that PCC (Router) supports Segment-Routing
// to set up LSP paths in addition to RSVP-TE.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sr-support"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/sr-support"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) SrSupport() *NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sr-support"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrSupport (leaf): Indicates to PCE that PCC (Router) supports Segment-Routing
// to set up LSP paths in addition to RSVP-TE.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/sr-support"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/state/sr-support"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) SrSupport() *NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_SrSupportPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "sr-support"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines PCEP timers.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPath) Timers() *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// Timers (container): This container defines PCEP timers.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "timers"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServerPathAny) Timers() *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timers"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/state/authentication-key YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/state/authentication-key YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/state/enable YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/state/enable YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/state/keychain YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPathAny struct {
	*ygot.NodePath
}

// AuthenticationKey (leaf): Password (key) used for securing a PCEP session using
// TCP-MD5 authentication
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-key"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/state/authentication-key"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath) AuthenticationKey() *NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// AuthenticationKey (leaf): Password (key) used for securing a PCEP session using
// TCP-MD5 authentication
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/authentication-key"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/state/authentication-key"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny) AuthenticationKey() *NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_AuthenticationKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "authentication-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables PCEP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enable"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/state/enable"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath) Enable() *NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enable (leaf): Enables PCEP authentication on the node.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enable"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/state/enable"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny) Enable() *NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_EnablePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enable"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a predefined keychain that should be used to secure
// PCEP session
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/state/keychain"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPath) Keychain() *NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keychain (leaf): Reference to a predefined keychain that should be used to secure
// PCEP session
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keychain"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/authentication/state/keychain"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_AuthenticationPathAny) Keychain() *NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Authentication_KeychainPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keychain"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/keepalive YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/keepalive YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/redelegation-timeout-interval YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/redelegation-timeout-interval YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/state-timeout-interval YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/state-timeout-interval YANG schema element.
type NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPathAny struct {
	*ygot.NodePath
}

// DeadTimer (leaf): Interval after which PCE session is declared dead.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/dead-timer"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath) DeadTimer() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTimer (leaf): Interval after which PCE session is declared dead.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/dead-timer"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny) DeadTimer() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_DeadTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keepalive (leaf): Interval for sending keepalive messages over PCE session.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keepalive"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/keepalive"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath) Keepalive() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keepalive"},
			map[string]interface{}{},
			n,
		),
	}
}

// Keepalive (leaf): Interval for sending keepalive messages over PCE session.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/keepalive"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/keepalive"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny) Keepalive() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_KeepalivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "keepalive"},
			map[string]interface{}{},
			n,
		),
	}
}

// RedelegationTimeoutInterval (leaf): When a PCEP session is terminated, the period of time a PCC waits
// before revoking LSP delegation and attempting to redelegate LSPs
// associated with the terminated PCEP session to an alternate PCE.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/redelegation-timeout-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/redelegation-timeout-interval"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath) RedelegationTimeoutInterval() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "redelegation-timeout-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// RedelegationTimeoutInterval (leaf): When a PCEP session is terminated, the period of time a PCC waits
// before revoking LSP delegation and attempting to redelegate LSPs
// associated with the terminated PCEP session to an alternate PCE.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/redelegation-timeout-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/redelegation-timeout-interval"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny) RedelegationTimeoutInterval() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_RedelegationTimeoutIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "redelegation-timeout-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateTimeoutInterval (leaf): When a PCEP session is terminated, the period of time a PCC waits
// before before flushing LSP state associated with that PCEP session
// and reverting to operator-defined default parameters or behaviors.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/state-timeout-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/state-timeout-interval"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPath) StateTimeoutInterval() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPath {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "state-timeout-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// StateTimeoutInterval (leaf): When a PCEP session is terminated, the period of time a PCC waits
// before before flushing LSP state associated with that PCEP session
// and reverting to operator-defined default parameters or behaviors.
// ----------------------------------------
// Defining module: "openconfig-pcep"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/state-timeout-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pcep/path-computation-servers/path-computation-server/timers/state/state-timeout-interval"
func (n *NetworkInstance_Protocol_Pcep_PathComputationServer_TimersPathAny) StateTimeoutInterval() *NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPathAny {
	return &NetworkInstance_Protocol_Pcep_PathComputationServer_Timers_StateTimeoutIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "state-timeout-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_PimPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim YANG schema element.
type NetworkInstance_Protocol_PimPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_PimPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim YANG schema element.
type NetworkInstance_Protocol_PimPathAny struct {
	*ygot.NodePath
}

// Global (container): This container defines global PIM configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global"
func (n *NetworkInstance_Protocol_PimPath) Global() *NetworkInstance_Protocol_Pim_GlobalPath {
	return &NetworkInstance_Protocol_Pim_GlobalPath{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// Global (container): This container defines global PIM configuration and state
// information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "global"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global"
func (n *NetworkInstance_Protocol_PimPathAny) Global() *NetworkInstance_Protocol_Pim_GlobalPathAny {
	return &NetworkInstance_Protocol_Pim_GlobalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"global"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_PimPath) InterfaceAny() *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// InterfaceAny (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId (wildcarded): string
func (n *NetworkInstance_Protocol_PimPathAny) InterfaceAny() *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": "*"},
			n,
		),
	}
}

// Interface (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_PimPath) Interface(InterfaceId string) *NetworkInstance_Protocol_Pim_InterfacePath {
	return &NetworkInstance_Protocol_Pim_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// Interface (list): This container defines interface PIM configuration and
// state information.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interfaces/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface"
// InterfaceId: string
func (n *NetworkInstance_Protocol_PimPathAny) Interface(InterfaceId string) *NetworkInstance_Protocol_Pim_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interfaces", "interface"},
			map[string]interface{}{"interface-id": InterfaceId},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_GlobalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global YANG schema element.
type NetworkInstance_Protocol_Pim_GlobalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_GlobalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global YANG schema element.
type NetworkInstance_Protocol_Pim_GlobalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_NeighborCountPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/neighbor-count YANG schema element.
type NetworkInstance_Protocol_Pim_Global_NeighborCountPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_NeighborCountPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/neighbor-count YANG schema element.
type NetworkInstance_Protocol_Pim_Global_NeighborCountPathAny struct {
	*ygot.NodePath
}

// Counters (container): Global PIM counters.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) Counters() *NetworkInstance_Protocol_Pim_Global_CountersPath {
	return &NetworkInstance_Protocol_Pim_Global_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): Global PIM counters.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) Counters() *NetworkInstance_Protocol_Pim_Global_CountersPathAny {
	return &NetworkInstance_Protocol_Pim_Global_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of accepted (S, G) and (*, G)
// PIM join states on the network-instance.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) MaximumGroups() *NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath {
	return &NetworkInstance_Protocol_Pim_Global_MaximumGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of accepted (S, G) and (*, G)
// PIM join states on the network-instance.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) MaximumGroups() *NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Global_MaximumGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborCount (leaf): Number of adjacent PIM neighbors.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-count"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/neighbor-count"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) NeighborCount() *NetworkInstance_Protocol_Pim_Global_NeighborCountPath {
	return &NetworkInstance_Protocol_Pim_Global_NeighborCountPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborCount (leaf): Number of adjacent PIM neighbors.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-count"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/neighbor-count"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) NeighborCount() *NetworkInstance_Protocol_Pim_Global_NeighborCountPathAny {
	return &NetworkInstance_Protocol_Pim_Global_NeighborCountPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-count"},
			map[string]interface{}{},
			n,
		),
	}
}

// RendezvousPointAny (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) RendezvousPointAny() *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// RendezvousPointAny (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) RendezvousPointAny() *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// RendezvousPoint (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) RendezvousPoint(Address string) *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPath{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// RendezvousPoint (list): Defines a rendezvous point (RP) for sparse mode multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "rendezvous-points/rendezvous-point"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) RendezvousPoint(Address string) *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"rendezvous-points", "rendezvous-point"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// SourceAny (list): A multicast source that has been joined.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sources-joined/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) SourceAny() *NetworkInstance_Protocol_Pim_Global_SourcePathAny {
	return &NetworkInstance_Protocol_Pim_Global_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sources-joined", "source"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// SourceAny (list): A multicast source that has been joined.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sources-joined/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source"
// Address (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) SourceAny() *NetworkInstance_Protocol_Pim_Global_SourcePathAny {
	return &NetworkInstance_Protocol_Pim_Global_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sources-joined", "source"},
			map[string]interface{}{"address": "*"},
			n,
		),
	}
}

// Source (list): A multicast source that has been joined.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sources-joined/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPath) Source(Address string) *NetworkInstance_Protocol_Pim_Global_SourcePath {
	return &NetworkInstance_Protocol_Pim_Global_SourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"sources-joined", "source"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// Source (list): A multicast source that has been joined.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sources-joined/source"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source"
// Address: string
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) Source(Address string) *NetworkInstance_Protocol_Pim_Global_SourcePathAny {
	return &NetworkInstance_Protocol_Pim_Global_SourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sources-joined", "source"},
			map[string]interface{}{"address": Address},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm"
func (n *NetworkInstance_Protocol_Pim_GlobalPath) Ssm() *NetworkInstance_Protocol_Pim_Global_SsmPath {
	return &NetworkInstance_Protocol_Pim_Global_SsmPath{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ssm (container): Source specific multicast (SSM).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "ssm"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm"
func (n *NetworkInstance_Protocol_Pim_GlobalPathAny) Ssm() *NetworkInstance_Protocol_Pim_Global_SsmPathAny {
	return &NetworkInstance_Protocol_Pim_Global_SsmPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"ssm"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters YANG schema element.
type NetworkInstance_Protocol_Pim_Global_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters YANG schema element.
type NetworkInstance_Protocol_Pim_Global_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/bootstrap-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/bootstrap-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/hello-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/hello-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/join-prune-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/state/counters/join-prune-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPathAny struct {
	*ygot.NodePath
}

// BootstrapMessages (leaf): Number of bootstrap router messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bootstrap-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/bootstrap-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPath) BootstrapMessages() *NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPath {
	return &NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"bootstrap-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// BootstrapMessages (leaf): Number of bootstrap router messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bootstrap-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/bootstrap-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPathAny) BootstrapMessages() *NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Counters_BootstrapMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bootstrap-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMessages (leaf): Number of hello messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/hello-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPath) HelloMessages() *NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPath {
	return &NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMessages (leaf): Number of hello messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/hello-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPathAny) HelloMessages() *NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Counters_HelloMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneMessages (leaf): Number of join/prune messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "join-prune-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/join-prune-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPath) JoinPruneMessages() *NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPath {
	return &NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"join-prune-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneMessages (leaf): Number of join/prune messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "join-prune-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/state/counters/join-prune-messages"
func (n *NetworkInstance_Protocol_Pim_Global_CountersPathAny) JoinPruneMessages() *NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Counters_JoinPruneMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"join-prune-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPointPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPointPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/multicast-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/multicast-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny struct {
	*ygot.NodePath
}

// Address (leaf): IPv4 address of rendezvous point.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/address"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath) Address() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): IPv4 address of rendezvous point.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/address"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny) Address() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroups (leaf): List of multicast groups (multicast IP address ranges) for which
// this entry will be used as a rendezvous point. When not
// present the default is equivalent to all valid IP multicast
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multicast-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/multicast-groups"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPath) MulticastGroups() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MulticastGroups (leaf): List of multicast groups (multicast IP address ranges) for which
// this entry will be used as a rendezvous point. When not
// present the default is equivalent to all valid IP multicast
// addresses.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/multicast-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/rendezvous-points/rendezvous-point/state/multicast-groups"
func (n *NetworkInstance_Protocol_Pim_Global_RendezvousPointPathAny) MulticastGroups() *NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Global_RendezvousPoint_MulticastGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "multicast-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_SourcePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SourcePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_SourcePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SourcePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_AddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_AddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_AddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/address YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_AddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_GroupPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/group YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_GroupPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_GroupPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/group YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_GroupPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/upstream-interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/upstream-interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPathAny struct {
	*ygot.NodePath
}

// Address (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/address"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePath) Address() *NetworkInstance_Protocol_Pim_Global_Source_AddressPath {
	return &NetworkInstance_Protocol_Pim_Global_Source_AddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Address (leaf): Source address of multicast.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/address"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePathAny) Address() *NetworkInstance_Protocol_Pim_Global_Source_AddressPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Source_AddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/group"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePath) Group() *NetworkInstance_Protocol_Pim_Global_Source_GroupPath {
	return &NetworkInstance_Protocol_Pim_Global_Source_GroupPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// Group (leaf): Multicast address.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/group"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/group"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePathAny) Group() *NetworkInstance_Protocol_Pim_Global_Source_GroupPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Source_GroupPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "group"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpstreamInterfaceId (leaf): The upstream interface for this multicast source.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/upstream-interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/upstream-interface-id"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePath) UpstreamInterfaceId() *NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPath {
	return &NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "upstream-interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// UpstreamInterfaceId (leaf): The upstream interface for this multicast source.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/upstream-interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/sources-joined/source/state/upstream-interface-id"
func (n *NetworkInstance_Protocol_Pim_Global_SourcePathAny) UpstreamInterfaceId() *NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Source_UpstreamInterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "upstream-interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Global_SsmPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SsmPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_SsmPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm YANG schema element.
type NetworkInstance_Protocol_Pim_Global_SsmPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm/state/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/global/ssm/state/ssm-ranges YANG schema element.
type NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny struct {
	*ygot.NodePath
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm/state/ssm-ranges"
func (n *NetworkInstance_Protocol_Pim_Global_SsmPath) SsmRanges() *NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath {
	return &NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// SsmRanges (leaf): List of accepted source specific multicast (SSM) address
// ranges.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ssm-ranges"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/global/ssm/state/ssm-ranges"
func (n *NetworkInstance_Protocol_Pim_Global_SsmPathAny) SsmRanges() *NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny {
	return &NetworkInstance_Protocol_Pim_Global_Ssm_SsmRangesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ssm-ranges"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Pim_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface YANG schema element.
type NetworkInstance_Protocol_Pim_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BorderRouterPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/border-router YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BorderRouterPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/border-router YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BsrBorderPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/bsr-border YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BsrBorderPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/bsr-border YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DeadTimerPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DeadTimerPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dead-timer YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DrPriorityPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dr-priority YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DrPriorityPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dr-priority YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnabledPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/hello-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/interface-id YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/join-prune-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/join-prune-interval YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/maximum-groups YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_ModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_ModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_ModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_ModePathAny struct {
	*ygot.NodePath
}

// BorderRouter (leaf): When set to true the interface is set as MBR (multicast border
// router) and allows multicast traffic from sources that are
// outside of the PIM domain.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/border-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/border-router"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) BorderRouter() *NetworkInstance_Protocol_Pim_Interface_BorderRouterPath {
	return &NetworkInstance_Protocol_Pim_Interface_BorderRouterPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "border-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BorderRouter (leaf): When set to true the interface is set as MBR (multicast border
// router) and allows multicast traffic from sources that are
// outside of the PIM domain.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/border-router"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/border-router"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) BorderRouter() *NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_BorderRouterPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "border-router"},
			map[string]interface{}{},
			n,
		),
	}
}

// BsrBorder (leaf): When set to true the device will not send bootstrap router
// messages over this interface. By default these are transmitted
// over all PIM sparse mode (PIM-SM) enabled interfaces.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bsr-border"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/bsr-border"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) BsrBorder() *NetworkInstance_Protocol_Pim_Interface_BsrBorderPath {
	return &NetworkInstance_Protocol_Pim_Interface_BsrBorderPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bsr-border"},
			map[string]interface{}{},
			n,
		),
	}
}

// BsrBorder (leaf): When set to true the device will not send bootstrap router
// messages over this interface. By default these are transmitted
// over all PIM sparse mode (PIM-SM) enabled interfaces.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bsr-border"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/bsr-border"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) BsrBorder() *NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_BsrBorderPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bsr-border"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): PIM counters for each interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Counters() *NetworkInstance_Protocol_Pim_Interface_CountersPath {
	return &NetworkInstance_Protocol_Pim_Interface_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): PIM counters for each interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Counters() *NetworkInstance_Protocol_Pim_Interface_CountersPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTimer (leaf): Number of missed hello messages after which a neighbor is
// expired.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dead-timer"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) DeadTimer() *NetworkInstance_Protocol_Pim_Interface_DeadTimerPath {
	return &NetworkInstance_Protocol_Pim_Interface_DeadTimerPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DeadTimer (leaf): Number of missed hello messages after which a neighbor is
// expired.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dead-timer"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dead-timer"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) DeadTimer() *NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_DeadTimerPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dead-timer"},
			map[string]interface{}{},
			n,
		),
	}
}

// DrPriority (leaf): The designated router priority of this interface. Larger always
// preferred.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dr-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dr-priority"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) DrPriority() *NetworkInstance_Protocol_Pim_Interface_DrPriorityPath {
	return &NetworkInstance_Protocol_Pim_Interface_DrPriorityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dr-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// DrPriority (leaf): The designated router priority of this interface. Larger always
// preferred.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dr-priority"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/dr-priority"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) DrPriority() *NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_DrPriorityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dr-priority"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) EnableBfd() *NetworkInstance_Protocol_Pim_Interface_EnableBfdPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) EnableBfd() *NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnabledPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When set to true, the functionality within which this
// leaf is defined is enabled, when set to false it is
// explicitly disabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/enabled"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnabledPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Interval at which the router sends the PIM hello messages.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/hello-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) HelloInterval() *NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath {
	return &NetworkInstance_Protocol_Pim_Interface_HelloIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloInterval (leaf): Interval at which the router sends the PIM hello messages.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/hello-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/hello-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) HelloInterval() *NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_HelloIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hello-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which PIM is enabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) InterfaceId() *NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceId (leaf): Reference to an interface on which PIM is enabled.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface-id"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/interface-id"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) InterfaceId() *NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) InterfaceRef() *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) InterfaceRef() *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneInterval (leaf): Interval at which the router sends the PIM join/prune messages
// toward the upstream RPF neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/join-prune-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/join-prune-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) JoinPruneInterval() *NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath {
	return &NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "join-prune-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneInterval (leaf): Interval at which the router sends the PIM join/prune messages
// toward the upstream RPF neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/join-prune-interval"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/join-prune-interval"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) JoinPruneInterval() *NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_JoinPruneIntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "join-prune-interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of (S, G) and (*, G) PIM
// entries accepted on the interface.
// This feature depends on hardware implementation.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) MaximumGroups() *NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath {
	return &NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaximumGroups (leaf): Limit the number of (S, G) and (*, G) PIM
// entries accepted on the interface.
// This feature depends on hardware implementation.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum-groups"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/maximum-groups"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) MaximumGroups() *NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_MaximumGroupsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum-groups"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode to use when delivering multicast traffic via this
// interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/mode"
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Mode() *NetworkInstance_Protocol_Pim_Interface_ModePath {
	return &NetworkInstance_Protocol_Pim_Interface_ModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode to use when delivering multicast traffic via this
// interface.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/mode"
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Mode() *NetworkInstance_Protocol_Pim_Interface_ModePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_ModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAny (list): Details about a specific PIM neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor"
// NeighborAddress (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_InterfacePath) NeighborAny() *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
}

// NeighborAny (list): Details about a specific PIM neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor"
// NeighborAddress (wildcarded): string
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) NeighborAny() *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": "*"},
			n,
		),
	}
}

// Neighbor (list): Details about a specific PIM neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor"
// NeighborAddress: string
func (n *NetworkInstance_Protocol_Pim_InterfacePath) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Pim_Interface_NeighborPath {
	return &NetworkInstance_Protocol_Pim_Interface_NeighborPath{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
}

// Neighbor (list): Details about a specific PIM neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "neighbors/neighbor"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor"
// NeighborAddress: string
func (n *NetworkInstance_Protocol_Pim_InterfacePathAny) Neighbor(NeighborAddress string) *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_NeighborPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"neighbors", "neighbor"},
			map[string]interface{}{"neighbor-address": NeighborAddress},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/bootstrap-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/bootstrap-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/hello-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/hello-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/join-prune-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/join-prune-messages YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPathAny struct {
	*ygot.NodePath
}

// BootstrapMessages (leaf): Number of bootstrap router messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bootstrap-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/bootstrap-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPath) BootstrapMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPath {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"bootstrap-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// BootstrapMessages (leaf): Number of bootstrap router messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "bootstrap-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/bootstrap-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPathAny) BootstrapMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_BootstrapMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"bootstrap-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMessages (leaf): Number of hello messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/hello-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPath) HelloMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPath {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// HelloMessages (leaf): Number of hello messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "hello-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/hello-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPathAny) HelloMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_HelloMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"hello-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneMessages (leaf): Number of join/prune messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "join-prune-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/join-prune-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPath) JoinPruneMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPath {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPath{
		NodePath: ygot.NewNodePath(
			[]string{"join-prune-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// JoinPruneMessages (leaf): Number of join/prune messages received.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "join-prune-messages"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/state/counters/join-prune-messages"
func (n *NetworkInstance_Protocol_Pim_Interface_CountersPathAny) JoinPruneMessages() *NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Counters_JoinPruneMessagesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"join-prune-messages"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Pim_Interface_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Pim_Interface_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Pim_Interface_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Pim_Interface_NeighborPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_NeighborPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_NeighborPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_NeighborPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/dr-address YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/dr-address YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/mode YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-address YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-address YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-established YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-established YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-expires YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-expires YANG schema element.
type NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPathAny struct {
	*ygot.NodePath
}

// DrAddress (leaf): IPv4 address of designated router.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dr-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/dr-address"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) DrAddress() *NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dr-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// DrAddress (leaf): IPv4 address of designated router.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dr-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/dr-address"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) DrAddress() *NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_DrAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dr-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode in use when delivering multicast traffic
// via this neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/mode"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) Mode() *NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// Mode (leaf): PIM mode in use when delivering multicast traffic
// via this neighbor.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mode"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/mode"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) Mode() *NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_ModePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mode"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAddress (leaf): IPv4 address of neighbor router.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-address"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) NeighborAddress() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborAddress (leaf): IPv4 address of neighbor router.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-address"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-address"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) NeighborAddress() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborEstablished (leaf): This timestamp indicates the time that the
// PIM neighbor adjacency established. It is expressed
// relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// The PIM session uptime can be computed by clients
// as the difference between this value and the
// current time in UTC.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-established"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-established"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) NeighborEstablished() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-established"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborEstablished (leaf): This timestamp indicates the time that the
// PIM neighbor adjacency established. It is expressed
// relative to the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// The PIM session uptime can be computed by clients
// as the difference between this value and the
// current time in UTC.
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-established"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-established"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) NeighborEstablished() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborEstablishedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-established"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborExpires (leaf): This timestamp indicates the time that the
// PIM neighbor adjacency will expire should hello
// messages fail to arrive from the neighbor. The value
// is expressed relative to the Unix Epoch (Jan 1, 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-expires"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-expires"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPath) NeighborExpires() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPath {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-expires"},
			map[string]interface{}{},
			n,
		),
	}
}

// NeighborExpires (leaf): This timestamp indicates the time that the
// PIM neighbor adjacency will expire should hello
// messages fail to arrive from the neighbor. The value
// is expressed relative to the Unix Epoch (Jan 1, 1970
// 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-pim"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/neighbor-expires"
// Path from root: "/network-instances/network-instance/protocols/protocol/pim/interfaces/interface/neighbors/neighbor/state/neighbor-expires"
func (n *NetworkInstance_Protocol_Pim_Interface_NeighborPathAny) NeighborExpires() *NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPathAny {
	return &NetworkInstance_Protocol_Pim_Interface_Neighbor_NeighborExpiresPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "neighbor-expires"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_StaticPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static YANG schema element.
type NetworkInstance_Protocol_StaticPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_StaticPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static YANG schema element.
type NetworkInstance_Protocol_StaticPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_DescriptionPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/description YANG schema element.
type NetworkInstance_Protocol_Static_DescriptionPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_DescriptionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/description YANG schema element.
type NetworkInstance_Protocol_Static_DescriptionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/prefix YANG schema element.
type NetworkInstance_Protocol_Static_PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/prefix YANG schema element.
type NetworkInstance_Protocol_Static_PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_SetTagPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag YANG schema element.
type NetworkInstance_Protocol_Static_SetTagPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_SetTagPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag YANG schema element.
type NetworkInstance_Protocol_Static_SetTagPathAny struct {
	*ygot.NodePath
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/description"
func (n *NetworkInstance_Protocol_StaticPath) Description() *NetworkInstance_Protocol_Static_DescriptionPath {
	return &NetworkInstance_Protocol_Static_DescriptionPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// Description (leaf): An optional textual description for the route.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/description"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/description"
func (n *NetworkInstance_Protocol_StaticPathAny) Description() *NetworkInstance_Protocol_Static_DescriptionPathAny {
	return &NetworkInstance_Protocol_Static_DescriptionPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "description"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopAny (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index (wildcarded): string
func (n *NetworkInstance_Protocol_StaticPath) NextHopAny() *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHopAny (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index (wildcarded): string
func (n *NetworkInstance_Protocol_StaticPathAny) NextHopAny() *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHop (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index: string
func (n *NetworkInstance_Protocol_StaticPath) NextHop(Index string) *NetworkInstance_Protocol_Static_NextHopPath {
	return &NetworkInstance_Protocol_Static_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// NextHop (list): A list of next-hops to be utilised for the static
// route being specified.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop"
// Index: string
func (n *NetworkInstance_Protocol_StaticPathAny) NextHop(Index string) *NetworkInstance_Protocol_Static_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Prefix (leaf): Destination prefix for the static route, either IPv4 or
// IPv6.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/prefix"
func (n *NetworkInstance_Protocol_StaticPath) Prefix() *NetworkInstance_Protocol_Static_PrefixPath {
	return &NetworkInstance_Protocol_Static_PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Prefix (leaf): Destination prefix for the static route, either IPv4 or
// IPv6.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/prefix"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/prefix"
func (n *NetworkInstance_Protocol_StaticPathAny) Prefix() *NetworkInstance_Protocol_Static_PrefixPathAny {
	return &NetworkInstance_Protocol_Static_PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag"
func (n *NetworkInstance_Protocol_StaticPath) SetTag() *NetworkInstance_Protocol_Static_SetTagPath {
	return &NetworkInstance_Protocol_Static_SetTagPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// SetTag (leaf): Set a generic tag value on the route. This tag can be
// used for filtering routes that are distributed to other
// routing protocols.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/set-tag"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/state/set-tag"
func (n *NetworkInstance_Protocol_StaticPathAny) SetTag() *NetworkInstance_Protocol_Static_SetTagPathAny {
	return &NetworkInstance_Protocol_Static_SetTagPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "set-tag"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/index YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/index YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_MetricPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/metric YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_MetricPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_MetricPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/metric YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_MetricPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/preference YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/preference YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_RecursePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/recurse YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_RecursePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_RecursePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/recurse YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_RecursePathAny struct {
	*ygot.NodePath
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd"
func (n *NetworkInstance_Protocol_Static_NextHopPath) EnableBfd() *NetworkInstance_Protocol_Static_NextHop_EnableBfdPath {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfdPath{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// EnableBfd (container): Enable BFD for liveliness detection to the next-hop or
// neighbour.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "enable-bfd"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) EnableBfd() *NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"enable-bfd"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): An user-specified identifier utilised to uniquely reference
// the next-hop entry in the next-hop list. The value of this
// index has no semantic meaning other than for referencing
// the entry.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/index"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Index() *NetworkInstance_Protocol_Static_NextHop_IndexPath {
	return &NetworkInstance_Protocol_Static_NextHop_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): An user-specified identifier utilised to uniquely reference
// the next-hop entry in the next-hop list. The value of this
// index has no semantic meaning other than for referencing
// the entry.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/index"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Index() *NetworkInstance_Protocol_Static_NextHop_IndexPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_Protocol_Static_NextHopPath) InterfaceRef() *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) InterfaceRef() *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric (or cost) which is utilized to specify the order of
// selection of the next-hop entry.  The lower the metric, the more
// preferable the prefix entry is.  When this value is not
// specified, the metric is inherited from the default metric of
// the implementation for static route entries.  When multiple
// next-hops are specified for a static route, the metric is
// utilized to determine which of the next-hops to be installed in
// the RIB.  When multiple next-hops have the same metric (be it
// specified, or simply the default) then these next-hops should
// all be installed in the RIB.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/metric"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Metric() *NetworkInstance_Protocol_Static_NextHop_MetricPath {
	return &NetworkInstance_Protocol_Static_NextHop_MetricPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// Metric (leaf): A metric (or cost) which is utilized to specify the order of
// selection of the next-hop entry.  The lower the metric, the more
// preferable the prefix entry is.  When this value is not
// specified, the metric is inherited from the default metric of
// the implementation for static route entries.  When multiple
// next-hops are specified for a static route, the metric is
// utilized to determine which of the next-hops to be installed in
// the RIB.  When multiple next-hops have the same metric (be it
// specified, or simply the default) then these next-hops should
// all be installed in the RIB.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/metric"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/metric"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Metric() *NetworkInstance_Protocol_Static_NextHop_MetricPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_MetricPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "metric"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): The next-hop that is to be used for the static route
// - this may be specified as an IP address, an interface
// or a pre-defined next-hop type - for instance, DROP or
// LOCAL_LINK. When this leaf is not set, and the interface-ref
// value is specified for the next-hop, then the system should
// treat the prefix as though it is directly connected to the
// interface.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop"
func (n *NetworkInstance_Protocol_Static_NextHopPath) NextHop() *NetworkInstance_Protocol_Static_NextHop_NextHopPath {
	return &NetworkInstance_Protocol_Static_NextHop_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHop (leaf): The next-hop that is to be used for the static route
// - this may be specified as an IP address, an interface
// or a pre-defined next-hop type - for instance, DROP or
// LOCAL_LINK. When this leaf is not set, and the interface-ref
// value is specified for the next-hop, then the system should
// treat the prefix as though it is directly connected to the
// interface.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/next-hop"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/next-hop"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) NextHop() *NetworkInstance_Protocol_Static_NextHop_NextHopPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "next-hop"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Administrative Distance (preference) of the entry.  The
// preference defines the order of selection when multiple
// sources (protocols, static, etc.) contribute to the same
// prefix entry.  The lower the preference, the more preferable the
// prefix is.  When this value is not specified, the preference is
// inherited from the default preference of the implementation for
// static routes.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/preference"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Preference() *NetworkInstance_Protocol_Static_NextHop_PreferencePath {
	return &NetworkInstance_Protocol_Static_NextHop_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): Administrative Distance (preference) of the entry.  The
// preference defines the order of selection when multiple
// sources (protocols, static, etc.) contribute to the same
// prefix entry.  The lower the preference, the more preferable the
// prefix is.  When this value is not specified, the preference is
// inherited from the default preference of the implementation for
// static routes.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/preference"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Preference() *NetworkInstance_Protocol_Static_NextHop_PreferencePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Recurse (leaf): Determines whether the next-hop should be allowed to
// be looked up recursively - i.e., via a RIB entry which has
// been installed by a routing protocol, or another static route
// - rather than needing to be connected directly to an
// interface of the local system within the current network
// instance. When the interface reference specified within the
// next-hop entry is set (i.e., is not null) then forwarding is
// restricted to being via the interface specified - and
// recursion is hence disabled.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/recurse"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/recurse"
func (n *NetworkInstance_Protocol_Static_NextHopPath) Recurse() *NetworkInstance_Protocol_Static_NextHop_RecursePath {
	return &NetworkInstance_Protocol_Static_NextHop_RecursePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "recurse"},
			map[string]interface{}{},
			n,
		),
	}
}

// Recurse (leaf): Determines whether the next-hop should be allowed to
// be looked up recursively - i.e., via a RIB entry which has
// been installed by a routing protocol, or another static route
// - rather than needing to be connected directly to an
// interface of the local system within the current network
// instance. When the interface reference specified within the
// next-hop entry is set (i.e., is not null) then forwarding is
// restricted to being via the interface specified - and
// recursion is hence disabled.
// ----------------------------------------
// Defining module: "openconfig-local-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/recurse"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/state/recurse"
func (n *NetworkInstance_Protocol_Static_NextHopPathAny) Recurse() *NetworkInstance_Protocol_Static_NextHop_RecursePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_RecursePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "recurse"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfdPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny struct {
	*ygot.NodePath
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Static_NextHop_EnableBfdPath) Enabled() *NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enabled (leaf): When this leaf is set to true, BFD is used to detect the
// liveliness of the remote peer or next-hop.
// ----------------------------------------
// Defining module: "openconfig-bfd"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enabled"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/enable-bfd/state/enabled"
func (n *NetworkInstance_Protocol_Static_NextHop_EnableBfdPathAny) Enabled() *NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny {
	return &NetworkInstance_Protocol_Static_NextHop_EnableBfd_EnabledPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enabled"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath) Interface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/interface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny) Interface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPath) Subinterface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/protocols/protocol/static-routes/static/next-hops/next-hop/interface-ref/state/subinterface"
func (n *NetworkInstance_Protocol_Static_NextHop_InterfaceRefPathAny) Subinterface() *NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_Protocol_Static_NextHop_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_RouteLimitPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit YANG schema element.
type NetworkInstance_RouteLimitPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimitPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit YANG schema element.
type NetworkInstance_RouteLimitPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AfiPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/afi YANG schema element.
type NetworkInstance_RouteLimit_AfiPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AfiPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/afi YANG schema element.
type NetworkInstance_RouteLimit_AfiPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AlarmThresholdPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/alarm-threshold YANG schema element.
type NetworkInstance_RouteLimit_AlarmThresholdPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_AlarmThresholdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/alarm-threshold YANG schema element.
type NetworkInstance_RouteLimit_AlarmThresholdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_InstalledRoutesPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/installed-routes YANG schema element.
type NetworkInstance_RouteLimit_InstalledRoutesPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_InstalledRoutesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/installed-routes YANG schema element.
type NetworkInstance_RouteLimit_InstalledRoutesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_MaximumPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/maximum YANG schema element.
type NetworkInstance_RouteLimit_MaximumPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_MaximumPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/maximum YANG schema element.
type NetworkInstance_RouteLimit_MaximumPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_ThresholdExceededPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/threshold-exceeded YANG schema element.
type NetworkInstance_RouteLimit_ThresholdExceededPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_ThresholdExceededPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/threshold-exceeded YANG schema element.
type NetworkInstance_RouteLimit_ThresholdExceededPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_WarningOnlyPath represents the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/warning-only YANG schema element.
type NetworkInstance_RouteLimit_WarningOnlyPath struct {
	*ygot.NodePath
}

// NetworkInstance_RouteLimit_WarningOnlyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/route-limits/route-limit/state/warning-only YANG schema element.
type NetworkInstance_RouteLimit_WarningOnlyPathAny struct {
	*ygot.NodePath
}

// Afi (leaf): The address family for which the route limit applies.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/afi"
func (n *NetworkInstance_RouteLimitPath) Afi() *NetworkInstance_RouteLimit_AfiPath {
	return &NetworkInstance_RouteLimit_AfiPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi"},
			map[string]interface{}{},
			n,
		),
	}
}

// Afi (leaf): The address family for which the route limit applies.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/afi"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/afi"
func (n *NetworkInstance_RouteLimitPathAny) Afi() *NetworkInstance_RouteLimit_AfiPathAny {
	return &NetworkInstance_RouteLimit_AfiPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "afi"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): When specified, an alarm should be generated when the threshold
// number of installed routes is reached.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/alarm-threshold"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/alarm-threshold"
func (n *NetworkInstance_RouteLimitPath) AlarmThreshold() *NetworkInstance_RouteLimit_AlarmThresholdPath {
	return &NetworkInstance_RouteLimit_AlarmThresholdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// AlarmThreshold (leaf): When specified, an alarm should be generated when the threshold
// number of installed routes is reached.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/alarm-threshold"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/alarm-threshold"
func (n *NetworkInstance_RouteLimitPathAny) AlarmThreshold() *NetworkInstance_RouteLimit_AlarmThresholdPathAny {
	return &NetworkInstance_RouteLimit_AlarmThresholdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "alarm-threshold"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstalledRoutes (leaf): The current number of routes installed for the address family.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/installed-routes"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/installed-routes"
func (n *NetworkInstance_RouteLimitPath) InstalledRoutes() *NetworkInstance_RouteLimit_InstalledRoutesPath {
	return &NetworkInstance_RouteLimit_InstalledRoutesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "installed-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// InstalledRoutes (leaf): The current number of routes installed for the address family.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/installed-routes"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/installed-routes"
func (n *NetworkInstance_RouteLimitPathAny) InstalledRoutes() *NetworkInstance_RouteLimit_InstalledRoutesPathAny {
	return &NetworkInstance_RouteLimit_InstalledRoutesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "installed-routes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Maximum (leaf): The maximum number of routes for the address family. The
// system should not install more than maximum number of
// prefixes into the RIB unless the warning-only leaf is specified.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/maximum"
func (n *NetworkInstance_RouteLimitPath) Maximum() *NetworkInstance_RouteLimit_MaximumPath {
	return &NetworkInstance_RouteLimit_MaximumPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum"},
			map[string]interface{}{},
			n,
		),
	}
}

// Maximum (leaf): The maximum number of routes for the address family. The
// system should not install more than maximum number of
// prefixes into the RIB unless the warning-only leaf is specified.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/maximum"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/maximum"
func (n *NetworkInstance_RouteLimitPathAny) Maximum() *NetworkInstance_RouteLimit_MaximumPathAny {
	return &NetworkInstance_RouteLimit_MaximumPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "maximum"},
			map[string]interface{}{},
			n,
		),
	}
}

// ThresholdExceeded (leaf): This leaf should be set to true in the case that the threshold
// number of routes has been exceeded.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/threshold-exceeded"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/threshold-exceeded"
func (n *NetworkInstance_RouteLimitPath) ThresholdExceeded() *NetworkInstance_RouteLimit_ThresholdExceededPath {
	return &NetworkInstance_RouteLimit_ThresholdExceededPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "threshold-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// ThresholdExceeded (leaf): This leaf should be set to true in the case that the threshold
// number of routes has been exceeded.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/threshold-exceeded"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/threshold-exceeded"
func (n *NetworkInstance_RouteLimitPathAny) ThresholdExceeded() *NetworkInstance_RouteLimit_ThresholdExceededPathAny {
	return &NetworkInstance_RouteLimit_ThresholdExceededPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "threshold-exceeded"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningOnly (leaf): When specified, the route limit specified is considered only as
// a warning - and routes should continue to be installed into the
// RIB over the limit specified in the maximum leaf.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-only"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/warning-only"
func (n *NetworkInstance_RouteLimitPath) WarningOnly() *NetworkInstance_RouteLimit_WarningOnlyPath {
	return &NetworkInstance_RouteLimit_WarningOnlyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// WarningOnly (leaf): When specified, the route limit specified is considered only as
// a warning - and routes should continue to be installed into the
// RIB over the limit specified in the maximum leaf.
// ----------------------------------------
// Defining module: "openconfig-network-instance-l3"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/warning-only"
// Path from root: "/network-instances/network-instance/route-limits/route-limit/state/warning-only"
func (n *NetworkInstance_RouteLimitPathAny) WarningOnly() *NetworkInstance_RouteLimit_WarningOnlyPathAny {
	return &NetworkInstance_RouteLimit_WarningOnlyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "warning-only"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRoutingPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing YANG schema element.
type NetworkInstance_SegmentRoutingPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRoutingPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing YANG schema element.
type NetworkInstance_SegmentRoutingPathAny struct {
	*ygot.NodePath
}

// SrgbAny (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) SrgbAny() *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// SrgbAny (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) SrgbAny() *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// Srgb (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPath) Srgb(LocalId string) *NetworkInstance_SegmentRouting_SrgbPath {
	return &NetworkInstance_SegmentRouting_SrgbPath{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// Srgb (list): A single definition of an SRGB which may comprise of multiple
// sets of dataplane addresses (IPv6 addresses, or MPLS labels).
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srgbs/srgb"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPathAny) Srgb(LocalId string) *NetworkInstance_SegmentRouting_SrgbPathAny {
	return &NetworkInstance_SegmentRouting_SrgbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srgbs", "srgb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// SrlbAny (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) SrlbAny() *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// SrlbAny (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) SrlbAny() *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": "*"},
			n,
		),
	}
}

// Srlb (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPath) Srlb(LocalId string) *NetworkInstance_SegmentRouting_SrlbPath {
	return &NetworkInstance_SegmentRouting_SrlbPath{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// Srlb (list): A definition of a Segment Routing Local Block, defined to be
// a set of Segment Identifiers (specified as MPLS labels or
// IPv6 addreses) that are defined for local allocation by the
// system. A block may optionally be advertised into an IGP.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "srlbs/srlb"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb"
// LocalId: string
func (n *NetworkInstance_SegmentRoutingPathAny) Srlb(LocalId string) *NetworkInstance_SegmentRouting_SrlbPathAny {
	return &NetworkInstance_SegmentRouting_SrlbPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"srlbs", "srlb"},
			map[string]interface{}{"local-id": LocalId},
			n,
		),
	}
}

// TePolicyAny (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color (wildcarded): uint32
// Endpoint (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) TePolicyAny() *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": "*", "endpoint": "*"},
			n,
		),
	}
}

// TePolicyAny (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color (wildcarded): uint32
// Endpoint (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) TePolicyAny() *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": "*", "endpoint": "*"},
			n,
		),
	}
}

// TePolicyAnyEndpoint (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color: uint32
// Endpoint (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPath) TePolicyAnyEndpoint(Color uint32) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": Color, "endpoint": "*"},
			n,
		),
	}
}

// TePolicyAnyEndpoint (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color: uint32
// Endpoint (wildcarded): string
func (n *NetworkInstance_SegmentRoutingPathAny) TePolicyAnyEndpoint(Color uint32) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": Color, "endpoint": "*"},
			n,
		),
	}
}

// TePolicyAnyColor (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color (wildcarded): uint32
// Endpoint: string
func (n *NetworkInstance_SegmentRoutingPath) TePolicyAnyColor(Endpoint string) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": "*", "endpoint": Endpoint},
			n,
		),
	}
}

// TePolicyAnyColor (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color (wildcarded): uint32
// Endpoint: string
func (n *NetworkInstance_SegmentRoutingPathAny) TePolicyAnyColor(Endpoint string) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": "*", "endpoint": Endpoint},
			n,
		),
	}
}

// TePolicy (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color: uint32
// Endpoint: string
func (n *NetworkInstance_SegmentRoutingPath) TePolicy(Color uint32, Endpoint string) *NetworkInstance_SegmentRouting_TePolicyPath {
	return &NetworkInstance_SegmentRouting_TePolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": Color, "endpoint": Endpoint},
			n,
		),
	}
}

// TePolicy (list): An individual SR-TE policy is identified by a combination
// of color and endpoint.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "te-policies/te-policy"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy"
// Color: uint32
// Endpoint: string
func (n *NetworkInstance_SegmentRoutingPathAny) TePolicy(Color uint32, Endpoint string) *NetworkInstance_SegmentRouting_TePolicyPathAny {
	return &NetworkInstance_SegmentRouting_TePolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"te-policies", "te-policy"},
			map[string]interface{}{"color": Color, "endpoint": Endpoint},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_SrgbPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb YANG schema element.
type NetworkInstance_SegmentRouting_SrgbPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_SrgbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb YANG schema element.
type NetworkInstance_SegmentRouting_SrgbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/ipv6-prefixes YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/ipv6-prefixes YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_LocalIdPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_LocalIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/mpls-label-blocks YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/mpls-label-blocks YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_SizePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/size YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_SizePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_SizePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/size YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_SizePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_UsedPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/used YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_UsedPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srgb_UsedPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srgbs/srgb/state/used YANG schema element.
type NetworkInstance_SegmentRouting_Srgb_UsedPathAny struct {
	*ygot.NodePath
}

// DataplaneType (leaf): The dataplane being used to instantiate the SRGB. When MPLS is specified
// the set of MPLS label blocks that are defined in the mpls-label-blocks
// list are used to make up the SRGB. When IPv6 is specified, the set of IPv6
// prefixes specified in the ipv6-prefixes list are used.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrgbPath) DataplaneType() *NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath {
	return &NetworkInstance_SegmentRouting_Srgb_DataplaneTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataplaneType (leaf): The dataplane being used to instantiate the SRGB. When MPLS is specified
// the set of MPLS label blocks that are defined in the mpls-label-blocks
// list are used to make up the SRGB. When IPv6 is specified, the set of IPv6
// prefixes specified in the ipv6-prefixes list are used.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) DataplaneType() *NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny {
	return &NetworkInstance_SegmentRouting_Srgb_DataplaneTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefixes (leaf-list): A list of IPv6 prefixes which are to be used for segment routing using
// the IPv6 dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-prefixes"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/ipv6-prefixes"
func (n *NetworkInstance_SegmentRouting_SrgbPath) Ipv6Prefixes() *NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath {
	return &NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefixes (leaf-list): A list of IPv6 prefixes which are to be used for segment routing using
// the IPv6 dataplane.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-prefixes"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/ipv6-prefixes"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) Ipv6Prefixes() *NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_Ipv6PrefixesPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-prefixes"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): Unique identifier for the segment routing global block on
// the local system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/local-id"
func (n *NetworkInstance_SegmentRouting_SrgbPath) LocalId() *NetworkInstance_SegmentRouting_Srgb_LocalIdPath {
	return &NetworkInstance_SegmentRouting_Srgb_LocalIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): Unique identifier for the segment routing global block on
// the local system.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/local-id"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) LocalId() *NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_LocalIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlocks (leaf-list): A list of refences to the label blocks that are used to make
// up the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label-blocks"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/mpls-label-blocks"
func (n *NetworkInstance_SegmentRouting_SrgbPath) MplsLabelBlocks() *NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath {
	return &NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlocks (leaf-list): A list of refences to the label blocks that are used to make
// up the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label-blocks"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/mpls-label-blocks"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) MplsLabelBlocks() *NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_MplsLabelBlocksPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label-blocks"},
			map[string]interface{}{},
			n,
		),
	}
}

// Size (leaf): The total number of SRGB entries that are available within the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/size"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/size"
func (n *NetworkInstance_SegmentRouting_SrgbPath) Size() *NetworkInstance_SegmentRouting_Srgb_SizePath {
	return &NetworkInstance_SegmentRouting_Srgb_SizePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "size"},
			map[string]interface{}{},
			n,
		),
	}
}

// Size (leaf): The total number of SRGB entries that are available within the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/size"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/size"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) Size() *NetworkInstance_SegmentRouting_Srgb_SizePathAny {
	return &NetworkInstance_SegmentRouting_Srgb_SizePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "size"},
			map[string]interface{}{},
			n,
		),
	}
}

// Used (leaf): The total number of SRGB entries that have already been alocated by
// protocols referencing the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/used"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/used"
func (n *NetworkInstance_SegmentRouting_SrgbPath) Used() *NetworkInstance_SegmentRouting_Srgb_UsedPath {
	return &NetworkInstance_SegmentRouting_Srgb_UsedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "used"},
			map[string]interface{}{},
			n,
		),
	}
}

// Used (leaf): The total number of SRGB entries that have already been alocated by
// protocols referencing the SRGB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/used"
// Path from root: "/network-instances/network-instance/segment-routing/srgbs/srgb/state/used"
func (n *NetworkInstance_SegmentRouting_SrgbPathAny) Used() *NetworkInstance_SegmentRouting_Srgb_UsedPathAny {
	return &NetworkInstance_SegmentRouting_Srgb_UsedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "used"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_SrlbPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb YANG schema element.
type NetworkInstance_SegmentRouting_SrlbPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_SrlbPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb YANG schema element.
type NetworkInstance_SegmentRouting_SrlbPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/dataplane-type YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/ipv6-prefix YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/ipv6-prefix YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_LocalIdPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_LocalIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/local-id YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/mpls-label-block YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/srlbs/srlb/state/mpls-label-block YANG schema element.
type NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny struct {
	*ygot.NodePath
}

// DataplaneType (leaf): The dataplane that is to be used for the Segment Routing Local Block.
// When MPLS is specified, the local block corresponds to a block of MPLS
// labels; when IPv6 is specified it corresponds to an IPv6 prefix.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrlbPath) DataplaneType() *NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath {
	return &NetworkInstance_SegmentRouting_Srlb_DataplaneTypePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// DataplaneType (leaf): The dataplane that is to be used for the Segment Routing Local Block.
// When MPLS is specified, the local block corresponds to a block of MPLS
// labels; when IPv6 is specified it corresponds to an IPv6 prefix.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dataplane-type"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/dataplane-type"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) DataplaneType() *NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny {
	return &NetworkInstance_SegmentRouting_Srlb_DataplaneTypePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dataplane-type"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefix (leaf): The IPv6 prefix that is used for the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-prefix"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/ipv6-prefix"
func (n *NetworkInstance_SegmentRouting_SrlbPath) Ipv6Prefix() *NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath {
	return &NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// Ipv6Prefix (leaf): The IPv6 prefix that is used for the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ipv6-prefix"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/ipv6-prefix"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) Ipv6Prefix() *NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_Ipv6PrefixPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ipv6-prefix"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): A unique local identifier used for the Segment Routing Local Block.
// The identifier is used when referencing the SRLB within other
// contexts.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/local-id"
func (n *NetworkInstance_SegmentRouting_SrlbPath) LocalId() *NetworkInstance_SegmentRouting_Srlb_LocalIdPath {
	return &NetworkInstance_SegmentRouting_Srlb_LocalIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// LocalId (leaf): A unique local identifier used for the Segment Routing Local Block.
// The identifier is used when referencing the SRLB within other
// contexts.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/local-id"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/local-id"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) LocalId() *NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_LocalIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "local-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlock (leaf): A reference to the MPLS label block that is used to contain the
// SIDs of the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label-block"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/mpls-label-block"
func (n *NetworkInstance_SegmentRouting_SrlbPath) MplsLabelBlock() *NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath {
	return &NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label-block"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsLabelBlock (leaf): A reference to the MPLS label block that is used to contain the
// SIDs of the SRLB.
// ----------------------------------------
// Defining module: "openconfig-segment-routing"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-label-block"
// Path from root: "/network-instances/network-instance/segment-routing/srlbs/srlb/state/mpls-label-block"
func (n *NetworkInstance_SegmentRouting_SrlbPathAny) MplsLabelBlock() *NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny {
	return &NetworkInstance_SegmentRouting_Srlb_MplsLabelBlockPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-label-block"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicyPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy YANG schema element.
type NetworkInstance_SegmentRouting_TePolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy YANG schema element.
type NetworkInstance_SegmentRouting_TePolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActivePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActivePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActiveSincePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-since YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActiveSincePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActiveSincePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-since YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActiveSincePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-transitions YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-transitions YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_BsidPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/bsid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_BsidPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_BsidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/bsid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_BsidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ColorPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/color YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ColorPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_ColorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/color YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_ColorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_EndpointPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/endpoint YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_EndpointPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_EndpointPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/endpoint YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_EndpointPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_NamePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/name YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/name YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_NamePathAny struct {
	*ygot.NodePath
}

// Active (leaf): A SR-TE policy is marked as active when at least one of its
// candidate paths is valid/active and the policy has been
// instantiated in the forwarding plane.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Active() *NetworkInstance_SegmentRouting_TePolicy_ActivePath {
	return &NetworkInstance_SegmentRouting_TePolicy_ActivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// Active (leaf): A SR-TE policy is marked as active when at least one of its
// candidate paths is valid/active and the policy has been
// instantiated in the forwarding plane.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Active() *NetworkInstance_SegmentRouting_TePolicy_ActivePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_ActivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveSince (leaf): Indication of the time the policy transitioned to the active
// state.
//
// The value is the timestamp in nanoseconds relative to the Unix
// Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-since"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-since"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) ActiveSince() *NetworkInstance_SegmentRouting_TePolicy_ActiveSincePath {
	return &NetworkInstance_SegmentRouting_TePolicy_ActiveSincePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-since"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveSince (leaf): Indication of the time the policy transitioned to the active
// state.
//
// The value is the timestamp in nanoseconds relative to the Unix
// Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-since"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-since"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) ActiveSince() *NetworkInstance_SegmentRouting_TePolicy_ActiveSincePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_ActiveSincePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-since"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveTransitions (leaf): The number of transitions to active state for the policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-transitions"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-transitions"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) ActiveTransitions() *NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveTransitions (leaf): The number of transitions to active state for the policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-transitions"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/active-transitions"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) ActiveTransitions() *NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_ActiveTransitionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bsid (leaf): The Binding SID (BSID) assigned to the SR-TE policy,
// expressed as an MPLS label or IPv6 address. Packets that are
// ingress to the system with active segment matching the SID
// value specified in this leaf should be forwarded according
// to the policy. The specified Binding SID must be removed
// from the segment list by the system.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bsid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/bsid"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Bsid() *NetworkInstance_SegmentRouting_TePolicy_BsidPath {
	return &NetworkInstance_SegmentRouting_TePolicy_BsidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bsid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Bsid (leaf): The Binding SID (BSID) assigned to the SR-TE policy,
// expressed as an MPLS label or IPv6 address. Packets that are
// ingress to the system with active segment matching the SID
// value specified in this leaf should be forwarded according
// to the policy. The specified Binding SID must be removed
// from the segment list by the system.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/bsid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/bsid"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Bsid() *NetworkInstance_SegmentRouting_TePolicy_BsidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_BsidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "bsid"},
			map[string]interface{}{},
			n,
		),
	}
}

// CandidatePathAny (list): An individual candidate path within the list of candidate
// paths associated with this SR-TE policy. It is uniquely
// identified by the combination of protocol-origin,
// originator and discriminator
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "candidate-paths/candidate-path"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) CandidatePathAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"candidate-paths", "candidate-path"},
			map[string]interface{}{"protocol-origin": "*", "originator-asn": "*", "originator-addr": "*", "discriminator": "*"},
			n,
		),
	}
}

// CandidatePathAny (list): An individual candidate path within the list of candidate
// paths associated with this SR-TE policy. It is uniquely
// identified by the combination of protocol-origin,
// originator and discriminator
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "candidate-paths/candidate-path"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) CandidatePathAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"candidate-paths", "candidate-path"},
			map[string]interface{}{"protocol-origin": "*", "originator-asn": "*", "originator-addr": "*", "discriminator": "*"},
			n,
		),
	}
}

// WithProtocolOrigin sets NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny's key "protocol-origin" to the specified value.
// ProtocolOrigin: oc.E_SegmentRoutingTypes_SrteProtocolType
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) WithProtocolOrigin(ProtocolOrigin oc.E_SegmentRoutingTypes_SrteProtocolType) *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	ygot.ModifyKey(n.NodePath, "protocol-origin", ProtocolOrigin)
	return n
}

// WithOriginatorAsn sets NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny's key "originator-asn" to the specified value.
// OriginatorAsn: uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) WithOriginatorAsn(OriginatorAsn uint32) *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	ygot.ModifyKey(n.NodePath, "originator-asn", OriginatorAsn)
	return n
}

// WithOriginatorAddr sets NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny's key "originator-addr" to the specified value.
// OriginatorAddr: string
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) WithOriginatorAddr(OriginatorAddr string) *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	ygot.ModifyKey(n.NodePath, "originator-addr", OriginatorAddr)
	return n
}

// WithDiscriminator sets NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny's key "discriminator" to the specified value.
// Discriminator: uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) WithDiscriminator(Discriminator uint32) *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny {
	ygot.ModifyKey(n.NodePath, "discriminator", Discriminator)
	return n
}

// Color (leaf): When the policy is used for RIB resolution to a specific
// Segment Routing Traffic Engineering path, the policy is used
// when the color required in the policy (which may be specified
// based on the value of a BGP extended colour community) matches
// the value of this leaf. The color being set to 0 indicates
// that the colour is a wildcard in the policy resolution.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/color"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/color"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Color() *NetworkInstance_SegmentRouting_TePolicy_ColorPath {
	return &NetworkInstance_SegmentRouting_TePolicy_ColorPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "color"},
			map[string]interface{}{},
			n,
		),
	}
}

// Color (leaf): When the policy is used for RIB resolution to a specific
// Segment Routing Traffic Engineering path, the policy is used
// when the color required in the policy (which may be specified
// based on the value of a BGP extended colour community) matches
// the value of this leaf. The color being set to 0 indicates
// that the colour is a wildcard in the policy resolution.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/color"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/color"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Color() *NetworkInstance_SegmentRouting_TePolicy_ColorPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_ColorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "color"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): A collection of counters on the policy level. They
// count the total traffic forwarded by the policy,
// regardless of its installation source. The counters
// should be persistent across policy state changes and
// switches between active protocols.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Counters() *NetworkInstance_SegmentRouting_TePolicy_CountersPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): A collection of counters on the policy level. They
// count the total traffic forwarded by the policy,
// regardless of its installation source. The counters
// should be persistent across policy state changes and
// switches between active protocols.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Counters() *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Endpoint (leaf): When the policy is used for RIB resolution to a Segment
// Routing Traffic Engineering path, the policy is used when the
// required endpoint (which may be the protocol next-hop) matches
// the endpoint address specified in this leaf. When the leaf is
// set to all zeros (0.0.0.0 or ::), the endpoint acts as a
// wildcard in the policy resolution.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/endpoint"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/endpoint"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Endpoint() *NetworkInstance_SegmentRouting_TePolicy_EndpointPath {
	return &NetworkInstance_SegmentRouting_TePolicy_EndpointPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "endpoint"},
			map[string]interface{}{},
			n,
		),
	}
}

// Endpoint (leaf): When the policy is used for RIB resolution to a Segment
// Routing Traffic Engineering path, the policy is used when the
// required endpoint (which may be the protocol next-hop) matches
// the endpoint address specified in this leaf. When the leaf is
// set to all zeros (0.0.0.0 or ::), the endpoint acts as a
// wildcard in the policy resolution.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/endpoint"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/endpoint"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Endpoint() *NetworkInstance_SegmentRouting_TePolicy_EndpointPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_EndpointPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "endpoint"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The user friendly SR-TE policy name.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/name"
func (n *NetworkInstance_SegmentRouting_TePolicyPath) Name() *NetworkInstance_SegmentRouting_TePolicy_NamePath {
	return &NetworkInstance_SegmentRouting_TePolicy_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The user friendly SR-TE policy name.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/name"
func (n *NetworkInstance_SegmentRouting_TePolicyPathAny) Name() *NetworkInstance_SegmentRouting_TePolicy_NamePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-since YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-since YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-transitions YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-transitions YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/discriminator YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/discriminator YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/enlp YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/enlp YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/name YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/name YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-addr YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-addr YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-asn YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-asn YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/preference YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/preference YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/protocol-origin YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/protocol-origin YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/valid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/valid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPathAny struct {
	*ygot.NodePath
}

// Active (leaf): A candidate path is active when it is valid and it is
// determined to be the best path of the SR-TE Policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Active() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// Active (leaf): A candidate path is active when it is valid and it is
// determined to be the best path of the SR-TE Policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Active() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActivePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveSince (leaf): Indication of the time the path transitioned to the active
// state.
//
// The value is the timestamp in nanoseconds relative to the
// Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-since"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-since"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) ActiveSince() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-since"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveSince (leaf): Indication of the time the path transitioned to the active
// state.
//
// The value is the timestamp in nanoseconds relative to the
// Unix Epoch (Jan 1, 1970 00:00:00 UTC).
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-since"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-since"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) ActiveSince() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveSincePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-since"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveTransitions (leaf): The number of transitions to active state for the candidate
// path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-transitions"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-transitions"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) ActiveTransitions() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// ActiveTransitions (leaf): The number of transitions to active state for the candidate
// path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/active-transitions"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/active-transitions"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) ActiveTransitions() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ActiveTransitionsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "active-transitions"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discriminator (leaf): A 32 bit value uniquely identifying the path within the
// context of a policy learnt from a protocol.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/discriminator"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/discriminator"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Discriminator() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "discriminator"},
			map[string]interface{}{},
			n,
		),
	}
}

// Discriminator (leaf): A 32 bit value uniquely identifying the path within the
// context of a policy learnt from a protocol.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/discriminator"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/discriminator"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Discriminator() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_DiscriminatorPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "discriminator"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enlp (leaf): ENLP (Explicit NULL Label Policy) indicates whether Explicit
// NULL labels are to be pushed on unlabeled IP packets that are
// being steered into a given SR policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enlp"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/enlp"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Enlp() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enlp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Enlp (leaf): ENLP (Explicit NULL Label Policy) indicates whether Explicit
// NULL labels are to be pushed on unlabeled IP packets that are
// being steered into a given SR policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/enlp"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/enlp"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Enlp() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_EnlpPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "enlp"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The user friendly SR-TE candidate path name.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/name"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Name() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): The user friendly SR-TE candidate path name.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/name"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Name() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorAddr (leaf): The address of the node originating the candidate path.
// Address in IPv4 can be represented as IPv6-encoded-IPv4 e.g.
// ::FFFF:192.168.1.2 or a normal IPv6 address with the lowest
// 32 bits carrying the actual IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-addr"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-addr"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) OriginatorAddr() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-addr"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorAddr (leaf): The address of the node originating the candidate path.
// Address in IPv4 can be represented as IPv6-encoded-IPv4 e.g.
// ::FFFF:192.168.1.2 or a normal IPv6 address with the lowest
// 32 bits carrying the actual IPv4 address.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-addr"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-addr"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) OriginatorAddr() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAddrPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-addr"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorAsn (leaf): The autonomous system that node originating the candidate
// path locates.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-asn"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-asn"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) OriginatorAsn() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-asn"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginatorAsn (leaf): The autonomous system that node originating the candidate
// path locates.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/originator-asn"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/originator-asn"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) OriginatorAsn() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_OriginatorAsnPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "originator-asn"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): When there are multiple candidate paths specified a
// particular SR-TE policy. The preference is used to resolve
// between them. And the one with higher preference is
// preferred.
// These paths may be learnt from a dynamic routing protocol,
// or interface to the device, or from other static entries
// configured on the system.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/preference"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Preference() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// Preference (leaf): When there are multiple candidate paths specified a
// particular SR-TE policy. The preference is used to resolve
// between them. And the one with higher preference is
// preferred.
// These paths may be learnt from a dynamic routing protocol,
// or interface to the device, or from other static entries
// configured on the system.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/preference"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/preference"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Preference() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_PreferencePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "preference"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtocolOrigin (leaf): The component or protocol that originates or signals the
// candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol-origin"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/protocol-origin"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) ProtocolOrigin() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol-origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProtocolOrigin (leaf): The component or protocol that originates or signals the
// candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol-origin"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/protocol-origin"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) ProtocolOrigin() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ProtocolOriginPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol-origin"},
			map[string]interface{}{},
			n,
		),
	}
}

// SegmentListAny (list): An individual segment list within the list of segment
// lists associated with this candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list"
// Id (wildcarded): uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) SegmentListAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// SegmentListAny (list): An individual segment list within the list of segment
// lists associated with this candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list"
// Id (wildcarded): uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) SegmentListAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"id": "*"},
			n,
		),
	}
}

// SegmentList (list): An individual segment list within the list of segment
// lists associated with this candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list"
// Id: uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) SegmentList(Id uint32) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// SegmentList (list): An individual segment list within the list of segment
// lists associated with this candidate path.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "segment-lists/segment-list"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list"
// Id: uint32
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) SegmentList(Id uint32) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"segment-lists", "segment-list"},
			map[string]interface{}{"id": Id},
			n,
		),
	}
}

// Valid (leaf): A path should be marked as valid when it is usable e.g. the
// at least one segment-list is valid even though the path may
// not be the best.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/valid"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPath) Valid() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Valid (leaf): A path should be marked as valid when it is usable e.g. the
// at least one segment-list is valid even though the path may
// not be the best.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/state/valid"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePathPathAny) Valid() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_ValidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/id YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/id YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/invalid-reason YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/invalid-reason YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/valid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/valid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/weight YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/weight YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPathAny struct {
	*ygot.NodePath
}

// Counters (container): The counters of traffic steered to the segment-list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Counters() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): The counters of traffic steered to the segment-list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Counters() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique id identifying the segment-list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/id"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Id() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): A unique id identifying the segment-list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/id"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/id"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Id() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If a segment-list is marked as invalid, this leaf should
// indicate the reason.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/invalid-reason"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) InvalidReason() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// InvalidReason (leaf): If a segment-list is marked as invalid, this leaf should
// indicate the reason.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/invalid-reason"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/invalid-reason"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) InvalidReason() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_InvalidReasonPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "invalid-reason"},
			map[string]interface{}{},
			n,
		),
	}
}

// NextHopAny (list): A next-hop the segment list is resolved to.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop"
// Index (wildcarded): uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) NextHopAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHopAny (list): A next-hop the segment list is resolved to.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop"
// Index (wildcarded): uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) NextHopAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// NextHop (list): A next-hop the segment list is resolved to.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop"
// Index: uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) NextHop(Index uint64) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// NextHop (list): A next-hop the segment list is resolved to.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "next-hops/next-hop"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop"
// Index: uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) NextHop(Index uint64) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"next-hops", "next-hop"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// SidAny (list): List of SIDs that make up the segment list. The segment
// list is formed by ordering the set of SIDs that are
// specified by their index in ascending numerical order.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sids/sid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid"
// Index (wildcarded): uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) SidAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sids", "sid"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// SidAny (list): List of SIDs that make up the segment list. The segment
// list is formed by ordering the set of SIDs that are
// specified by their index in ascending numerical order.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sids/sid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid"
// Index (wildcarded): uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) SidAny() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sids", "sid"},
			map[string]interface{}{"index": "*"},
			n,
		),
	}
}

// Sid (list): List of SIDs that make up the segment list. The segment
// list is formed by ordering the set of SIDs that are
// specified by their index in ascending numerical order.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sids/sid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid"
// Index: uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Sid(Index uint64) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath{
		NodePath: ygot.NewNodePath(
			[]string{"sids", "sid"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Sid (list): List of SIDs that make up the segment list. The segment
// list is formed by ordering the set of SIDs that are
// specified by their index in ascending numerical order.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "sids/sid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid"
// Index: uint64
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Sid(Index uint64) *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"sids", "sid"},
			map[string]interface{}{"index": Index},
			n,
		),
	}
}

// Valid (leaf): The validity of a segment-list should marked as true
// when it is usable.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/valid"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Valid() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Valid (leaf): The validity of a segment-list should marked as true
// when it is usable.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/valid"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/valid"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Valid() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_ValidPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "valid"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the segment list within the set of
// segment lists specified for the candidate path. The
// traffic that is forwarded according to the policy is
// distributed across the set of segment-lists such that
// each list receives weight/(sum of all weights) traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/weight"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPath) Weight() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// Weight (leaf): The weight of the segment list within the set of
// segment lists specified for the candidate path. The
// traffic that is forwarded according to the policy is
// distributed across the set of segment-lists such that
// each list receives weight/(sum of all weights) traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/weight"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/weight"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentListPathAny) Weight() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_WeightPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "weight"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPathAny struct {
	*ygot.NodePath
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutLabeledPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes steered
// to the segment list. The counter includes both labeled and
// unlabeled steerted traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes steered
// to the segment list. The counter includes both labeled and
// unlabeled steerted traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets steered to the
// segment list. The counter includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPath) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets steered to the
// segment list. The counter includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_CountersPathAny) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Counters_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/decapsulate-header YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/decapsulate-header YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/encapsulate-header YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/encapsulate-header YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/ip-address YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/ip-address YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/mac-address YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/mac-address YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/origin-protocol YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/origin-protocol YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pop-top-label YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pop-top-label YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/programmed-index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/programmed-index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pushed-mpls-label-stack YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pushed-mpls-label-stack YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPathAny struct {
	*ygot.NodePath
}

// Counters (container): The counters of traffic steered to the segment-list on
// per next-hop basis.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) Counters() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// Counters (container): The counters of traffic steered to the segment-list on
// per next-hop basis.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/counters"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) Counters() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "counters"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateHeader (leaf): When forwarding a packet to the specified next-hop, the local
// system performs a decapsulation of the packet - removing the
// specified header type. In the case that no next-hop is
// specified, the packet header is removed, and a subsequent
// forwarding lookup is performed on the packet encapsulated
// within the header, matched within the relevant AFT within the
// specified network-instance.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/decapsulate-header"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/decapsulate-header"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) DecapsulateHeader() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "decapsulate-header"},
			map[string]interface{}{},
			n,
		),
	}
}

// DecapsulateHeader (leaf): When forwarding a packet to the specified next-hop, the local
// system performs a decapsulation of the packet - removing the
// specified header type. In the case that no next-hop is
// specified, the packet header is removed, and a subsequent
// forwarding lookup is performed on the packet encapsulated
// within the header, matched within the relevant AFT within the
// specified network-instance.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/decapsulate-header"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/decapsulate-header"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) DecapsulateHeader() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_DecapsulateHeaderPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "decapsulate-header"},
			map[string]interface{}{},
			n,
		),
	}
}

// EncapsulateHeader (leaf): When forwarding a packet to the specified next-hop the local
// system performs an encapsulation of the packet - adding the
// specified header type.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/encapsulate-header"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/encapsulate-header"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) EncapsulateHeader() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "encapsulate-header"},
			map[string]interface{}{},
			n,
		),
	}
}

// EncapsulateHeader (leaf): When forwarding a packet to the specified next-hop the local
// system performs an encapsulation of the packet - adding the
// specified header type.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/encapsulate-header"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/encapsulate-header"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) EncapsulateHeader() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_EncapsulateHeaderPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "encapsulate-header"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): A unique entry for the next-hop.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) Index() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): A unique entry for the next-hop.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) Index() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) InterfaceRef() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// InterfaceRef (container): Reference to an interface or subinterface
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "interface-ref"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) InterfaceRef() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interface-ref"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpAddress (leaf): The IP address of the next-hop system.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-address"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/ip-address"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) IpAddress() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// IpAddress (leaf): The IP address of the next-hop system.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/ip-address"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/ip-address"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) IpAddress() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_IpAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "ip-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAddress (leaf): The MAC address of the next-hop if resolved by the local
// network instance.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mac-address"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/mac-address"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) MacAddress() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// MacAddress (leaf): The MAC address of the next-hop if resolved by the local
// network instance.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mac-address"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/mac-address"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) MacAddress() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_MacAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mac-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginProtocol (leaf): The protocol from which the AFT entry was learned.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/origin-protocol"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/origin-protocol"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) OriginProtocol() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// OriginProtocol (leaf): The protocol from which the AFT entry was learned.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/origin-protocol"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/origin-protocol"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) OriginProtocol() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_OriginProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "origin-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// PopTopLabel (leaf): Flag that controls pop action, i.e., the top-most MPLS label
// should be popped from the packet when switched by the system.
//
// The top-most MPLS label associated with pop action is equal to
// the label key used in 'mpls' AFT 'label-entry' list.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pop-top-label"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pop-top-label"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) PopTopLabel() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pop-top-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// PopTopLabel (leaf): Flag that controls pop action, i.e., the top-most MPLS label
// should be popped from the packet when switched by the system.
//
// The top-most MPLS label associated with pop action is equal to
// the label key used in 'mpls' AFT 'label-entry' list.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pop-top-label"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pop-top-label"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) PopTopLabel() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PopTopLabelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pop-top-label"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProgrammedIndex (leaf): In some routing protocols, or route injection mechanisms it
// is possible to set the index of the next-hop via configuration
// or the protocol itself. In some systems it may not be possible
// to maintain the index provided by an external client when
// advertising the same entry via telemetry.
//
// This leaf reflects the configured or client-supplied index of
// the next-hop. This allows a client to create an assocation or
// mapping back to the original index pushed by the client, and
// the ID used as a key in the next-hop AFT list.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/programmed-index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/programmed-index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) ProgrammedIndex() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "programmed-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// ProgrammedIndex (leaf): In some routing protocols, or route injection mechanisms it
// is possible to set the index of the next-hop via configuration
// or the protocol itself. In some systems it may not be possible
// to maintain the index provided by an external client when
// advertising the same entry via telemetry.
//
// This leaf reflects the configured or client-supplied index of
// the next-hop. This allows a client to create an assocation or
// mapping back to the original index pushed by the client, and
// the ID used as a key in the next-hop AFT list.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/programmed-index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/programmed-index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) ProgrammedIndex() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_ProgrammedIndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "programmed-index"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushedMplsLabelStack (leaf-list): The MPLS label stack imposed when forwarding packets to the
// next-hop
// - the stack is encoded as a leaf list whereby the order of the
//
//	entries is such that the first entry in the list is the
//	label at the bottom of the stack to be pushed.
//
// To this end, a packet which is to forwarded to a device using
// a service label of 42, and a transport label of 8072 will be
// represented with a label stack list of [42, 8072].
//
// The MPLS label stack list is ordered by the user, such that no
// system re-ordering of leaves is permitted by the system.
//
// A swap operation is reflected by entries in the
// popped-mpls-label-stack and pushed-mpls-label-stack nodes.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pushed-mpls-label-stack"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pushed-mpls-label-stack"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPath) PushedMplsLabelStack() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pushed-mpls-label-stack"},
			map[string]interface{}{},
			n,
		),
	}
}

// PushedMplsLabelStack (leaf-list): The MPLS label stack imposed when forwarding packets to the
// next-hop
// - the stack is encoded as a leaf list whereby the order of the
//
//	entries is such that the first entry in the list is the
//	label at the bottom of the stack to be pushed.
//
// To this end, a packet which is to forwarded to a device using
// a service label of 42, and a transport label of 8072 will be
// represented with a label stack list of [42, 8072].
//
// The MPLS label stack list is ordered by the user, such that no
// system re-ordering of leaves is permitted by the system.
//
// A swap operation is reflected by entries in the
// popped-mpls-label-stack and pushed-mpls-label-stack nodes.
// ----------------------------------------
// Defining module: "openconfig-aft-common"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/pushed-mpls-label-stack"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/pushed-mpls-label-stack"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHopPathAny) PushedMplsLabelStack() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_PushedMplsLabelStackPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "pushed-mpls-label-stack"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPathAny struct {
	*ygot.NodePath
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the segment list.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutLabeledPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes steered
// to the segment list. The counter includes both labeled and
// unlabeled steerted traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes steered
// to the segment list. The counter includes both labeled and
// unlabeled steerted traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets steered to the
// segment list. The counter includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPath) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets steered to the
// segment list. The counter includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_CountersPathAny) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_Counters_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/interface YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/subinterface YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/interface"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath) Interface() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.  If a reference to a
// subinterface is required, this leaf must be specified
// to indicate the base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/interface"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny) Interface() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/subinterface"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPath) Subinterface() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Subinterface (leaf): Reference to a subinterface -- this requires the base
// interface to be specified using the interface leaf in
// this container.  If only a reference to a base interface
// is requuired, this leaf should not be set.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/subinterface"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/next-hops/next-hop/interface-ref/state/subinterface"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRefPathAny) Subinterface() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_NextHop_InterfaceRef_SubinterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "subinterface"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/index YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-tc YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-tc YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-ttl YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-ttl YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/value YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/value YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePathAny struct {
	*ygot.NodePath
}

// Index (leaf): The index of the SID within the segment list. The segment list is
// applied by ordering the SID entries in ascending numerical order
// beginning at 0.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath) Index() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): The index of the SID within the segment list. The segment list is
// applied by ordering the SID entries in ascending numerical order
// beginning at 0.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/index"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/index"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny) Index() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTc (leaf): The value of the MPLS Traffic Class (TC) bits to be used if the
// value of the SID is an MPLS label. In the case that the value is
// set to 0, then the local implementation should choose the value.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-tc"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-tc"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath) MplsTc() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTc (leaf): The value of the MPLS Traffic Class (TC) bits to be used if the
// value of the SID is an MPLS label. In the case that the value is
// set to 0, then the local implementation should choose the value.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-tc"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-tc"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny) MplsTc() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTcPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-tc"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTtl (leaf): The TTL to be set if the type of the SID is an MPLS label. If the
// value of the TTL is set to be 0, the value is picked by the local
// implementation.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-ttl"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-ttl"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath) MplsTtl() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// MplsTtl (leaf): The TTL to be set if the type of the SID is an MPLS label. If the
// value of the TTL is set to be 0, the value is picked by the local
// implementation.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/mpls-ttl"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/mpls-ttl"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny) MplsTtl() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_MplsTtlPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "mpls-ttl"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value of the SID that is to be used. Specified as an MPLS
// label or IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/value"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPath) Value() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePath {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// Value (leaf): The value of the SID that is to be used. Specified as an MPLS
// label or IPv6 address.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/value"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/candidate-paths/candidate-path/segment-lists/segment-list/sids/sid/state/value"
func (n *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_SidPathAny) Value() *NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_CandidatePath_SegmentList_Sid_ValuePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "value"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_SegmentRouting_TePolicy_CountersPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CountersPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_CountersPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_CountersPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-octets YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPath represents the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPath struct {
	*ygot.NodePath
}

// NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-pkts YANG schema element.
type NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPathAny struct {
	*ygot.NodePath
}

// InLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the SR-TE policy. Labeled traffic carries
// an active SID (top-most SID in the stack) that matches the
// BSID associated to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) InLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InLabeledOctets (leaf): A cumulative counter of the total bytes of incoming labeled
// traffic steered to the SR-TE policy. Labeled traffic carries
// an active SID (top-most SID in the stack) that matches the
// BSID associated to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) InLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the SR-TE policy. Labeled packets carries an active SID
// (top-most SID in the stack) that matches the BSID associated
// to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) InLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InLabeledPkts (leaf): A cumulative counter of the incoming labeled packets steered
// to the SR-TE policy. Labeled packets carries an active SID
// (top-most SID in the stack) that matches the BSID associated
// to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) InLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InLabeledPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOctets (leaf): The cumulative counter of the total incoming bytes steered
// to the SR-TE policy. It includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) InOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InOctets (leaf): The cumulative counter of the total incoming bytes steered
// to the SR-TE policy. It includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) InOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the incoming packets steered to
// the SR-TE policy. It includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) InPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// InPkts (leaf): A cumulative counter of the incoming packets steered to
// the SR-TE policy. It includes both labeled and unlabeled
// steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "in-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/in-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) InPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_InPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"in-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of outgoing labeled
// traffic after being steered to the SR-TE policy. Labeled
// traffic carries an active SID (top-most SID in the stack) that
// matches the BSID associated to this policy. The counter should
// include the segments pushed to packets.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledOctets (leaf): A cumulative counter of the total bytes of outgoing labeled
// traffic after being steered to the SR-TE policy. Labeled
// traffic carries an active SID (top-most SID in the stack) that
// matches the BSID associated to this policy. The counter should
// include the segments pushed to packets.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) OutLabeledOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the outgoing labeled packets after
// being steered to the SR-TE policy. Labeled packets carries
// an active SID (top-most SID in the stack) that matches the
// BSID associated to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutLabeledPkts (leaf): A cumulative counter of the outgoing labeled packets after
// being steered to the SR-TE policy. Labeled packets carries
// an active SID (top-most SID in the stack) that matches the
// BSID associated to this policy.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-labeled-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-labeled-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) OutLabeledPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutLabeledPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-labeled-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes after
// being steered to the SR-TE policy. It includes both labeled
// and unlabeled steered traffic. The counter should include the
// segments pushed to packets.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutOctets (leaf): The cumulative counter of the total outgoing bytes after
// being steered to the SR-TE policy. It includes both labeled
// and unlabeled steered traffic. The counter should include the
// segments pushed to packets.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-octets"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-octets"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) OutOctets() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutOctetsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-octets"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets after being
// steered to the SR-TE policy. It includes both labeled and
// unlabeled steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPath) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPath {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPath{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// OutPkts (leaf): A cumulative counter of the outgoing packets after being
// steered to the SR-TE policy. It includes both labeled and
// unlabeled steered traffic.
// ----------------------------------------
// Defining module: "openconfig-srte-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "out-pkts"
// Path from root: "/network-instances/network-instance/segment-routing/te-policies/te-policy/state/counters/out-pkts"
func (n *NetworkInstance_SegmentRouting_TePolicy_CountersPathAny) OutPkts() *NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPathAny {
	return &NetworkInstance_SegmentRouting_TePolicy_Counters_OutPktsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"out-pkts"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_TablePath represents the /openconfig-network-instance/network-instances/network-instance/tables/table YANG schema element.
type NetworkInstance_TablePath struct {
	*ygot.NodePath
}

// NetworkInstance_TablePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table YANG schema element.
type NetworkInstance_TablePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Table_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/tables/table/state/address-family YANG schema element.
type NetworkInstance_Table_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_Table_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table/state/address-family YANG schema element.
type NetworkInstance_Table_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Table_ProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/tables/table/state/protocol YANG schema element.
type NetworkInstance_Table_ProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_Table_ProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/tables/table/state/protocol YANG schema element.
type NetworkInstance_Table_ProtocolPathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family (IPv4, IPv6) of the table's entries
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/tables/table/state/address-family"
func (n *NetworkInstance_TablePath) AddressFamily() *NetworkInstance_Table_AddressFamilyPath {
	return &NetworkInstance_Table_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family (IPv4, IPv6) of the table's entries
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/tables/table/state/address-family"
func (n *NetworkInstance_TablePathAny) AddressFamily() *NetworkInstance_Table_AddressFamilyPathAny {
	return &NetworkInstance_Table_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): Reference to the protocol that the table is associated with.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol"
// Path from root: "/network-instances/network-instance/tables/table/state/protocol"
func (n *NetworkInstance_TablePath) Protocol() *NetworkInstance_Table_ProtocolPath {
	return &NetworkInstance_Table_ProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// Protocol (leaf): Reference to the protocol that the table is associated with.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/protocol"
// Path from root: "/network-instances/network-instance/tables/table/state/protocol"
func (n *NetworkInstance_TablePathAny) Protocol() *NetworkInstance_Table_ProtocolPathAny {
	return &NetworkInstance_Table_ProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_TableConnectionPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection YANG schema element.
type NetworkInstance_TableConnectionPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnectionPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection YANG schema element.
type NetworkInstance_TableConnectionPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_AddressFamilyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/address-family YANG schema element.
type NetworkInstance_TableConnection_AddressFamilyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_AddressFamilyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/address-family YANG schema element.
type NetworkInstance_TableConnection_AddressFamilyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DefaultImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/default-import-policy YANG schema element.
type NetworkInstance_TableConnection_DefaultImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DefaultImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/default-import-policy YANG schema element.
type NetworkInstance_TableConnection_DefaultImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DisableMetricPropagationPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/disable-metric-propagation YANG schema element.
type NetworkInstance_TableConnection_DisableMetricPropagationPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DisableMetricPropagationPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/disable-metric-propagation YANG schema element.
type NetworkInstance_TableConnection_DisableMetricPropagationPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DstProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/dst-protocol YANG schema element.
type NetworkInstance_TableConnection_DstProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_DstProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/dst-protocol YANG schema element.
type NetworkInstance_TableConnection_DstProtocolPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_ImportPolicyPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/import-policy YANG schema element.
type NetworkInstance_TableConnection_ImportPolicyPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_ImportPolicyPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/import-policy YANG schema element.
type NetworkInstance_TableConnection_ImportPolicyPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_SrcProtocolPath represents the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/src-protocol YANG schema element.
type NetworkInstance_TableConnection_SrcProtocolPath struct {
	*ygot.NodePath
}

// NetworkInstance_TableConnection_SrcProtocolPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/table-connections/table-connection/state/src-protocol YANG schema element.
type NetworkInstance_TableConnection_SrcProtocolPathAny struct {
	*ygot.NodePath
}

// AddressFamily (leaf): The address family associated with the connection. This
// must be defined for the source protocol. The target
// address family is implicitly defined by the address family
// specified for the source protocol.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/address-family"
func (n *NetworkInstance_TableConnectionPath) AddressFamily() *NetworkInstance_TableConnection_AddressFamilyPath {
	return &NetworkInstance_TableConnection_AddressFamilyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// AddressFamily (leaf): The address family associated with the connection. This
// must be defined for the source protocol. The target
// address family is implicitly defined by the address family
// specified for the source protocol.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/address-family"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/address-family"
func (n *NetworkInstance_TableConnectionPathAny) AddressFamily() *NetworkInstance_TableConnection_AddressFamilyPathAny {
	return &NetworkInstance_TableConnection_AddressFamilyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "address-family"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/default-import-policy"
func (n *NetworkInstance_TableConnectionPath) DefaultImportPolicy() *NetworkInstance_TableConnection_DefaultImportPolicyPath {
	return &NetworkInstance_TableConnection_DefaultImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DefaultImportPolicy (leaf): explicitly set a default policy if no policy definition
// in the import policy chain is satisfied.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/default-import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/default-import-policy"
func (n *NetworkInstance_TableConnectionPathAny) DefaultImportPolicy() *NetworkInstance_TableConnection_DefaultImportPolicyPathAny {
	return &NetworkInstance_TableConnection_DefaultImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "default-import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableMetricPropagation (leaf): By default a system may reflect the metric specified in
// the destination protocol according to that which is set in
// the source protocol. For example:
// - IS-IS metric may be reflected in BGP MED (and vice versa)
// - OSPF metric may be reflected in the BGP MED (and vice versa)
// When this leaf is set to true, this reflection behaviour MUST be
// disabled, and rather the metric must be set to the default value,
// or explicitly set by policy.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-metric-propagation"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/disable-metric-propagation"
func (n *NetworkInstance_TableConnectionPath) DisableMetricPropagation() *NetworkInstance_TableConnection_DisableMetricPropagationPath {
	return &NetworkInstance_TableConnection_DisableMetricPropagationPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-metric-propagation"},
			map[string]interface{}{},
			n,
		),
	}
}

// DisableMetricPropagation (leaf): By default a system may reflect the metric specified in
// the destination protocol according to that which is set in
// the source protocol. For example:
// - IS-IS metric may be reflected in BGP MED (and vice versa)
// - OSPF metric may be reflected in the BGP MED (and vice versa)
// When this leaf is set to true, this reflection behaviour MUST be
// disabled, and rather the metric must be set to the default value,
// or explicitly set by policy.
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/disable-metric-propagation"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/disable-metric-propagation"
func (n *NetworkInstance_TableConnectionPathAny) DisableMetricPropagation() *NetworkInstance_TableConnection_DisableMetricPropagationPathAny {
	return &NetworkInstance_TableConnection_DisableMetricPropagationPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "disable-metric-propagation"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstProtocol (leaf): The destination protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dst-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/dst-protocol"
func (n *NetworkInstance_TableConnectionPath) DstProtocol() *NetworkInstance_TableConnection_DstProtocolPath {
	return &NetworkInstance_TableConnection_DstProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dst-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// DstProtocol (leaf): The destination protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/dst-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/dst-protocol"
func (n *NetworkInstance_TableConnectionPathAny) DstProtocol() *NetworkInstance_TableConnection_DstProtocolPathAny {
	return &NetworkInstance_TableConnection_DstProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "dst-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/import-policy"
func (n *NetworkInstance_TableConnectionPath) ImportPolicy() *NetworkInstance_TableConnection_ImportPolicyPath {
	return &NetworkInstance_TableConnection_ImportPolicyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// ImportPolicy (leaf-list): list of policy names in sequence to be applied on
// receiving a routing update in the current context, e.g.,
// for the current peer group, neighbor, address family,
// etc.
// ----------------------------------------
// Defining module: "openconfig-routing-policy"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/import-policy"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/import-policy"
func (n *NetworkInstance_TableConnectionPathAny) ImportPolicy() *NetworkInstance_TableConnection_ImportPolicyPathAny {
	return &NetworkInstance_TableConnection_ImportPolicyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "import-policy"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcProtocol (leaf): The source protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/src-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/src-protocol"
func (n *NetworkInstance_TableConnectionPath) SrcProtocol() *NetworkInstance_TableConnection_SrcProtocolPath {
	return &NetworkInstance_TableConnection_SrcProtocolPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "src-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// SrcProtocol (leaf): The source protocol for the table connection
// ----------------------------------------
// Defining module: "openconfig-network-instance"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/src-protocol"
// Path from root: "/network-instances/network-instance/table-connections/table-connection/state/src-protocol"
func (n *NetworkInstance_TableConnectionPathAny) SrcProtocol() *NetworkInstance_TableConnection_SrcProtocolPathAny {
	return &NetworkInstance_TableConnection_SrcProtocolPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "src-protocol"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_VlanPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan YANG schema element.
type NetworkInstance_VlanPath struct {
	*ygot.NodePath
}

// NetworkInstance_VlanPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan YANG schema element.
type NetworkInstance_VlanPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_NamePath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/name YANG schema element.
type NetworkInstance_Vlan_NamePath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_NamePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/name YANG schema element.
type NetworkInstance_Vlan_NamePathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_StatusPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/status YANG schema element.
type NetworkInstance_Vlan_StatusPath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_StatusPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/status YANG schema element.
type NetworkInstance_Vlan_StatusPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_VlanIdPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/vlan-id YANG schema element.
type NetworkInstance_Vlan_VlanIdPath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_VlanIdPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/state/vlan-id YANG schema element.
type NetworkInstance_Vlan_VlanIdPathAny struct {
	*ygot.NodePath
}

// Name (leaf): Interface VLAN name.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/name"
func (n *NetworkInstance_VlanPath) Name() *NetworkInstance_Vlan_NamePath {
	return &NetworkInstance_Vlan_NamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Name (leaf): Interface VLAN name.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/name"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/name"
func (n *NetworkInstance_VlanPathAny) Name() *NetworkInstance_Vlan_NamePathAny {
	return &NetworkInstance_Vlan_NamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "name"},
			map[string]interface{}{},
			n,
		),
	}
}

// Status (leaf): Admin state of the VLAN
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/status"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/status"
func (n *NetworkInstance_VlanPath) Status() *NetworkInstance_Vlan_StatusPath {
	return &NetworkInstance_Vlan_StatusPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "status"},
			map[string]interface{}{},
			n,
		),
	}
}

// Status (leaf): Admin state of the VLAN
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/status"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/status"
func (n *NetworkInstance_VlanPathAny) Status() *NetworkInstance_Vlan_StatusPathAny {
	return &NetworkInstance_Vlan_StatusPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "status"},
			map[string]interface{}{},
			n,
		),
	}
}

// VlanId (leaf): Interface VLAN id.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/vlan-id"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/vlan-id"
func (n *NetworkInstance_VlanPath) VlanId() *NetworkInstance_Vlan_VlanIdPath {
	return &NetworkInstance_Vlan_VlanIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vlan-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// VlanId (leaf): Interface VLAN id.
// ----------------------------------------
// Defining module: "openconfig-vlan"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/vlan-id"
// Path from root: "/network-instances/network-instance/vlans/vlan/state/vlan-id"
func (n *NetworkInstance_VlanPathAny) VlanId() *NetworkInstance_Vlan_VlanIdPathAny {
	return &NetworkInstance_Vlan_VlanIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "vlan-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// NetworkInstance_Vlan_MemberPath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/members/member YANG schema element.
type NetworkInstance_Vlan_MemberPath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_MemberPathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/members/member YANG schema element.
type NetworkInstance_Vlan_MemberPathAny struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_Member_InterfacePath represents the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/members/member/state/interface YANG schema element.
type NetworkInstance_Vlan_Member_InterfacePath struct {
	*ygot.NodePath
}

// NetworkInstance_Vlan_Member_InterfacePathAny represents the wildcard version of the /openconfig-network-instance/network-instances/network-instance/vlans/vlan/members/member/state/interface YANG schema element.
type NetworkInstance_Vlan_Member_InterfacePathAny struct {
	*ygot.NodePath
}

// Interface (leaf): Reference to a base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/vlans/vlan/members/member/state/interface"
func (n *NetworkInstance_Vlan_MemberPath) Interface() *NetworkInstance_Vlan_Member_InterfacePath {
	return &NetworkInstance_Vlan_Member_InterfacePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interface (leaf): Reference to a base interface.
// ----------------------------------------
// Defining module: "openconfig-interfaces"
// Instantiating module: "openconfig-network-instance"
// Path from parent: "state/interface"
// Path from root: "/network-instances/network-instance/vlans/vlan/members/member/state/interface"
func (n *NetworkInstance_Vlan_MemberPathAny) Interface() *NetworkInstance_Vlan_Member_InterfacePathAny {
	return &NetworkInstance_Vlan_Member_InterfacePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "interface"},
			map[string]interface{}{},
			n,
		),
	}
}
