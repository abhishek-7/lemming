/*
Package system is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by /usr/local/google/home/robjs/go/pkg/mod/github.com/openconfig/ygot@v0.24.2/genutil/names.go
using the following YANG input files:
  - public/release/models/acl/openconfig-acl.yang
  - public/release/models/acl/openconfig-packet-match.yang
  - public/release/models/aft/openconfig-aft.yang
  - public/release/models/bfd/openconfig-bfd.yang
  - public/release/models/bgp/openconfig-bgp-policy.yang
  - public/release/models/bgp/openconfig-bgp-types.yang
  - public/release/models/interfaces/openconfig-if-aggregate.yang
  - public/release/models/interfaces/openconfig-if-ethernet.yang
  - public/release/models/interfaces/openconfig-if-ip-ext.yang
  - public/release/models/interfaces/openconfig-if-ip.yang
  - public/release/models/interfaces/openconfig-interfaces.yang
  - public/release/models/isis/openconfig-isis.yang
  - public/release/models/lacp/openconfig-lacp.yang
  - public/release/models/lldp/openconfig-lldp-types.yang
  - public/release/models/lldp/openconfig-lldp.yang
  - public/release/models/local-routing/openconfig-local-routing.yang
  - public/release/models/mpls/openconfig-mpls-types.yang
  - public/release/models/multicast/openconfig-pim.yang
  - public/release/models/network-instance/openconfig-network-instance.yang
  - public/release/models/openconfig-extensions.yang
  - public/release/models/optical-transport/openconfig-transport-types.yang
  - public/release/models/ospf/openconfig-ospfv2.yang
  - public/release/models/platform/openconfig-platform-cpu.yang
  - public/release/models/platform/openconfig-platform-integrated-circuit.yang
  - public/release/models/platform/openconfig-platform-software.yang
  - public/release/models/platform/openconfig-platform-transceiver.yang
  - public/release/models/platform/openconfig-platform.yang
  - public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
  - public/release/models/policy/openconfig-policy-types.yang
  - public/release/models/qos/openconfig-qos-elements.yang
  - public/release/models/qos/openconfig-qos-interfaces.yang
  - public/release/models/qos/openconfig-qos-types.yang
  - public/release/models/qos/openconfig-qos.yang
  - public/release/models/rib/openconfig-rib-bgp.yang
  - public/release/models/segment-routing/openconfig-segment-routing-types.yang
  - public/release/models/system/openconfig-system.yang
  - public/release/models/types/openconfig-inet-types.yang
  - public/release/models/types/openconfig-types.yang
  - public/release/models/types/openconfig-yang-types.yang
  - public/release/models/vlan/openconfig-vlan.yang
  - public/third_party/ietf/iana-if-type.yang
  - public/third_party/ietf/ietf-inet-types.yang
  - public/third_party/ietf/ietf-interfaces.yang
  - public/third_party/ietf/ietf-yang-types.yang

Imported modules were sourced from:
  - public/release/models/...
  - public/third_party/ietf/...
*/
package system

import (
	"github.com/openconfig/ygot/ygot"
)

// System_Aaa_ServerGroup_Server_Radius_CountersPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_CountersPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_CountersPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_CountersPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests YANG schema element.
type System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPathAny struct {
	*ygot.NodePath
}

// AccessAccepts (leaf): Received Access-Accept messages.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "access-accepts"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPath) AccessAccepts() *System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPath {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPath{
		NodePath: ygot.NewNodePath(
			[]string{"access-accepts"},
			map[string]interface{}{},
			n,
		),
	}
}

// AccessAccepts (leaf): Received Access-Accept messages.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "access-accepts"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPathAny) AccessAccepts() *System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_AccessAcceptsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"access-accepts"},
			map[string]interface{}{},
			n,
		),
	}
}

// AccessRejects (leaf): Received Access-Reject messages.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "access-rejects"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPath) AccessRejects() *System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPath {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPath{
		NodePath: ygot.NewNodePath(
			[]string{"access-rejects"},
			map[string]interface{}{},
			n,
		),
	}
}

// AccessRejects (leaf): Received Access-Reject messages.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "access-rejects"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPathAny) AccessRejects() *System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_AccessRejectsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"access-rejects"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetriedAccessRequests (leaf): Retransmitted Access-Request messages.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "retried-access-requests"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPath) RetriedAccessRequests() *System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPath {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPath{
		NodePath: ygot.NewNodePath(
			[]string{"retried-access-requests"},
			map[string]interface{}{},
			n,
		),
	}
}

// RetriedAccessRequests (leaf): Retransmitted Access-Request messages.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "retried-access-requests"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPathAny) RetriedAccessRequests() *System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_RetriedAccessRequestsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"retried-access-requests"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimeoutAccessRequests (leaf): Access-Request messages that have timed-out,
// requiring retransmission.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "timeout-access-requests"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPath) TimeoutAccessRequests() *System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPath {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPath{
		NodePath: ygot.NewNodePath(
			[]string{"timeout-access-requests"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimeoutAccessRequests (leaf): Access-Request messages that have timed-out,
// requiring retransmission.
// ----------------------------------------
// Defining module: "openconfig-aaa-radius"
// Instantiating module: "openconfig-system"
// Path from parent: "timeout-access-requests"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests"
func (n *System_Aaa_ServerGroup_Server_Radius_CountersPathAny) TimeoutAccessRequests() *System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPathAny {
	return &System_Aaa_ServerGroup_Server_Radius_Counters_TimeoutAccessRequestsPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"timeout-access-requests"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Aaa_ServerGroup_Server_TacacsPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs YANG schema element.
type System_Aaa_ServerGroup_Server_TacacsPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_TacacsPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs YANG schema element.
type System_Aaa_ServerGroup_Server_TacacsPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_PortPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/port YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_PortPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_PortPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/port YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_PortPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key-hashed YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key-hashed YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath represents the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath struct {
	*ygot.NodePath
}

// System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny represents the wildcard version of the /openconfig-system/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address YANG schema element.
type System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny struct {
	*ygot.NodePath
}

// Port (leaf): The port number on which to contact the TACACS server
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/port"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/port"
func (n *System_Aaa_ServerGroup_Server_TacacsPath) Port() *System_Aaa_ServerGroup_Server_Tacacs_PortPath {
	return &System_Aaa_ServerGroup_Server_Tacacs_PortPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "port"},
			map[string]interface{}{},
			n,
		),
	}
}

// Port (leaf): The port number on which to contact the TACACS server
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/port"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/port"
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) Port() *System_Aaa_ServerGroup_Server_Tacacs_PortPathAny {
	return &System_Aaa_ServerGroup_Server_Tacacs_PortPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "port"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecretKey (leaf): The unencrypted shared key used between the authentication
// server and the device.
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/secret-key"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key"
func (n *System_Aaa_ServerGroup_Server_TacacsPath) SecretKey() *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath {
	return &System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secret-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecretKey (leaf): The unencrypted shared key used between the authentication
// server and the device.
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/secret-key"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key"
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) SecretKey() *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny {
	return &System_Aaa_ServerGroup_Server_Tacacs_SecretKeyPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secret-key"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecretKeyHashed (leaf): The hashed shared key used between the authentication
// server and the device.
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/secret-key-hashed"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_TacacsPath) SecretKeyHashed() *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath {
	return &System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secret-key-hashed"},
			map[string]interface{}{},
			n,
		),
	}
}

// SecretKeyHashed (leaf): The hashed shared key used between the authentication
// server and the device.
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/secret-key-hashed"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key-hashed"
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) SecretKeyHashed() *System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny {
	return &System_Aaa_ServerGroup_Server_Tacacs_SecretKeyHashedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "secret-key-hashed"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IP address to use in messages to the TACACS server
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/source-address"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address"
func (n *System_Aaa_ServerGroup_Server_TacacsPath) SourceAddress() *System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath {
	return &System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// SourceAddress (leaf): Source IP address to use in messages to the TACACS server
// ----------------------------------------
// Defining module: "openconfig-aaa-tacacs"
// Instantiating module: "openconfig-system"
// Path from parent: "state/source-address"
// Path from root: "/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address"
func (n *System_Aaa_ServerGroup_Server_TacacsPathAny) SourceAddress() *System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny {
	return &System_Aaa_ServerGroup_Server_Tacacs_SourceAddressPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "source-address"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_AlarmPath represents the /openconfig-system/system/alarms/alarm YANG schema element.
type System_AlarmPath struct {
	*ygot.NodePath
}

// System_AlarmPathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm YANG schema element.
type System_AlarmPathAny struct {
	*ygot.NodePath
}

// System_Alarm_IdPath represents the /openconfig-system/system/alarms/alarm/state/id YANG schema element.
type System_Alarm_IdPath struct {
	*ygot.NodePath
}

// System_Alarm_IdPathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm/state/id YANG schema element.
type System_Alarm_IdPathAny struct {
	*ygot.NodePath
}

// System_Alarm_ResourcePath represents the /openconfig-system/system/alarms/alarm/state/resource YANG schema element.
type System_Alarm_ResourcePath struct {
	*ygot.NodePath
}

// System_Alarm_ResourcePathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm/state/resource YANG schema element.
type System_Alarm_ResourcePathAny struct {
	*ygot.NodePath
}

// System_Alarm_SeverityPath represents the /openconfig-system/system/alarms/alarm/state/severity YANG schema element.
type System_Alarm_SeverityPath struct {
	*ygot.NodePath
}

// System_Alarm_SeverityPathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm/state/severity YANG schema element.
type System_Alarm_SeverityPathAny struct {
	*ygot.NodePath
}

// System_Alarm_TextPath represents the /openconfig-system/system/alarms/alarm/state/text YANG schema element.
type System_Alarm_TextPath struct {
	*ygot.NodePath
}

// System_Alarm_TextPathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm/state/text YANG schema element.
type System_Alarm_TextPathAny struct {
	*ygot.NodePath
}

// System_Alarm_TimeCreatedPath represents the /openconfig-system/system/alarms/alarm/state/time-created YANG schema element.
type System_Alarm_TimeCreatedPath struct {
	*ygot.NodePath
}

// System_Alarm_TimeCreatedPathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm/state/time-created YANG schema element.
type System_Alarm_TimeCreatedPathAny struct {
	*ygot.NodePath
}

// System_Alarm_TypeIdPath represents the /openconfig-system/system/alarms/alarm/state/type-id YANG schema element.
type System_Alarm_TypeIdPath struct {
	*ygot.NodePath
}

// System_Alarm_TypeIdPathAny represents the wildcard version of the /openconfig-system/system/alarms/alarm/state/type-id YANG schema element.
type System_Alarm_TypeIdPathAny struct {
	*ygot.NodePath
}

// Id (leaf): Unique ID for the alarm -- this will not be a
// configurable parameter on many implementations
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/id"
// Path from root: "/system/alarms/alarm/state/id"
func (n *System_AlarmPath) Id() *System_Alarm_IdPath {
	return &System_Alarm_IdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Id (leaf): Unique ID for the alarm -- this will not be a
// configurable parameter on many implementations
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/id"
// Path from root: "/system/alarms/alarm/state/id"
func (n *System_AlarmPathAny) Id() *System_Alarm_IdPathAny {
	return &System_Alarm_IdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "id"},
			map[string]interface{}{},
			n,
		),
	}
}

// Resource (leaf): The item that is under alarm within the device. The
// resource may be a reference to an item which is
// defined elsewhere in the model. For example, it
// may be a platform/component, interfaces/interface,
// terminal-device/logical-channels/channel, etc. In this
// case the system should match the name of the referenced
// item exactly. The referenced item could alternatively be
// the path of the item within the model.
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/resource"
// Path from root: "/system/alarms/alarm/state/resource"
func (n *System_AlarmPath) Resource() *System_Alarm_ResourcePath {
	return &System_Alarm_ResourcePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "resource"},
			map[string]interface{}{},
			n,
		),
	}
}

// Resource (leaf): The item that is under alarm within the device. The
// resource may be a reference to an item which is
// defined elsewhere in the model. For example, it
// may be a platform/component, interfaces/interface,
// terminal-device/logical-channels/channel, etc. In this
// case the system should match the name of the referenced
// item exactly. The referenced item could alternatively be
// the path of the item within the model.
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/resource"
// Path from root: "/system/alarms/alarm/state/resource"
func (n *System_AlarmPathAny) Resource() *System_Alarm_ResourcePathAny {
	return &System_Alarm_ResourcePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "resource"},
			map[string]interface{}{},
			n,
		),
	}
}

// Severity (leaf): The severity level indicating the criticality and impact
// of the alarm
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/severity"
// Path from root: "/system/alarms/alarm/state/severity"
func (n *System_AlarmPath) Severity() *System_Alarm_SeverityPath {
	return &System_Alarm_SeverityPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "severity"},
			map[string]interface{}{},
			n,
		),
	}
}

// Severity (leaf): The severity level indicating the criticality and impact
// of the alarm
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/severity"
// Path from root: "/system/alarms/alarm/state/severity"
func (n *System_AlarmPathAny) Severity() *System_Alarm_SeverityPathAny {
	return &System_Alarm_SeverityPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "severity"},
			map[string]interface{}{},
			n,
		),
	}
}

// Text (leaf): The string used to inform operators about the alarm. This
// MUST contain enough information for an operator to be able
// to understand the problem. If this string contains structure,
// this format should be clearly documented for programs to be
// able to parse that information
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/text"
// Path from root: "/system/alarms/alarm/state/text"
func (n *System_AlarmPath) Text() *System_Alarm_TextPath {
	return &System_Alarm_TextPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "text"},
			map[string]interface{}{},
			n,
		),
	}
}

// Text (leaf): The string used to inform operators about the alarm. This
// MUST contain enough information for an operator to be able
// to understand the problem. If this string contains structure,
// this format should be clearly documented for programs to be
// able to parse that information
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/text"
// Path from root: "/system/alarms/alarm/state/text"
func (n *System_AlarmPathAny) Text() *System_Alarm_TextPathAny {
	return &System_Alarm_TextPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "text"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimeCreated (leaf): The time at which the alarm was raised by the system.
// This value is expressed relative to the Unix Epoch.
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/time-created"
// Path from root: "/system/alarms/alarm/state/time-created"
func (n *System_AlarmPath) TimeCreated() *System_Alarm_TimeCreatedPath {
	return &System_Alarm_TimeCreatedPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "time-created"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimeCreated (leaf): The time at which the alarm was raised by the system.
// This value is expressed relative to the Unix Epoch.
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/time-created"
// Path from root: "/system/alarms/alarm/state/time-created"
func (n *System_AlarmPathAny) TimeCreated() *System_Alarm_TimeCreatedPathAny {
	return &System_Alarm_TimeCreatedPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "time-created"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeId (leaf): The abbreviated name of the alarm, for example LOS,
// EQPT, or OTS. Also referred to in different systems as
// condition type, alarm identifier, or alarm mnemonic. It
// is recommended to use the OPENCONFIG_ALARM_TYPE_ID
// identities where possible and only use the string type
// when the desired identityref is not yet defined
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/type-id"
// Path from root: "/system/alarms/alarm/state/type-id"
func (n *System_AlarmPath) TypeId() *System_Alarm_TypeIdPath {
	return &System_Alarm_TypeIdPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// TypeId (leaf): The abbreviated name of the alarm, for example LOS,
// EQPT, or OTS. Also referred to in different systems as
// condition type, alarm identifier, or alarm mnemonic. It
// is recommended to use the OPENCONFIG_ALARM_TYPE_ID
// identities where possible and only use the string type
// when the desired identityref is not yet defined
// ----------------------------------------
// Defining module: "openconfig-alarms"
// Instantiating module: "openconfig-system"
// Path from parent: "state/type-id"
// Path from root: "/system/alarms/alarm/state/type-id"
func (n *System_AlarmPathAny) TypeId() *System_Alarm_TypeIdPathAny {
	return &System_Alarm_TypeIdPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "type-id"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_ClockPath represents the /openconfig-system/system/clock YANG schema element.
type System_ClockPath struct {
	*ygot.NodePath
}

// System_ClockPathAny represents the wildcard version of the /openconfig-system/system/clock YANG schema element.
type System_ClockPathAny struct {
	*ygot.NodePath
}

// System_Clock_TimezoneNamePath represents the /openconfig-system/system/clock/state/timezone-name YANG schema element.
type System_Clock_TimezoneNamePath struct {
	*ygot.NodePath
}

// System_Clock_TimezoneNamePathAny represents the wildcard version of the /openconfig-system/system/clock/state/timezone-name YANG schema element.
type System_Clock_TimezoneNamePathAny struct {
	*ygot.NodePath
}

// TimezoneName (leaf): The TZ database name to use for the system, such
// as 'Europe/Stockholm'.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/timezone-name"
// Path from root: "/system/clock/state/timezone-name"
func (n *System_ClockPath) TimezoneName() *System_Clock_TimezoneNamePath {
	return &System_Clock_TimezoneNamePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timezone-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// TimezoneName (leaf): The TZ database name to use for the system, such
// as 'Europe/Stockholm'.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/timezone-name"
// Path from root: "/system/clock/state/timezone-name"
func (n *System_ClockPathAny) TimezoneName() *System_Clock_TimezoneNamePathAny {
	return &System_Clock_TimezoneNamePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "timezone-name"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_CpuPath represents the /openconfig-system/system/cpus/cpu YANG schema element.
type System_CpuPath struct {
	*ygot.NodePath
}

// System_CpuPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu YANG schema element.
type System_CpuPathAny struct {
	*ygot.NodePath
}

// System_Cpu_IndexPath represents the /openconfig-system/system/cpus/cpu/state/index YANG schema element.
type System_Cpu_IndexPath struct {
	*ygot.NodePath
}

// System_Cpu_IndexPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/index YANG schema element.
type System_Cpu_IndexPathAny struct {
	*ygot.NodePath
}

// HardwareInterrupt (container): Percentage of CPU time spent servicing hardware interrupts.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/hardware-interrupt"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt"
func (n *System_CpuPath) HardwareInterrupt() *System_Cpu_HardwareInterruptPath {
	return &System_Cpu_HardwareInterruptPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hardware-interrupt"},
			map[string]interface{}{},
			n,
		),
	}
}

// HardwareInterrupt (container): Percentage of CPU time spent servicing hardware interrupts.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/hardware-interrupt"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt"
func (n *System_CpuPathAny) HardwareInterrupt() *System_Cpu_HardwareInterruptPathAny {
	return &System_Cpu_HardwareInterruptPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "hardware-interrupt"},
			map[string]interface{}{},
			n,
		),
	}
}

// Idle (container): Percentage of CPU time spent idle.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/idle"
// Path from root: "/system/cpus/cpu/state/idle"
func (n *System_CpuPath) Idle() *System_Cpu_IdlePath {
	return &System_Cpu_IdlePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "idle"},
			map[string]interface{}{},
			n,
		),
	}
}

// Idle (container): Percentage of CPU time spent idle.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/idle"
// Path from root: "/system/cpus/cpu/state/idle"
func (n *System_CpuPathAny) Idle() *System_Cpu_IdlePathAny {
	return &System_Cpu_IdlePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "idle"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): The CPU index for each processor core on the system.  On a
// single-core system, the index should be zero.  The ALL
// index signifies an aggregation of the CPU utilization
// statistics over all cores in the system.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/index"
// Path from root: "/system/cpus/cpu/state/index"
func (n *System_CpuPath) Index() *System_Cpu_IndexPath {
	return &System_Cpu_IndexPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Index (leaf): The CPU index for each processor core on the system.  On a
// single-core system, the index should be zero.  The ALL
// index signifies an aggregation of the CPU utilization
// statistics over all cores in the system.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/index"
// Path from root: "/system/cpus/cpu/state/index"
func (n *System_CpuPathAny) Index() *System_Cpu_IndexPathAny {
	return &System_Cpu_IndexPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "index"},
			map[string]interface{}{},
			n,
		),
	}
}

// Kernel (container): Percentage of CPU time spent running in kernel space.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/kernel"
// Path from root: "/system/cpus/cpu/state/kernel"
func (n *System_CpuPath) Kernel() *System_Cpu_KernelPath {
	return &System_Cpu_KernelPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "kernel"},
			map[string]interface{}{},
			n,
		),
	}
}

// Kernel (container): Percentage of CPU time spent running in kernel space.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/kernel"
// Path from root: "/system/cpus/cpu/state/kernel"
func (n *System_CpuPathAny) Kernel() *System_Cpu_KernelPathAny {
	return &System_Cpu_KernelPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "kernel"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nice (container): Percentage of CPU time spent running low-priority (niced)
// user processes.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/nice"
// Path from root: "/system/cpus/cpu/state/nice"
func (n *System_CpuPath) Nice() *System_Cpu_NicePath {
	return &System_Cpu_NicePath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nice"},
			map[string]interface{}{},
			n,
		),
	}
}

// Nice (container): Percentage of CPU time spent running low-priority (niced)
// user processes.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/nice"
// Path from root: "/system/cpus/cpu/state/nice"
func (n *System_CpuPathAny) Nice() *System_Cpu_NicePathAny {
	return &System_Cpu_NicePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "nice"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftwareInterrupt (container): Percentage of CPU time spent servicing software interrupts
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/software-interrupt"
// Path from root: "/system/cpus/cpu/state/software-interrupt"
func (n *System_CpuPath) SoftwareInterrupt() *System_Cpu_SoftwareInterruptPath {
	return &System_Cpu_SoftwareInterruptPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "software-interrupt"},
			map[string]interface{}{},
			n,
		),
	}
}

// SoftwareInterrupt (container): Percentage of CPU time spent servicing software interrupts
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/software-interrupt"
// Path from root: "/system/cpus/cpu/state/software-interrupt"
func (n *System_CpuPathAny) SoftwareInterrupt() *System_Cpu_SoftwareInterruptPathAny {
	return &System_Cpu_SoftwareInterruptPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "software-interrupt"},
			map[string]interface{}{},
			n,
		),
	}
}

// Total (container): Total CPU utilization.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/total"
// Path from root: "/system/cpus/cpu/state/total"
func (n *System_CpuPath) Total() *System_Cpu_TotalPath {
	return &System_Cpu_TotalPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total"},
			map[string]interface{}{},
			n,
		),
	}
}

// Total (container): Total CPU utilization.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/total"
// Path from root: "/system/cpus/cpu/state/total"
func (n *System_CpuPathAny) Total() *System_Cpu_TotalPathAny {
	return &System_Cpu_TotalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "total"},
			map[string]interface{}{},
			n,
		),
	}
}

// User (container): Percentage of CPU time spent running in user space.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/user"
// Path from root: "/system/cpus/cpu/state/user"
func (n *System_CpuPath) User() *System_Cpu_UserPath {
	return &System_Cpu_UserPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "user"},
			map[string]interface{}{},
			n,
		),
	}
}

// User (container): Percentage of CPU time spent running in user space.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/user"
// Path from root: "/system/cpus/cpu/state/user"
func (n *System_CpuPathAny) User() *System_Cpu_UserPathAny {
	return &System_Cpu_UserPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "user"},
			map[string]interface{}{},
			n,
		),
	}
}

// Wait (container): Percentage of CPU time spent waiting for I/O.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/wait"
// Path from root: "/system/cpus/cpu/state/wait"
func (n *System_CpuPath) Wait() *System_Cpu_WaitPath {
	return &System_Cpu_WaitPath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "wait"},
			map[string]interface{}{},
			n,
		),
	}
}

// Wait (container): Percentage of CPU time spent waiting for I/O.
// ----------------------------------------
// Defining module: "openconfig-system"
// Instantiating module: "openconfig-system"
// Path from parent: "state/wait"
// Path from root: "/system/cpus/cpu/state/wait"
func (n *System_CpuPathAny) Wait() *System_Cpu_WaitPathAny {
	return &System_Cpu_WaitPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "wait"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_HardwareInterruptPath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt YANG schema element.
type System_Cpu_HardwareInterruptPath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterruptPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt YANG schema element.
type System_Cpu_HardwareInterruptPathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_AvgPath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/avg YANG schema element.
type System_Cpu_HardwareInterrupt_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/avg YANG schema element.
type System_Cpu_HardwareInterrupt_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_InstantPath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/instant YANG schema element.
type System_Cpu_HardwareInterrupt_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/instant YANG schema element.
type System_Cpu_HardwareInterrupt_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/interval YANG schema element.
type System_Cpu_HardwareInterrupt_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/interval YANG schema element.
type System_Cpu_HardwareInterrupt_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MaxPath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/max YANG schema element.
type System_Cpu_HardwareInterrupt_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/max YANG schema element.
type System_Cpu_HardwareInterrupt_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/max-time YANG schema element.
type System_Cpu_HardwareInterrupt_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/max-time YANG schema element.
type System_Cpu_HardwareInterrupt_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MinPath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/min YANG schema element.
type System_Cpu_HardwareInterrupt_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/min YANG schema element.
type System_Cpu_HardwareInterrupt_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/min-time YANG schema element.
type System_Cpu_HardwareInterrupt_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_HardwareInterrupt_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/hardware-interrupt/min-time YANG schema element.
type System_Cpu_HardwareInterrupt_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/avg"
func (n *System_Cpu_HardwareInterruptPath) Avg() *System_Cpu_HardwareInterrupt_AvgPath {
	return &System_Cpu_HardwareInterrupt_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/avg"
func (n *System_Cpu_HardwareInterruptPathAny) Avg() *System_Cpu_HardwareInterrupt_AvgPathAny {
	return &System_Cpu_HardwareInterrupt_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/instant"
func (n *System_Cpu_HardwareInterruptPath) Instant() *System_Cpu_HardwareInterrupt_InstantPath {
	return &System_Cpu_HardwareInterrupt_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/instant"
func (n *System_Cpu_HardwareInterruptPathAny) Instant() *System_Cpu_HardwareInterrupt_InstantPathAny {
	return &System_Cpu_HardwareInterrupt_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/interval"
func (n *System_Cpu_HardwareInterruptPath) Interval() *System_Cpu_HardwareInterrupt_IntervalPath {
	return &System_Cpu_HardwareInterrupt_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/interval"
func (n *System_Cpu_HardwareInterruptPathAny) Interval() *System_Cpu_HardwareInterrupt_IntervalPathAny {
	return &System_Cpu_HardwareInterrupt_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/max"
func (n *System_Cpu_HardwareInterruptPath) Max() *System_Cpu_HardwareInterrupt_MaxPath {
	return &System_Cpu_HardwareInterrupt_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/max"
func (n *System_Cpu_HardwareInterruptPathAny) Max() *System_Cpu_HardwareInterrupt_MaxPathAny {
	return &System_Cpu_HardwareInterrupt_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/max-time"
func (n *System_Cpu_HardwareInterruptPath) MaxTime() *System_Cpu_HardwareInterrupt_MaxTimePath {
	return &System_Cpu_HardwareInterrupt_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/max-time"
func (n *System_Cpu_HardwareInterruptPathAny) MaxTime() *System_Cpu_HardwareInterrupt_MaxTimePathAny {
	return &System_Cpu_HardwareInterrupt_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/min"
func (n *System_Cpu_HardwareInterruptPath) Min() *System_Cpu_HardwareInterrupt_MinPath {
	return &System_Cpu_HardwareInterrupt_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/min"
func (n *System_Cpu_HardwareInterruptPathAny) Min() *System_Cpu_HardwareInterrupt_MinPathAny {
	return &System_Cpu_HardwareInterrupt_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/min-time"
func (n *System_Cpu_HardwareInterruptPath) MinTime() *System_Cpu_HardwareInterrupt_MinTimePath {
	return &System_Cpu_HardwareInterrupt_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/hardware-interrupt/min-time"
func (n *System_Cpu_HardwareInterruptPathAny) MinTime() *System_Cpu_HardwareInterrupt_MinTimePathAny {
	return &System_Cpu_HardwareInterrupt_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_IdlePath represents the /openconfig-system/system/cpus/cpu/state/idle YANG schema element.
type System_Cpu_IdlePath struct {
	*ygot.NodePath
}

// System_Cpu_IdlePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle YANG schema element.
type System_Cpu_IdlePathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_AvgPath represents the /openconfig-system/system/cpus/cpu/state/idle/avg YANG schema element.
type System_Cpu_Idle_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/avg YANG schema element.
type System_Cpu_Idle_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_InstantPath represents the /openconfig-system/system/cpus/cpu/state/idle/instant YANG schema element.
type System_Cpu_Idle_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/instant YANG schema element.
type System_Cpu_Idle_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/idle/interval YANG schema element.
type System_Cpu_Idle_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/interval YANG schema element.
type System_Cpu_Idle_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MaxPath represents the /openconfig-system/system/cpus/cpu/state/idle/max YANG schema element.
type System_Cpu_Idle_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/max YANG schema element.
type System_Cpu_Idle_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/idle/max-time YANG schema element.
type System_Cpu_Idle_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/max-time YANG schema element.
type System_Cpu_Idle_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MinPath represents the /openconfig-system/system/cpus/cpu/state/idle/min YANG schema element.
type System_Cpu_Idle_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/min YANG schema element.
type System_Cpu_Idle_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/idle/min-time YANG schema element.
type System_Cpu_Idle_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Idle_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/idle/min-time YANG schema element.
type System_Cpu_Idle_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/idle/avg"
func (n *System_Cpu_IdlePath) Avg() *System_Cpu_Idle_AvgPath {
	return &System_Cpu_Idle_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/idle/avg"
func (n *System_Cpu_IdlePathAny) Avg() *System_Cpu_Idle_AvgPathAny {
	return &System_Cpu_Idle_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/idle/instant"
func (n *System_Cpu_IdlePath) Instant() *System_Cpu_Idle_InstantPath {
	return &System_Cpu_Idle_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/idle/instant"
func (n *System_Cpu_IdlePathAny) Instant() *System_Cpu_Idle_InstantPathAny {
	return &System_Cpu_Idle_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/idle/interval"
func (n *System_Cpu_IdlePath) Interval() *System_Cpu_Idle_IntervalPath {
	return &System_Cpu_Idle_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/idle/interval"
func (n *System_Cpu_IdlePathAny) Interval() *System_Cpu_Idle_IntervalPathAny {
	return &System_Cpu_Idle_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/idle/max"
func (n *System_Cpu_IdlePath) Max() *System_Cpu_Idle_MaxPath {
	return &System_Cpu_Idle_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/idle/max"
func (n *System_Cpu_IdlePathAny) Max() *System_Cpu_Idle_MaxPathAny {
	return &System_Cpu_Idle_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/idle/max-time"
func (n *System_Cpu_IdlePath) MaxTime() *System_Cpu_Idle_MaxTimePath {
	return &System_Cpu_Idle_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/idle/max-time"
func (n *System_Cpu_IdlePathAny) MaxTime() *System_Cpu_Idle_MaxTimePathAny {
	return &System_Cpu_Idle_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/idle/min"
func (n *System_Cpu_IdlePath) Min() *System_Cpu_Idle_MinPath {
	return &System_Cpu_Idle_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/idle/min"
func (n *System_Cpu_IdlePathAny) Min() *System_Cpu_Idle_MinPathAny {
	return &System_Cpu_Idle_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/idle/min-time"
func (n *System_Cpu_IdlePath) MinTime() *System_Cpu_Idle_MinTimePath {
	return &System_Cpu_Idle_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/idle/min-time"
func (n *System_Cpu_IdlePathAny) MinTime() *System_Cpu_Idle_MinTimePathAny {
	return &System_Cpu_Idle_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_KernelPath represents the /openconfig-system/system/cpus/cpu/state/kernel YANG schema element.
type System_Cpu_KernelPath struct {
	*ygot.NodePath
}

// System_Cpu_KernelPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel YANG schema element.
type System_Cpu_KernelPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_AvgPath represents the /openconfig-system/system/cpus/cpu/state/kernel/avg YANG schema element.
type System_Cpu_Kernel_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/avg YANG schema element.
type System_Cpu_Kernel_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_InstantPath represents the /openconfig-system/system/cpus/cpu/state/kernel/instant YANG schema element.
type System_Cpu_Kernel_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/instant YANG schema element.
type System_Cpu_Kernel_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/kernel/interval YANG schema element.
type System_Cpu_Kernel_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/interval YANG schema element.
type System_Cpu_Kernel_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MaxPath represents the /openconfig-system/system/cpus/cpu/state/kernel/max YANG schema element.
type System_Cpu_Kernel_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/max YANG schema element.
type System_Cpu_Kernel_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/kernel/max-time YANG schema element.
type System_Cpu_Kernel_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/max-time YANG schema element.
type System_Cpu_Kernel_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MinPath represents the /openconfig-system/system/cpus/cpu/state/kernel/min YANG schema element.
type System_Cpu_Kernel_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/min YANG schema element.
type System_Cpu_Kernel_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/kernel/min-time YANG schema element.
type System_Cpu_Kernel_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Kernel_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/kernel/min-time YANG schema element.
type System_Cpu_Kernel_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/kernel/avg"
func (n *System_Cpu_KernelPath) Avg() *System_Cpu_Kernel_AvgPath {
	return &System_Cpu_Kernel_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/kernel/avg"
func (n *System_Cpu_KernelPathAny) Avg() *System_Cpu_Kernel_AvgPathAny {
	return &System_Cpu_Kernel_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/kernel/instant"
func (n *System_Cpu_KernelPath) Instant() *System_Cpu_Kernel_InstantPath {
	return &System_Cpu_Kernel_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/kernel/instant"
func (n *System_Cpu_KernelPathAny) Instant() *System_Cpu_Kernel_InstantPathAny {
	return &System_Cpu_Kernel_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/kernel/interval"
func (n *System_Cpu_KernelPath) Interval() *System_Cpu_Kernel_IntervalPath {
	return &System_Cpu_Kernel_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/kernel/interval"
func (n *System_Cpu_KernelPathAny) Interval() *System_Cpu_Kernel_IntervalPathAny {
	return &System_Cpu_Kernel_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/kernel/max"
func (n *System_Cpu_KernelPath) Max() *System_Cpu_Kernel_MaxPath {
	return &System_Cpu_Kernel_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/kernel/max"
func (n *System_Cpu_KernelPathAny) Max() *System_Cpu_Kernel_MaxPathAny {
	return &System_Cpu_Kernel_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/kernel/max-time"
func (n *System_Cpu_KernelPath) MaxTime() *System_Cpu_Kernel_MaxTimePath {
	return &System_Cpu_Kernel_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/kernel/max-time"
func (n *System_Cpu_KernelPathAny) MaxTime() *System_Cpu_Kernel_MaxTimePathAny {
	return &System_Cpu_Kernel_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/kernel/min"
func (n *System_Cpu_KernelPath) Min() *System_Cpu_Kernel_MinPath {
	return &System_Cpu_Kernel_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/kernel/min"
func (n *System_Cpu_KernelPathAny) Min() *System_Cpu_Kernel_MinPathAny {
	return &System_Cpu_Kernel_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/kernel/min-time"
func (n *System_Cpu_KernelPath) MinTime() *System_Cpu_Kernel_MinTimePath {
	return &System_Cpu_Kernel_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/kernel/min-time"
func (n *System_Cpu_KernelPathAny) MinTime() *System_Cpu_Kernel_MinTimePathAny {
	return &System_Cpu_Kernel_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_NicePath represents the /openconfig-system/system/cpus/cpu/state/nice YANG schema element.
type System_Cpu_NicePath struct {
	*ygot.NodePath
}

// System_Cpu_NicePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice YANG schema element.
type System_Cpu_NicePathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_AvgPath represents the /openconfig-system/system/cpus/cpu/state/nice/avg YANG schema element.
type System_Cpu_Nice_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/avg YANG schema element.
type System_Cpu_Nice_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_InstantPath represents the /openconfig-system/system/cpus/cpu/state/nice/instant YANG schema element.
type System_Cpu_Nice_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/instant YANG schema element.
type System_Cpu_Nice_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/nice/interval YANG schema element.
type System_Cpu_Nice_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/interval YANG schema element.
type System_Cpu_Nice_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MaxPath represents the /openconfig-system/system/cpus/cpu/state/nice/max YANG schema element.
type System_Cpu_Nice_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/max YANG schema element.
type System_Cpu_Nice_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/nice/max-time YANG schema element.
type System_Cpu_Nice_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/max-time YANG schema element.
type System_Cpu_Nice_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MinPath represents the /openconfig-system/system/cpus/cpu/state/nice/min YANG schema element.
type System_Cpu_Nice_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/min YANG schema element.
type System_Cpu_Nice_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/nice/min-time YANG schema element.
type System_Cpu_Nice_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Nice_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/nice/min-time YANG schema element.
type System_Cpu_Nice_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/nice/avg"
func (n *System_Cpu_NicePath) Avg() *System_Cpu_Nice_AvgPath {
	return &System_Cpu_Nice_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/nice/avg"
func (n *System_Cpu_NicePathAny) Avg() *System_Cpu_Nice_AvgPathAny {
	return &System_Cpu_Nice_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/nice/instant"
func (n *System_Cpu_NicePath) Instant() *System_Cpu_Nice_InstantPath {
	return &System_Cpu_Nice_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/nice/instant"
func (n *System_Cpu_NicePathAny) Instant() *System_Cpu_Nice_InstantPathAny {
	return &System_Cpu_Nice_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/nice/interval"
func (n *System_Cpu_NicePath) Interval() *System_Cpu_Nice_IntervalPath {
	return &System_Cpu_Nice_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/nice/interval"
func (n *System_Cpu_NicePathAny) Interval() *System_Cpu_Nice_IntervalPathAny {
	return &System_Cpu_Nice_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/nice/max"
func (n *System_Cpu_NicePath) Max() *System_Cpu_Nice_MaxPath {
	return &System_Cpu_Nice_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/nice/max"
func (n *System_Cpu_NicePathAny) Max() *System_Cpu_Nice_MaxPathAny {
	return &System_Cpu_Nice_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/nice/max-time"
func (n *System_Cpu_NicePath) MaxTime() *System_Cpu_Nice_MaxTimePath {
	return &System_Cpu_Nice_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/nice/max-time"
func (n *System_Cpu_NicePathAny) MaxTime() *System_Cpu_Nice_MaxTimePathAny {
	return &System_Cpu_Nice_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/nice/min"
func (n *System_Cpu_NicePath) Min() *System_Cpu_Nice_MinPath {
	return &System_Cpu_Nice_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/nice/min"
func (n *System_Cpu_NicePathAny) Min() *System_Cpu_Nice_MinPathAny {
	return &System_Cpu_Nice_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/nice/min-time"
func (n *System_Cpu_NicePath) MinTime() *System_Cpu_Nice_MinTimePath {
	return &System_Cpu_Nice_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/nice/min-time"
func (n *System_Cpu_NicePathAny) MinTime() *System_Cpu_Nice_MinTimePathAny {
	return &System_Cpu_Nice_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_SoftwareInterruptPath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt YANG schema element.
type System_Cpu_SoftwareInterruptPath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterruptPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt YANG schema element.
type System_Cpu_SoftwareInterruptPathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_AvgPath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/avg YANG schema element.
type System_Cpu_SoftwareInterrupt_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/avg YANG schema element.
type System_Cpu_SoftwareInterrupt_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_InstantPath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/instant YANG schema element.
type System_Cpu_SoftwareInterrupt_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/instant YANG schema element.
type System_Cpu_SoftwareInterrupt_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/interval YANG schema element.
type System_Cpu_SoftwareInterrupt_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/interval YANG schema element.
type System_Cpu_SoftwareInterrupt_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MaxPath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/max YANG schema element.
type System_Cpu_SoftwareInterrupt_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/max YANG schema element.
type System_Cpu_SoftwareInterrupt_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/max-time YANG schema element.
type System_Cpu_SoftwareInterrupt_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/max-time YANG schema element.
type System_Cpu_SoftwareInterrupt_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MinPath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/min YANG schema element.
type System_Cpu_SoftwareInterrupt_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/min YANG schema element.
type System_Cpu_SoftwareInterrupt_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/software-interrupt/min-time YANG schema element.
type System_Cpu_SoftwareInterrupt_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_SoftwareInterrupt_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/software-interrupt/min-time YANG schema element.
type System_Cpu_SoftwareInterrupt_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/software-interrupt/avg"
func (n *System_Cpu_SoftwareInterruptPath) Avg() *System_Cpu_SoftwareInterrupt_AvgPath {
	return &System_Cpu_SoftwareInterrupt_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/software-interrupt/avg"
func (n *System_Cpu_SoftwareInterruptPathAny) Avg() *System_Cpu_SoftwareInterrupt_AvgPathAny {
	return &System_Cpu_SoftwareInterrupt_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/software-interrupt/instant"
func (n *System_Cpu_SoftwareInterruptPath) Instant() *System_Cpu_SoftwareInterrupt_InstantPath {
	return &System_Cpu_SoftwareInterrupt_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/software-interrupt/instant"
func (n *System_Cpu_SoftwareInterruptPathAny) Instant() *System_Cpu_SoftwareInterrupt_InstantPathAny {
	return &System_Cpu_SoftwareInterrupt_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/software-interrupt/interval"
func (n *System_Cpu_SoftwareInterruptPath) Interval() *System_Cpu_SoftwareInterrupt_IntervalPath {
	return &System_Cpu_SoftwareInterrupt_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/software-interrupt/interval"
func (n *System_Cpu_SoftwareInterruptPathAny) Interval() *System_Cpu_SoftwareInterrupt_IntervalPathAny {
	return &System_Cpu_SoftwareInterrupt_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/software-interrupt/max"
func (n *System_Cpu_SoftwareInterruptPath) Max() *System_Cpu_SoftwareInterrupt_MaxPath {
	return &System_Cpu_SoftwareInterrupt_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/software-interrupt/max"
func (n *System_Cpu_SoftwareInterruptPathAny) Max() *System_Cpu_SoftwareInterrupt_MaxPathAny {
	return &System_Cpu_SoftwareInterrupt_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/software-interrupt/max-time"
func (n *System_Cpu_SoftwareInterruptPath) MaxTime() *System_Cpu_SoftwareInterrupt_MaxTimePath {
	return &System_Cpu_SoftwareInterrupt_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/software-interrupt/max-time"
func (n *System_Cpu_SoftwareInterruptPathAny) MaxTime() *System_Cpu_SoftwareInterrupt_MaxTimePathAny {
	return &System_Cpu_SoftwareInterrupt_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/software-interrupt/min"
func (n *System_Cpu_SoftwareInterruptPath) Min() *System_Cpu_SoftwareInterrupt_MinPath {
	return &System_Cpu_SoftwareInterrupt_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/software-interrupt/min"
func (n *System_Cpu_SoftwareInterruptPathAny) Min() *System_Cpu_SoftwareInterrupt_MinPathAny {
	return &System_Cpu_SoftwareInterrupt_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/software-interrupt/min-time"
func (n *System_Cpu_SoftwareInterruptPath) MinTime() *System_Cpu_SoftwareInterrupt_MinTimePath {
	return &System_Cpu_SoftwareInterrupt_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/software-interrupt/min-time"
func (n *System_Cpu_SoftwareInterruptPathAny) MinTime() *System_Cpu_SoftwareInterrupt_MinTimePathAny {
	return &System_Cpu_SoftwareInterrupt_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_TotalPath represents the /openconfig-system/system/cpus/cpu/state/total YANG schema element.
type System_Cpu_TotalPath struct {
	*ygot.NodePath
}

// System_Cpu_TotalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total YANG schema element.
type System_Cpu_TotalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_AvgPath represents the /openconfig-system/system/cpus/cpu/state/total/avg YANG schema element.
type System_Cpu_Total_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_Total_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/avg YANG schema element.
type System_Cpu_Total_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_InstantPath represents the /openconfig-system/system/cpus/cpu/state/total/instant YANG schema element.
type System_Cpu_Total_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_Total_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/instant YANG schema element.
type System_Cpu_Total_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/total/interval YANG schema element.
type System_Cpu_Total_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_Total_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/interval YANG schema element.
type System_Cpu_Total_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_MaxPath represents the /openconfig-system/system/cpus/cpu/state/total/max YANG schema element.
type System_Cpu_Total_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_Total_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/max YANG schema element.
type System_Cpu_Total_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/total/max-time YANG schema element.
type System_Cpu_Total_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Total_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/max-time YANG schema element.
type System_Cpu_Total_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_MinPath represents the /openconfig-system/system/cpus/cpu/state/total/min YANG schema element.
type System_Cpu_Total_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_Total_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/min YANG schema element.
type System_Cpu_Total_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_Total_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/total/min-time YANG schema element.
type System_Cpu_Total_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_Total_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/total/min-time YANG schema element.
type System_Cpu_Total_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/total/avg"
func (n *System_Cpu_TotalPath) Avg() *System_Cpu_Total_AvgPath {
	return &System_Cpu_Total_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/total/avg"
func (n *System_Cpu_TotalPathAny) Avg() *System_Cpu_Total_AvgPathAny {
	return &System_Cpu_Total_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/total/instant"
func (n *System_Cpu_TotalPath) Instant() *System_Cpu_Total_InstantPath {
	return &System_Cpu_Total_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/total/instant"
func (n *System_Cpu_TotalPathAny) Instant() *System_Cpu_Total_InstantPathAny {
	return &System_Cpu_Total_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/total/interval"
func (n *System_Cpu_TotalPath) Interval() *System_Cpu_Total_IntervalPath {
	return &System_Cpu_Total_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/total/interval"
func (n *System_Cpu_TotalPathAny) Interval() *System_Cpu_Total_IntervalPathAny {
	return &System_Cpu_Total_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/total/max"
func (n *System_Cpu_TotalPath) Max() *System_Cpu_Total_MaxPath {
	return &System_Cpu_Total_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/total/max"
func (n *System_Cpu_TotalPathAny) Max() *System_Cpu_Total_MaxPathAny {
	return &System_Cpu_Total_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/total/max-time"
func (n *System_Cpu_TotalPath) MaxTime() *System_Cpu_Total_MaxTimePath {
	return &System_Cpu_Total_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/total/max-time"
func (n *System_Cpu_TotalPathAny) MaxTime() *System_Cpu_Total_MaxTimePathAny {
	return &System_Cpu_Total_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/total/min"
func (n *System_Cpu_TotalPath) Min() *System_Cpu_Total_MinPath {
	return &System_Cpu_Total_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/total/min"
func (n *System_Cpu_TotalPathAny) Min() *System_Cpu_Total_MinPathAny {
	return &System_Cpu_Total_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/total/min-time"
func (n *System_Cpu_TotalPath) MinTime() *System_Cpu_Total_MinTimePath {
	return &System_Cpu_Total_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/total/min-time"
func (n *System_Cpu_TotalPathAny) MinTime() *System_Cpu_Total_MinTimePathAny {
	return &System_Cpu_Total_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// System_Cpu_UserPath represents the /openconfig-system/system/cpus/cpu/state/user YANG schema element.
type System_Cpu_UserPath struct {
	*ygot.NodePath
}

// System_Cpu_UserPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user YANG schema element.
type System_Cpu_UserPathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_AvgPath represents the /openconfig-system/system/cpus/cpu/state/user/avg YANG schema element.
type System_Cpu_User_AvgPath struct {
	*ygot.NodePath
}

// System_Cpu_User_AvgPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/avg YANG schema element.
type System_Cpu_User_AvgPathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_InstantPath represents the /openconfig-system/system/cpus/cpu/state/user/instant YANG schema element.
type System_Cpu_User_InstantPath struct {
	*ygot.NodePath
}

// System_Cpu_User_InstantPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/instant YANG schema element.
type System_Cpu_User_InstantPathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_IntervalPath represents the /openconfig-system/system/cpus/cpu/state/user/interval YANG schema element.
type System_Cpu_User_IntervalPath struct {
	*ygot.NodePath
}

// System_Cpu_User_IntervalPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/interval YANG schema element.
type System_Cpu_User_IntervalPathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_MaxPath represents the /openconfig-system/system/cpus/cpu/state/user/max YANG schema element.
type System_Cpu_User_MaxPath struct {
	*ygot.NodePath
}

// System_Cpu_User_MaxPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/max YANG schema element.
type System_Cpu_User_MaxPathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_MaxTimePath represents the /openconfig-system/system/cpus/cpu/state/user/max-time YANG schema element.
type System_Cpu_User_MaxTimePath struct {
	*ygot.NodePath
}

// System_Cpu_User_MaxTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/max-time YANG schema element.
type System_Cpu_User_MaxTimePathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_MinPath represents the /openconfig-system/system/cpus/cpu/state/user/min YANG schema element.
type System_Cpu_User_MinPath struct {
	*ygot.NodePath
}

// System_Cpu_User_MinPathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/min YANG schema element.
type System_Cpu_User_MinPathAny struct {
	*ygot.NodePath
}

// System_Cpu_User_MinTimePath represents the /openconfig-system/system/cpus/cpu/state/user/min-time YANG schema element.
type System_Cpu_User_MinTimePath struct {
	*ygot.NodePath
}

// System_Cpu_User_MinTimePathAny represents the wildcard version of the /openconfig-system/system/cpus/cpu/state/user/min-time YANG schema element.
type System_Cpu_User_MinTimePathAny struct {
	*ygot.NodePath
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/user/avg"
func (n *System_Cpu_UserPath) Avg() *System_Cpu_User_AvgPath {
	return &System_Cpu_User_AvgPath{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Avg (leaf): The arithmetic mean value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "avg"
// Path from root: "/system/cpus/cpu/state/user/avg"
func (n *System_Cpu_UserPathAny) Avg() *System_Cpu_User_AvgPathAny {
	return &System_Cpu_User_AvgPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"avg"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/user/instant"
func (n *System_Cpu_UserPath) Instant() *System_Cpu_User_InstantPath {
	return &System_Cpu_User_InstantPath{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Instant (leaf): The instantaneous percentage value.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "instant"
// Path from root: "/system/cpus/cpu/state/user/instant"
func (n *System_Cpu_UserPathAny) Instant() *System_Cpu_User_InstantPathAny {
	return &System_Cpu_User_InstantPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"instant"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/user/interval"
func (n *System_Cpu_UserPath) Interval() *System_Cpu_User_IntervalPath {
	return &System_Cpu_User_IntervalPath{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Interval (leaf): If supported by the system, this reports the time interval
// over which the min/max/average statistics are computed by
// the system.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "interval"
// Path from root: "/system/cpus/cpu/state/user/interval"
func (n *System_Cpu_UserPathAny) Interval() *System_Cpu_User_IntervalPathAny {
	return &System_Cpu_User_IntervalPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"interval"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/user/max"
func (n *System_Cpu_UserPath) Max() *System_Cpu_User_MaxPath {
	return &System_Cpu_User_MaxPath{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// Max (leaf): The maximum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max"
// Path from root: "/system/cpus/cpu/state/user/max"
func (n *System_Cpu_UserPathAny) Max() *System_Cpu_User_MaxPathAny {
	return &System_Cpu_User_MaxPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/user/max-time"
func (n *System_Cpu_UserPath) MaxTime() *System_Cpu_User_MaxTimePath {
	return &System_Cpu_User_MaxTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MaxTime (leaf): The absolute time at which the maximum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "max-time"
// Path from root: "/system/cpus/cpu/state/user/max-time"
func (n *System_Cpu_UserPathAny) MaxTime() *System_Cpu_User_MaxTimePathAny {
	return &System_Cpu_User_MaxTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"max-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/user/min"
func (n *System_Cpu_UserPath) Min() *System_Cpu_User_MinPath {
	return &System_Cpu_User_MinPath{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// Min (leaf): The minimum value of the percentage measure of the
// statistic over the time interval.
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min"
// Path from root: "/system/cpus/cpu/state/user/min"
func (n *System_Cpu_UserPathAny) Min() *System_Cpu_User_MinPathAny {
	return &System_Cpu_User_MinPathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/user/min-time"
func (n *System_Cpu_UserPath) MinTime() *System_Cpu_User_MinTimePath {
	return &System_Cpu_User_MinTimePath{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}

// MinTime (leaf): The absolute time at which the minimum value occurred.
// The value is the timestamp in nanoseconds relative to
//
//	the Unix Epoch (Jan 1, 1970 00:00:00 UTC).
//
// ----------------------------------------
// Defining module: "openconfig-types"
// Instantiating module: "openconfig-system"
// Path from parent: "min-time"
// Path from root: "/system/cpus/cpu/state/user/min-time"
func (n *System_Cpu_UserPathAny) MinTime() *System_Cpu_User_MinTimePathAny {
	return &System_Cpu_User_MinTimePathAny{
		NodePath: ygot.NewNodePath(
			[]string{"min-time"},
			map[string]interface{}{},
			n,
		),
	}
}
